(function(a,b){typeof exports==='object'&&typeof module!=='undefined'?b(exports):typeof define==='function'&&define.amd?define(['exports'],b):(b((a.THREE=a.THREE||{})));}(this,(function(a){'use strict';if(Number.EPSILON===undefined)Number.EPSILON=Math.pow(2,-52);if(Number.isInteger===undefined)Number.isInteger=function(a){return typeof a==='number'&&isFinite(a)&&Math.floor(a)===a;};if(Math.sign===undefined)Math.sign=function(a){return(a<0)?-1:(a>0)?1:+a;};if(Function.prototype.name===undefined)Object.defineProperty(Function.prototype,'name',{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1];}});if(Object.assign===undefined)(function(){Object.assign=function(a){'use strict';if(a===undefined||a===null)throw new TypeError('Cannot convert undefined or null to object');var b=Object(a);for(var c=1;c<arguments.length;c++){var d=arguments[c];if(d!==undefined&&d!==null)for(var e in d)if(Object.prototype.hasOwnProperty.call(d,e))b[e]=d[e];}return b;};})();function b(){}Object.assign(b.prototype,{addEventListener:function(a,b){if(this._listeners===undefined)this._listeners={};var c=this._listeners;if(c[a]===undefined)c[a]=[];if(c[a].indexOf(b)===-1)c[a].push(b);},hasEventListener:function(a,b){if(this._listeners===undefined)return false;var c=this._listeners;return c[a]!==undefined&&c[a].indexOf(b)!==-1;},removeEventListener:function(a,b){if(this._listeners===undefined)return;var c=this._listeners;var d=c[a];if(d!==undefined){var e=d.indexOf(b);if(e!==-1)d.splice(e,1);}},dispatchEvent:function(a){if(this._listeners===undefined)return;var b=this._listeners;var c=b[a.type];if(c!==undefined){a.target=this;var d=c.slice(0);for(var e=0,f=d.length;e<f;e++)d[e].call(this,a);}}});var c='87';var d={LEFT:0,MIDDLE:1,RIGHT:2};var e=0;var f=1;var g=2;var h=3;var i=0;var j=1;var k=0;var l=1;var m=2;var n=0;var o=1;var p=2;var q=1;var r=2;var s=0;var t=1;var u=2;var v=0;var w=1;var x=2;var y=3;var z=4;var A=5;var B=100;var C=101;var D=102;var E=103;var F=104;var G=200;var H=201;var I=202;var J=203;var K=204;var L=205;var M=206;var N=207;var O=208;var P=209;var Q=210;var R=0;var S=1;var T=2;var U=3;var V=4;var W=5;var X=6;var Y=7;var Z=0;var ab=1;var ac=2;var ad=0;var ae=1;var af=2;var ag=3;var ah=4;var ai=300;var aj=301;var ak=302;var al=303;var am=304;var an=305;var ao=306;var ap=307;var aq=1000;var ar=1001;var as=1002;var at=1003;var au=1004;var av=1005;var aw=1006;var ax=1007;var ay=1008;var az=1009;var aA=1010;var aB=1011;var aC=1012;var aD=1013;var aE=1014;var aF=1015;var aG=1016;var aH=1017;var aI=1018;var aJ=1019;var aK=1020;var aL=1021;var aM=1022;var aN=1023;var aO=1024;var aP=1025;var aQ=aN;var aR=1026;var aS=1027;var aT=2001;var aU=2002;var aV=2003;var aW=2004;var aX=2100;var aY=2101;var aZ=2102;var bc=2103;var bd=2151;var be=2200;var bf=2201;var bg=2202;var bh=2300;var bi=2301;var bj=2302;var bk=2400;var bl=2401;var bm=2402;var bn=0;var bo=1;var bp=2;var bq=3000;var br=3001;var bs=3007;var bt=3002;var bu=3003;var bv=3004;var bw=3005;var bx=3006;var by=3200;var bz=3201;var bA={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var a='0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');var b=new Array(36);var c=0,d;return function e(){for(var e=0;e<36;e++)if(e===8||e===13||e===18||e===23)b[e]='-';else if(e===14)b[e]='4';else{if(c<=0x02)c=0x2000000+(Math.random()*0x1000000)|0;d=c&0xf;c=c>>4;b[e]=a[(e===19)?(d&0x3)|0x8:d];}return b.join('');};}(),clamp:function(a,b,c){return Math.max(b,Math.min(c,a));},euclideanModulo:function(a,b){return((a%b)+b)%b;},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b);},lerp:function(a,b,c){return(1-c)*a+c*b;},smoothstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*(3-2*a);},smootherstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*a*(a*(a*6-15)+10);},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1));},randFloat:function(a,b){return a+Math.random()*(b-a);},randFloatSpread:function(a){return a*(0.5-Math.random());},degToRad:function(a){return a*bA.DEG2RAD;},radToDeg:function(a){return a*bA.RAD2DEG;},isPowerOfTwo:function(a){return(a&(a-1))===0&&a!==0;},nearestPowerOfTwo:function(a){return Math.pow(2,Math.round(Math.log(a)/Math.LN2));},nextPowerOfTwo:function(a){a--;a|=a>>1;a|=a>>2;a|=a>>4;a|=a>>8;a|=a>>16;a++;return a;}};function bB(a,b){this.x=a||0;this.y=b||0;}Object.defineProperties(bB.prototype,{"width":{get:function(){return this.x;},set:function(a){this.x=a;}},"height":{get:function(){return this.y;},set:function(a){this.y=a;}}});Object.assign(bB.prototype,{isVector2:true,set:function(a,b){this.x=a;this.y=b;return this;},setScalar:function(a){this.x=a;this.y=a;return this;},setX:function(a){this.x=a;return this;},setY:function(a){this.y=a;return this;},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw new Error('index is out of range: '+a);}return this;},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw new Error('index is out of range: '+a);}},clone:function(){return new this.constructor(this.x,this.y);},copy:function(a){this.x=a.x;this.y=a.y;return this;},add:function(a,b){if(b!==undefined){console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(a,b);}this.x+=a.x;this.y+=a.y;return this;},addScalar:function(a){this.x+=a;this.y+=a;return this;},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this;},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;return this;},sub:function(a,b){if(b!==undefined){console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(a,b);}this.x-=a.x;this.y-=a.y;return this;},subScalar:function(a){this.x-=a;this.y-=a;return this;},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this;},multiply:function(a){this.x*=a.x;this.y*=a.y;return this;},multiplyScalar:function(a){this.x*=a;this.y*=a;return this;},divide:function(a){this.x/=a.x;this.y/=a.y;return this;},divideScalar:function(a){return this.multiplyScalar(1/a);},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);return this;},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);return this;},clamp:function(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));return this;},clampScalar:function(){var a=new bB();var b=new bB();return function c(c,d){a.set(c,c);b.set(d,d);return this.clamp(a,b);};}(),clampLength:function(a,b){var c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)));},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this;},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this;},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this;},roundToZero:function(){this.x=(this.x<0)?Math.ceil(this.x):Math.floor(this.x);this.y=(this.y<0)?Math.ceil(this.y):Math.floor(this.y);return this;},negate:function(){this.x=-this.x;this.y=-this.y;return this;},dot:function(a){return this.x*a.x+this.y*a.y;},lengthSq:function(){return this.x*this.x+this.y*this.y;},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y);},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y);},normalize:function(){return this.divideScalar(this.length()||1);},angle:function(){var a=Math.atan2(this.y,this.x);if(a<0)a+=2*Math.PI;return a;},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a));},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y;return b*b+c*c;},distanceToManhattan:function(a){return Math.abs(this.x-a.x)+Math.abs(this.y-a.y);},setLength:function(a){return this.normalize().multiplyScalar(a);},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this;},lerpVectors:function(a,b,c){return this.subVectors(b,a).multiplyScalar(c).add(a);},equals:function(a){return((a.x===this.x)&&(a.y===this.y));},fromArray:function(a,b){if(b===undefined)b=0;this.x=a[b];this.y=a[b+1];return this;},toArray:function(a,b){if(a===undefined)a=[];if(b===undefined)b=0;a[b]=this.x;a[b+1]=this.y;return a;},fromBufferAttribute:function(a,b,c){if(c!==undefined)console.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');this.x=a.getX(b);this.y=a.getY(b);return this;},rotateAround:function(a,b){var c=Math.cos(b),d=Math.sin(b);var e=this.x-a.x;var f=this.y-a.y;this.x=e*c-f*d+a.x;this.y=e*d+f*c+a.y;return this;}});var bC=0;function bD(a,b,c,d,e,f,g,h,i,j){Object.defineProperty(this,'id',{value:bC++});this.uuid=bA.generateUUID();this.name='';this.image=a!==undefined?a:bD.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=b!==undefined?b:bD.DEFAULT_MAPPING;this.wrapS=c!==undefined?c:ar;this.wrapT=d!==undefined?d:ar;this.magFilter=e!==undefined?e:aw;this.minFilter=f!==undefined?f:ay;this.anisotropy=i!==undefined?i:1;this.format=g!==undefined?g:aN;this.type=h!==undefined?h:az;this.offset=new bB(0,0);this.repeat=new bB(1,1);this.generateMipmaps=true;this.premultiplyAlpha=false;this.flipY=true;this.unpackAlignment=4;this.encoding=j!==undefined?j:bq;this.version=0;this.onUpdate=null;}bD.DEFAULT_IMAGE=undefined;bD.DEFAULT_MAPPING=ai;Object.defineProperty(bD.prototype,"needsUpdate",{set:function(a){if(a===true)this.version++;}});Object.assign(bD.prototype,b.prototype,{constructor:bD,isTexture:true,clone:function(){return new this.constructor().copy(this);},copy:function(a){this.name=a.name;this.image=a.image;this.mipmaps=a.mipmaps.slice(0);this.mapping=a.mapping;this.wrapS=a.wrapS;this.wrapT=a.wrapT;this.magFilter=a.magFilter;this.minFilter=a.minFilter;this.anisotropy=a.anisotropy;this.format=a.format;this.type=a.type;this.offset.copy(a.offset);this.repeat.copy(a.repeat);this.generateMipmaps=a.generateMipmaps;this.premultiplyAlpha=a.premultiplyAlpha;this.flipY=a.flipY;this.unpackAlignment=a.unpackAlignment;this.encoding=a.encoding;return this;},toJSON:function(a){if(a.textures[this.uuid]!==undefined)return a.textures[this.uuid];function b(a){var b;if(a instanceof HTMLCanvasElement)b=a;else{b=document.createElementNS('http://www.w3.org/1999/xhtml','canvas');b.width=a.width;b.height=a.height;var c=b.getContext('2d');if(a instanceof ImageData)c.putImageData(a,0,0);else c.drawImage(a,0,0,a.width,a.height);}if(b.width>2048||b.height>2048)return b.toDataURL('image/jpeg',0.6);else return b.toDataURL('image/png');}var c={metadata:{version:4.5,type:'Texture',generator:'Texture.toJSON'},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY};if(this.image!==undefined){var d=this.image;if(d.uuid===undefined)d.uuid=bA.generateUUID();if(a.images[d.uuid]===undefined)a.images[d.uuid]={uuid:d.uuid,url:b(d)};c.image=d.uuid;}a.textures[this.uuid]=c;return c;},dispose:function(){this.dispatchEvent({type:'dispose'});},transformUv:function(a){if(this.mapping!==ai)return;a.multiply(this.repeat);a.add(this.offset);if(a.x<0||a.x>1)switch(this.wrapS){case aq:a.x=a.x-Math.floor(a.x);break;case ar:a.x=a.x<0?0:1;break;case as:if(Math.abs(Math.floor(a.x)%2)===1)a.x=Math.ceil(a.x)-a.x;else a.x=a.x-Math.floor(a.x);break;}if(a.y<0||a.y>1)switch(this.wrapT){case aq:a.y=a.y-Math.floor(a.y);break;case ar:a.y=a.y<0?0:1;break;case as:if(Math.abs(Math.floor(a.y)%2)===1)a.y=Math.ceil(a.y)-a.y;else a.y=a.y-Math.floor(a.y);break;}if(this.flipY)a.y=1-a.y;}});function bE(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=(d!==undefined)?d:1;}Object.assign(bE.prototype,{isVector4:true,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this;},setScalar:function(a){this.x=a;this.y=a;this.z=a;this.w=a;return this;},setX:function(a){this.x=a;return this;},setY:function(a){this.y=a;return this;},setZ:function(a){this.z=a;return this;},setW:function(a){this.w=a;return this;},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw new Error('index is out of range: '+a);}return this;},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error('index is out of range: '+a);}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w);},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=(a.w!==undefined)?a.w:1;return this;},add:function(a,b){if(b!==undefined){console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(a,b);}this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this;},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this;},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this;},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;this.z+=a.z*b;this.w+=a.w*b;return this;},sub:function(a,b){if(b!==undefined){console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(a,b);}this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this;},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;this.w-=a;return this;},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this;},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this;},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=this.w;var f=a.elements;this.x=f[0]*b+f[4]*c+f[8]*d+f[12]*e;this.y=f[1]*b+f[5]*c+f[9]*d+f[13]*e;this.z=f[2]*b+f[6]*c+f[10]*d+f[14]*e;this.w=f[3]*b+f[7]*c+f[11]*d+f[15]*e;return this;},divideScalar:function(a){return this.multiplyScalar(1/a);},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);if(b<0.0001){this.x=1;this.y=0;this.z=0;}else{this.x=a.x/b;this.y=a.y/b;this.z=a.z/b;}return this;},setAxisAngleFromRotationMatrix:function(a){var b,c,d,e,f=0.01,g=0.1,h=a.elements,i=h[0],j=h[4],k=h[8],l=h[1],m=h[5],n=h[9],o=h[2],p=h[6],q=h[10];if((Math.abs(j-l)<f)&&(Math.abs(k-o)<f)&&(Math.abs(n-p)<f)){if((Math.abs(j+l)<g)&&(Math.abs(k+o)<g)&&(Math.abs(n+p)<g)&&(Math.abs(i+m+q-3)<g)){this.set(1,0,0,0);return this;}b=Math.PI;var r=(i+1)/2;var s=(m+1)/2;var t=(q+1)/2;var u=(j+l)/4;var v=(k+o)/4;var w=(n+p)/4;if((r>s)&&(r>t))if(r<f){c=0;d=0.707106781;e=0.707106781;}else{c=Math.sqrt(r);d=u/c;e=v/c;}else if(s>t)if(s<f){c=0.707106781;d=0;e=0.707106781;}else{d=Math.sqrt(s);c=u/d;e=w/d;}else if(t<f){c=0.707106781;d=0.707106781;e=0;}else{e=Math.sqrt(t);c=v/e;d=w/e;}this.set(c,d,e,b);return this;}var x=Math.sqrt((p-n)*(p-n)+(k-o)*(k-o)+(l-j)*(l-j));if(Math.abs(x)<0.001)x=1;this.x=(p-n)/x;this.y=(k-o)/x;this.z=(l-j)/x;this.w=Math.acos((i+m+q-1)/2);return this;},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);this.z=Math.min(this.z,a.z);this.w=Math.min(this.w,a.w);return this;},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);this.z=Math.max(this.z,a.z);this.w=Math.max(this.w,a.w);return this;},clamp:function(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));this.z=Math.max(a.z,Math.min(b.z,this.z));this.w=Math.max(a.w,Math.min(b.w,this.w));return this;},clampScalar:function(){var a,b;return function c(c,d){if(a===undefined){a=new bE();b=new bE();}a.set(c,c,c,c);b.set(d,d,d,d);return this.clamp(a,b);};}(),clampLength:function(a,b){var c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)));},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this;},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this;},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this;},roundToZero:function(){this.x=(this.x<0)?Math.ceil(this.x):Math.floor(this.x);this.y=(this.y<0)?Math.ceil(this.y):Math.floor(this.y);this.z=(this.z<0)?Math.ceil(this.z):Math.floor(this.z);this.w=(this.w<0)?Math.ceil(this.w):Math.floor(this.w);return this;},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this;},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w;},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w;},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w);},normalize:function(){return this.divideScalar(this.length()||1);},setLength:function(a){return this.normalize().multiplyScalar(a);},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this;},lerpVectors:function(a,b,c){return this.subVectors(b,a).multiplyScalar(c).add(a);},equals:function(a){return((a.x===this.x)&&(a.y===this.y)&&(a.z===this.z)&&(a.w===this.w));},fromArray:function(a,b){if(b===undefined)b=0;this.x=a[b];this.y=a[b+1];this.z=a[b+2];this.w=a[b+3];return this;},toArray:function(a,b){if(a===undefined)a=[];if(b===undefined)b=0;a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;a[b+3]=this.w;return a;},fromBufferAttribute:function(a,b,c){if(c!==undefined)console.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');this.x=a.getX(b);this.y=a.getY(b);this.z=a.getZ(b);this.w=a.getW(b);return this;}});function bF(a,b,c){this.uuid=bA.generateUUID();this.width=a;this.height=b;this.scissor=new bE(0,0,a,b);this.scissorTest=false;this.viewport=new bE(0,0,a,b);c=c||{};if(c.minFilter===undefined)c.minFilter=aw;this.texture=new bD(undefined,undefined,c.wrapS,c.wrapT,c.magFilter,c.minFilter,c.format,c.type,c.anisotropy,c.encoding);this.depthBuffer=c.depthBuffer!==undefined?c.depthBuffer:true;this.stencilBuffer=c.stencilBuffer!==undefined?c.stencilBuffer:true;this.depthTexture=c.depthTexture!==undefined?c.depthTexture:null;}Object.assign(bF.prototype,b.prototype,{isWebGLRenderTarget:true,setSize:function(a,b){if(this.width!==a||this.height!==b){this.width=a;this.height=b;this.dispose();}this.viewport.set(0,0,a,b);this.scissor.set(0,0,a,b);},clone:function(){return new this.constructor().copy(this);},copy:function(a){this.width=a.width;this.height=a.height;this.viewport.copy(a.viewport);this.texture=a.texture.clone();this.depthBuffer=a.depthBuffer;this.stencilBuffer=a.stencilBuffer;this.depthTexture=a.depthTexture;return this;},dispose:function(){this.dispatchEvent({type:'dispose'});}});function bG(a,b,c){bF.call(this,a,b,c);this.activeCubeFace=0;this.activeMipMapLevel=0;}bG.prototype=Object.create(bF.prototype);bG.prototype.constructor=bG;bG.prototype.isWebGLRenderTargetCube=true;function bH(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._w=(d!==undefined)?d:1;}Object.assign(bH,{slerp:function(a,b,c,d){return c.copy(a).slerp(b,d);},slerpFlat:function(a,b,c,d,e,f,g){var h=c[d+0],i=c[d+1],j=c[d+2],k=c[d+3],l=e[f+0],m=e[f+1],n=e[f+2],o=e[f+3];if(k!==o||h!==l||i!==m||j!==n){var p=1-g,q=h*l+i*m+j*n+k*o,r=(q>=0?1:-1),s=1-q*q;if(s>Number.EPSILON){var t=Math.sqrt(s),u=Math.atan2(t,q*r);p=Math.sin(p*u)/t;g=Math.sin(g*u)/t;}var v=g*r;h=h*p+l*v;i=i*p+m*v;j=j*p+n*v;k=k*p+o*v;if(p===1-g){var w=1/Math.sqrt(h*h+i*i+j*j+k*k);h*=w;i*=w;j*=w;k*=w;}}a[b]=h;a[b+1]=i;a[b+2]=j;a[b+3]=k;}});Object.defineProperties(bH.prototype,{x:{get:function(){return this._x;},set:function(a){this._x=a;this.onChangeCallback();}},y:{get:function(){return this._y;},set:function(a){this._y=a;this.onChangeCallback();}},z:{get:function(){return this._z;},set:function(a){this._z=a;this.onChangeCallback();}},w:{get:function(){return this._w;},set:function(a){this._w=a;this.onChangeCallback();}}});Object.assign(bH.prototype,{set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._w=d;this.onChangeCallback();return this;},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w);},copy:function(a){this._x=a.x;this._y=a.y;this._z=a.z;this._w=a.w;this.onChangeCallback();return this;},setFromEuler:function(a,b){if(!(a&&a.isEuler))throw new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');var c=a._x,d=a._y,e=a._z,f=a.order;var g=Math.cos;var h=Math.sin;var i=g(c/2);var j=g(d/2);var k=g(e/2);var l=h(c/2);var m=h(d/2);var n=h(e/2);if(f==='XYZ'){this._x=l*j*k+i*m*n;this._y=i*m*k-l*j*n;this._z=i*j*n+l*m*k;this._w=i*j*k-l*m*n;}else if(f==='YXZ'){this._x=l*j*k+i*m*n;this._y=i*m*k-l*j*n;this._z=i*j*n-l*m*k;this._w=i*j*k+l*m*n;}else if(f==='ZXY'){this._x=l*j*k-i*m*n;this._y=i*m*k+l*j*n;this._z=i*j*n+l*m*k;this._w=i*j*k-l*m*n;}else if(f==='ZYX'){this._x=l*j*k-i*m*n;this._y=i*m*k+l*j*n;this._z=i*j*n-l*m*k;this._w=i*j*k+l*m*n;}else if(f==='YZX'){this._x=l*j*k+i*m*n;this._y=i*m*k+l*j*n;this._z=i*j*n-l*m*k;this._w=i*j*k-l*m*n;}else if(f==='XZY'){this._x=l*j*k-i*m*n;this._y=i*m*k-l*j*n;this._z=i*j*n+l*m*k;this._w=i*j*k+l*m*n;}if(b!==false)this.onChangeCallback();return this;},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);this._x=a.x*d;this._y=a.y*d;this._z=a.z*d;this._w=Math.cos(c);this.onChangeCallback();return this;},setFromRotationMatrix:function(a){var b=a.elements,c=b[0],d=b[4],e=b[8],f=b[1],g=b[5],h=b[9],i=b[2],j=b[6],k=b[10],l=c+g+k,m;if(l>0){m=0.5/Math.sqrt(l+1.0);this._w=0.25/m;this._x=(j-h)*m;this._y=(e-i)*m;this._z=(f-d)*m;}else if(c>g&&c>k){m=2.0*Math.sqrt(1.0+c-g-k);this._w=(j-h)/m;this._x=0.25*m;this._y=(d+f)/m;this._z=(e+i)/m;}else if(g>k){m=2.0*Math.sqrt(1.0+g-c-k);this._w=(e-i)/m;this._x=(d+f)/m;this._y=0.25*m;this._z=(h+j)/m;}else{m=2.0*Math.sqrt(1.0+k-c-g);this._w=(f-d)/m;this._x=(e+i)/m;this._y=(h+j)/m;this._z=0.25*m;}this.onChangeCallback();return this;},setFromUnitVectors:function(){var a=new bI();var b;var c=0.000001;return function d(d,e){if(a===undefined)a=new bI();b=d.dot(e)+1;if(b<c){b=0;if(Math.abs(d.x)>Math.abs(d.z))a.set(-d.y,d.x,0);else a.set(0,-d.z,d.y);}else a.crossVectors(d,e);this._x=a.x;this._y=a.y;this._z=a.z;this._w=b;return this.normalize();};}(),inverse:function(){return this.conjugate().normalize();},conjugate:function(){this._x*=-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this;},dot:function(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w;},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w;},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w);},normalize:function(){var a=this.length();if(a===0){this._x=0;this._y=0;this._z=0;this._w=1;}else{a=1/a;this._x=this._x*a;this._y=this._y*a;this._z=this._z*a;this._w=this._w*a;}this.onChangeCallback();return this;},multiply:function(a,b){if(b!==undefined){console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');return this.multiplyQuaternions(a,b);}return this.multiplyQuaternions(this,a);},premultiply:function(a){return this.multiplyQuaternions(a,this);},multiplyQuaternions:function(a,b){var c=a._x,d=a._y,e=a._z,f=a._w;var g=b._x,h=b._y,i=b._z,j=b._w;this._x=c*j+f*g+d*i-e*h;this._y=d*j+f*h+e*g-c*i;this._z=e*j+f*i+c*h-d*g;this._w=f*j-c*g-d*h-e*i;this.onChangeCallback();return this;},slerp:function(a,b){if(b===0)return this;if(b===1)return this.copy(a);var c=this._x,d=this._y,e=this._z,f=this._w;var g=f*a._w+c*a._x+d*a._y+e*a._z;if(g<0){this._w=-a._w;this._x=-a._x;this._y=-a._y;this._z=-a._z;g=-g;}else this.copy(a);if(g>=1.0){this._w=f;this._x=c;this._y=d;this._z=e;return this;}var h=Math.sqrt(1.0-g*g);if(Math.abs(h)<0.001){this._w=0.5*(f+this._w);this._x=0.5*(c+this._x);this._y=0.5*(d+this._y);this._z=0.5*(e+this._z);return this;}var i=Math.atan2(h,g);var j=Math.sin((1-b)*i)/h,k=Math.sin(b*i)/h;this._w=(f*j+this._w*k);this._x=(c*j+this._x*k);this._y=(d*j+this._y*k);this._z=(e*j+this._z*k);this.onChangeCallback();return this;},equals:function(a){return(a._x===this._x)&&(a._y===this._y)&&(a._z===this._z)&&(a._w===this._w);},fromArray:function(a,b){if(b===undefined)b=0;this._x=a[b];this._y=a[b+1];this._z=a[b+2];this._w=a[b+3];this.onChangeCallback();return this;},toArray:function(a,b){if(a===undefined)a=[];if(b===undefined)b=0;a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._w;return a;},onChange:function(a){this.onChangeCallback=a;return this;},onChangeCallback:function(){}});function bI(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0;}Object.assign(bI.prototype,{isVector3:true,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this;},setScalar:function(a){this.x=a;this.y=a;this.z=a;return this;},setX:function(a){this.x=a;return this;},setY:function(a){this.y=a;return this;},setZ:function(a){this.z=a;return this;},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw new Error('index is out of range: '+a);}return this;},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error('index is out of range: '+a);}},clone:function(){return new this.constructor(this.x,this.y,this.z);},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this;},add:function(a,b){if(b!==undefined){console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(a,b);}this.x+=a.x;this.y+=a.y;this.z+=a.z;return this;},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this;},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this;},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;this.z+=a.z*b;return this;},sub:function(a,b){if(b!==undefined){console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(a,b);}this.x-=a.x;this.y-=a.y;this.z-=a.z;return this;},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;return this;},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this;},multiply:function(a,b){if(b!==undefined){console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');return this.multiplyVectors(a,b);}this.x*=a.x;this.y*=a.y;this.z*=a.z;return this;},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this;},multiplyVectors:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this;},applyEuler:function(){var a=new bH();return function b(b){if(!(b&&b.isEuler))console.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');return this.applyQuaternion(a.setFromEuler(b));};}(),applyAxisAngle:function(){var a=new bH();return function b(b,c){return this.applyQuaternion(a.setFromAxisAngle(b,c));};}(),applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z;var e=a.elements;this.x=e[0]*b+e[3]*c+e[6]*d;this.y=e[1]*b+e[4]*c+e[7]*d;this.z=e[2]*b+e[5]*c+e[8]*d;return this;},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z;var e=a.elements;var f=1/(e[3]*b+e[7]*c+e[11]*d+e[15]);this.x=(e[0]*b+e[4]*c+e[8]*d+e[12])*f;this.y=(e[1]*b+e[5]*c+e[9]*d+e[13])*f;this.z=(e[2]*b+e[6]*c+e[10]*d+e[14])*f;return this;},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z;var e=a.x,f=a.y,g=a.z,h=a.w;var i=h*b+f*d-g*c;var j=h*c+g*b-e*d;var k=h*d+e*c-f*b;var l=-e*b-f*c-g*d;this.x=i*h+l*-e+j*-g-k*-f;this.y=j*h+l*-f+k*-e-i*-g;this.z=k*h+l*-g+i*-f-j*-e;return this;},project:function(){var a=new bJ();return function b(b){a.multiplyMatrices(b.projectionMatrix,a.getInverse(b.matrixWorld));return this.applyMatrix4(a);};}(),unproject:function(){var a=new bJ();return function b(b){a.multiplyMatrices(b.matrixWorld,a.getInverse(b.projectionMatrix));return this.applyMatrix4(a);};}(),transformDirection:function(a){var b=this.x,c=this.y,d=this.z;var e=a.elements;this.x=e[0]*b+e[4]*c+e[8]*d;this.y=e[1]*b+e[5]*c+e[9]*d;this.z=e[2]*b+e[6]*c+e[10]*d;return this.normalize();},divide:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this;},divideScalar:function(a){return this.multiplyScalar(1/a);},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);this.z=Math.min(this.z,a.z);return this;},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);this.z=Math.max(this.z,a.z);return this;},clamp:function(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));this.z=Math.max(a.z,Math.min(b.z,this.z));return this;},clampScalar:function(){var a=new bI();var b=new bI();return function c(c,d){a.set(c,c,c);b.set(d,d,d);return this.clamp(a,b);};}(),clampLength:function(a,b){var c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)));},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this;},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this;},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this;},roundToZero:function(){this.x=(this.x<0)?Math.ceil(this.x):Math.floor(this.x);this.y=(this.y<0)?Math.ceil(this.y):Math.floor(this.y);this.z=(this.z<0)?Math.ceil(this.z):Math.floor(this.z);return this;},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this;},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z;},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z;},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z);},normalize:function(){return this.divideScalar(this.length()||1);},setLength:function(a){return this.normalize().multiplyScalar(a);},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this;},lerpVectors:function(a,b,c){return this.subVectors(b,a).multiplyScalar(c).add(a);},cross:function(a,b){if(b!==undefined){console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');return this.crossVectors(a,b);}var c=this.x,d=this.y,e=this.z;this.x=d*a.z-e*a.y;this.y=e*a.x-c*a.z;this.z=c*a.y-d*a.x;return this;},crossVectors:function(a,b){var c=a.x,d=a.y,e=a.z;var f=b.x,g=b.y,h=b.z;this.x=d*h-e*g;this.y=e*f-c*h;this.z=c*g-d*f;return this;},projectOnVector:function(a){var b=a.dot(this)/a.lengthSq();return this.copy(a).multiplyScalar(b);},projectOnPlane:function(){var a=new bI();return function b(b){a.copy(this).projectOnVector(b);return this.sub(a);};}(),reflect:function(){var a=new bI();return function b(b){return this.sub(a.copy(b).multiplyScalar(2*this.dot(b)));};}(),angleTo:function(a){var b=this.dot(a)/(Math.sqrt(this.lengthSq()*a.lengthSq()));return Math.acos(bA.clamp(b,-1,1));},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a));},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y,d=this.z-a.z;return b*b+c*c+d*d;},distanceToManhattan:function(a){return Math.abs(this.x-a.x)+Math.abs(this.y-a.y)+Math.abs(this.z-a.z);},setFromSpherical:function(a){var b=Math.sin(a.phi)*a.radius;this.x=b*Math.sin(a.theta);this.y=Math.cos(a.phi)*a.radius;this.z=b*Math.cos(a.theta);return this;},setFromCylindrical:function(a){this.x=a.radius*Math.sin(a.theta);this.y=a.y;this.z=a.radius*Math.cos(a.theta);return this;},setFromMatrixPosition:function(a){var b=a.elements;this.x=b[12];this.y=b[13];this.z=b[14];return this;},setFromMatrixScale:function(a){var b=this.setFromMatrixColumn(a,0).length();var c=this.setFromMatrixColumn(a,1).length();var d=this.setFromMatrixColumn(a,2).length();this.x=b;this.y=c;this.z=d;return this;},setFromMatrixColumn:function(a,b){return this.fromArray(a.elements,b*4);},equals:function(a){return((a.x===this.x)&&(a.y===this.y)&&(a.z===this.z));},fromArray:function(a,b){if(b===undefined)b=0;this.x=a[b];this.y=a[b+1];this.z=a[b+2];return this;},toArray:function(a,b){if(a===undefined)a=[];if(b===undefined)b=0;a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;return a;},fromBufferAttribute:function(a,b,c){if(c!==undefined)console.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');this.x=a.getX(b);this.y=a.getY(b);this.z=a.getZ(b);return this;}});function bJ(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];if(arguments.length>0)console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');}Object.assign(bJ.prototype,{isMatrix4:true,set:function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){var q=this.elements;q[0]=a;q[4]=b;q[8]=c;q[12]=d;q[1]=e;q[5]=f;q[9]=g;q[13]=h;q[2]=i;q[6]=j;q[10]=k;q[14]=l;q[3]=m;q[7]=n;q[11]=o;q[15]=p;return this;},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this;},clone:function(){return new bJ().fromArray(this.elements);},copy:function(a){var b=this.elements;var c=a.elements;b[0]=c[0];b[1]=c[1];b[2]=c[2];b[3]=c[3];b[4]=c[4];b[5]=c[5];b[6]=c[6];b[7]=c[7];b[8]=c[8];b[9]=c[9];b[10]=c[10];b[11]=c[11];b[12]=c[12];b[13]=c[13];b[14]=c[14];b[15]=c[15];return this;},copyPosition:function(a){var b=this.elements,c=a.elements;b[12]=c[12];b[13]=c[13];b[14]=c[14];return this;},extractBasis:function(a,b,c){a.setFromMatrixColumn(this,0);b.setFromMatrixColumn(this,1);c.setFromMatrixColumn(this,2);return this;},makeBasis:function(a,b,c){this.set(a.x,b.x,c.x,0,a.y,b.y,c.y,0,a.z,b.z,c.z,0,0,0,0,1);return this;},extractRotation:function(){var a=new bI();return function b(b){var c=this.elements;var d=b.elements;var e=1/a.setFromMatrixColumn(b,0).length();var f=1/a.setFromMatrixColumn(b,1).length();var g=1/a.setFromMatrixColumn(b,2).length();c[0]=d[0]*e;c[1]=d[1]*e;c[2]=d[2]*e;c[4]=d[4]*f;c[5]=d[5]*f;c[6]=d[6]*f;c[8]=d[8]*g;c[9]=d[9]*g;c[10]=d[10]*g;return this;};}(),makeRotationFromEuler:function(a){if(!(a&&a.isEuler))console.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');var b=this.elements;var c=a.x,d=a.y,e=a.z;var f=Math.cos(c),g=Math.sin(c);var h=Math.cos(d),i=Math.sin(d);var j=Math.cos(e),k=Math.sin(e);if(a.order==='XYZ'){var l=f*j,m=f*k,n=g*j,o=g*k;b[0]=h*j;b[4]=-h*k;b[8]=i;b[1]=m+n*i;b[5]=l-o*i;b[9]=-g*h;b[2]=o-l*i;b[6]=n+m*i;b[10]=f*h;}else if(a.order==='YXZ'){var p=h*j,q=h*k,r=i*j,s=i*k;b[0]=p+s*g;b[4]=r*g-q;b[8]=f*i;b[1]=f*k;b[5]=f*j;b[9]=-g;b[2]=q*g-r;b[6]=s+p*g;b[10]=f*h;}else if(a.order==='ZXY'){var p=h*j,q=h*k,r=i*j,s=i*k;b[0]=p-s*g;b[4]=-f*k;b[8]=r+q*g;b[1]=q+r*g;b[5]=f*j;b[9]=s-p*g;b[2]=-f*i;b[6]=g;b[10]=f*h;}else if(a.order==='ZYX'){var l=f*j,m=f*k,n=g*j,o=g*k;b[0]=h*j;b[4]=n*i-m;b[8]=l*i+o;b[1]=h*k;b[5]=o*i+l;b[9]=m*i-n;b[2]=-i;b[6]=g*h;b[10]=f*h;}else if(a.order==='YZX'){var t=f*h,u=f*i,v=g*h,w=g*i;b[0]=h*j;b[4]=w-t*k;b[8]=v*k+u;b[1]=k;b[5]=f*j;b[9]=-g*j;b[2]=-i*j;b[6]=u*k+v;b[10]=t-w*k;}else if(a.order==='XZY'){var t=f*h,u=f*i,v=g*h,w=g*i;b[0]=h*j;b[4]=-k;b[8]=i*j;b[1]=t*k+w;b[5]=f*j;b[9]=u*k-v;b[2]=v*k-u;b[6]=g*j;b[10]=w*k+t;}b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this;},makeRotationFromQuaternion:function(a){var b=this.elements;var c=a._x,d=a._y,e=a._z,f=a._w;var g=c+c,h=d+d,i=e+e;var j=c*g,k=c*h,l=c*i;var m=d*h,n=d*i,o=e*i;var p=f*g,q=f*h,r=f*i;b[0]=1-(m+o);b[4]=k-r;b[8]=l+q;b[1]=k+r;b[5]=1-(j+o);b[9]=n-p;b[2]=l-q;b[6]=n+p;b[10]=1-(j+m);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this;},lookAt:function(){var a=new bI();var b=new bI();var c=new bI();return function d(d,e,f){var g=this.elements;c.subVectors(d,e);if(c.lengthSq()===0)c.z=1;c.normalize();a.crossVectors(f,c);if(a.lengthSq()===0){if(Math.abs(f.z)===1)c.x+=0.0001;else c.z+=0.0001;c.normalize();a.crossVectors(f,c);}a.normalize();b.crossVectors(c,a);g[0]=a.x;g[4]=b.x;g[8]=c.x;g[1]=a.y;g[5]=b.y;g[9]=c.y;g[2]=a.z;g[6]=b.z;g[10]=c.z;return this;};}(),multiply:function(a,b){if(b!==undefined){console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');return this.multiplyMatrices(a,b);}return this.multiplyMatrices(this,a);},premultiply:function(a){return this.multiplyMatrices(a,this);},multiplyMatrices:function(a,b){var c=a.elements;var d=b.elements;var e=this.elements;var f=c[0],g=c[4],h=c[8],i=c[12];var j=c[1],k=c[5],l=c[9],m=c[13];var n=c[2],o=c[6],p=c[10],q=c[14];var r=c[3],s=c[7],t=c[11],u=c[15];var v=d[0],w=d[4],x=d[8],y=d[12];var z=d[1],A=d[5],B=d[9],C=d[13];var D=d[2],E=d[6],F=d[10],G=d[14];var H=d[3],I=d[7],J=d[11],K=d[15];e[0]=f*v+g*z+h*D+i*H;e[4]=f*w+g*A+h*E+i*I;e[8]=f*x+g*B+h*F+i*J;e[12]=f*y+g*C+h*G+i*K;e[1]=j*v+k*z+l*D+m*H;e[5]=j*w+k*A+l*E+m*I;e[9]=j*x+k*B+l*F+m*J;e[13]=j*y+k*C+l*G+m*K;e[2]=n*v+o*z+p*D+q*H;e[6]=n*w+o*A+p*E+q*I;e[10]=n*x+o*B+p*F+q*J;e[14]=n*y+o*C+p*G+q*K;e[3]=r*v+s*z+t*D+u*H;e[7]=r*w+s*A+t*E+u*I;e[11]=r*x+s*B+t*F+u*J;e[15]=r*y+s*C+t*G+u*K;return this;},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this;},applyToBufferAttribute:function(){var a=new bI();return function b(b){for(var c=0,d=b.count;c<d;c++){a.x=b.getX(c);a.y=b.getY(c);a.z=b.getZ(c);a.applyMatrix4(this);b.setXYZ(c,a.x,a.y,a.z);}return b;};}(),determinant:function(){var a=this.elements;var b=a[0],c=a[4],d=a[8],e=a[12];var f=a[1],g=a[5],h=a[9],i=a[13];var j=a[2],k=a[6],l=a[10],m=a[14];var n=a[3],o=a[7],p=a[11],q=a[15];return(n*(+e*h*k-d*i*k-e*g*l+c*i*l+d*g*m-c*h*m)+o*(+b*h*m-b*i*l+e*f*l-d*f*m+d*i*j-e*h*j)+p*(+b*i*k-b*g*m-e*f*k+c*f*m+e*g*j-c*i*j)+q*(-d*g*j-b*h*k+b*g*l+d*f*k-c*f*l+c*h*j));},transpose:function(){var a=this.elements;var b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this;},setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this;},getInverse:function(a,b){var c=this.elements,d=a.elements,e=d[0],f=d[1],g=d[2],h=d[3],i=d[4],j=d[5],k=d[6],l=d[7],m=d[8],n=d[9],o=d[10],p=d[11],q=d[12],r=d[13],s=d[14],t=d[15],u=n*s*l-r*o*l+r*k*p-j*s*p-n*k*t+j*o*t,v=q*o*l-m*s*l-q*k*p+i*s*p+m*k*t-i*o*t,w=m*r*l-q*n*l+q*j*p-i*r*p-m*j*t+i*n*t,x=q*n*k-m*r*k-q*j*o+i*r*o+m*j*s-i*n*s;var y=e*u+f*v+g*w+h*x;if(y===0){var z="THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";if(b===true)throw new Error(z);else console.warn(z);return this.identity();}var A=1/y;c[0]=u*A;c[1]=(r*o*h-n*s*h-r*g*p+f*s*p+n*g*t-f*o*t)*A;c[2]=(j*s*h-r*k*h+r*g*l-f*s*l-j*g*t+f*k*t)*A;c[3]=(n*k*h-j*o*h-n*g*l+f*o*l+j*g*p-f*k*p)*A;c[4]=v*A;c[5]=(m*s*h-q*o*h+q*g*p-e*s*p-m*g*t+e*o*t)*A;c[6]=(q*k*h-i*s*h-q*g*l+e*s*l+i*g*t-e*k*t)*A;c[7]=(i*o*h-m*k*h+m*g*l-e*o*l-i*g*p+e*k*p)*A;c[8]=w*A;c[9]=(q*n*h-m*r*h-q*f*p+e*r*p+m*f*t-e*n*t)*A;c[10]=(i*r*h-q*j*h+q*f*l-e*r*l-i*f*t+e*j*t)*A;c[11]=(m*j*h-i*n*h-m*f*l+e*n*l+i*f*p-e*j*p)*A;c[12]=x*A;c[13]=(m*r*g-q*n*g+q*f*o-e*r*o-m*f*s+e*n*s)*A;c[14]=(q*j*g-i*r*g-q*f*k+e*r*k+i*f*s-e*j*s)*A;c[15]=(i*n*g-m*j*g+m*f*k-e*n*k-i*f*o+e*j*o)*A;return this;},scale:function(a){var b=this.elements;var c=a.x,d=a.y,e=a.z;b[0]*=c;b[4]*=d;b[8]*=e;b[1]*=c;b[5]*=d;b[9]*=e;b[2]*=c;b[6]*=d;b[10]*=e;b[3]*=c;b[7]*=d;b[11]*=e;return this;},getMaxScaleOnAxis:function(){var a=this.elements;var b=a[0]*a[0]+a[1]*a[1]+a[2]*a[2];var c=a[4]*a[4]+a[5]*a[5]+a[6]*a[6];var d=a[8]*a[8]+a[9]*a[9]+a[10]*a[10];return Math.sqrt(Math.max(b,c,d));},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this;},makeRotationX:function(a){var b=Math.cos(a),c=Math.sin(a);this.set(1,0,0,0,0,b,-c,0,0,c,b,0,0,0,0,1);return this;},makeRotationY:function(a){var b=Math.cos(a),c=Math.sin(a);this.set(b,0,c,0,0,1,0,0,-c,0,b,0,0,0,0,1);return this;},makeRotationZ:function(a){var b=Math.cos(a),c=Math.sin(a);this.set(b,-c,0,0,c,b,0,0,0,0,1,0,0,0,0,1);return this;},makeRotationAxis:function(a,b){var c=Math.cos(b);var d=Math.sin(b);var e=1-c;var f=a.x,g=a.y,h=a.z;var i=e*f,j=e*g;this.set(i*f+c,i*g-d*h,i*h+d*g,0,i*g+d*h,j*g+c,j*h-d*f,0,i*h-d*g,j*h+d*f,e*h*h+c,0,0,0,0,1);return this;},makeScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this;},makeShear:function(a,b,c){this.set(1,b,c,0,a,1,c,0,a,b,1,0,0,0,0,1);return this;},compose:function(a,b,c){this.makeRotationFromQuaternion(b);this.scale(c);this.setPosition(a);return this;},decompose:function(){var a=new bI();var b=new bJ();return function c(c,d,e){var f=this.elements;var g=a.set(f[0],f[1],f[2]).length();var h=a.set(f[4],f[5],f[6]).length();var i=a.set(f[8],f[9],f[10]).length();var j=this.determinant();if(j<0)g=-g;c.x=f[12];c.y=f[13];c.z=f[14];b.copy(this);var k=1/g;var l=1/h;var m=1/i;b.elements[0]*=k;b.elements[1]*=k;b.elements[2]*=k;b.elements[4]*=l;b.elements[5]*=l;b.elements[6]*=l;b.elements[8]*=m;b.elements[9]*=m;b.elements[10]*=m;d.setFromRotationMatrix(b);e.x=g;e.y=h;e.z=i;return this;};}(),makePerspective:function(a,b,c,d,e,f){if(f===undefined)console.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');var g=this.elements;var h=2*e/(b-a);var i=2*e/(c-d);var j=(b+a)/(b-a);var k=(c+d)/(c-d);var l=-(f+e)/(f-e);var m=-2*f*e/(f-e);g[0]=h;g[4]=0;g[8]=j;g[12]=0;g[1]=0;g[5]=i;g[9]=k;g[13]=0;g[2]=0;g[6]=0;g[10]=l;g[14]=m;g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this;},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements;var h=1.0/(b-a);var i=1.0/(c-d);var j=1.0/(f-e);var k=(b+a)*h;var l=(c+d)*i;var m=(f+e)*j;g[0]=2*h;g[4]=0;g[8]=0;g[12]=-k;g[1]=0;g[5]=2*i;g[9]=0;g[13]=-l;g[2]=0;g[6]=0;g[10]=-2*j;g[14]=-m;g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this;},equals:function(a){var b=this.elements;var c=a.elements;for(var d=0;d<16;d++)if(b[d]!==c[d])return false;return true;},fromArray:function(a,b){if(b===undefined)b=0;for(var c=0;c<16;c++)this.elements[c]=a[c+b];return this;},toArray:function(a,b){if(a===undefined)a=[];if(b===undefined)b=0;var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a;}});function bK(a,b,c,d,e,f,g,h,i,j,k,l){bD.call(this,null,f,g,h,i,j,d,e,k,l);this.image={data:a,width:b,height:c};this.magFilter=i!==undefined?i:at;this.minFilter=j!==undefined?j:at;this.generateMipmaps=false;this.flipY=false;this.unpackAlignment=1;}bK.prototype=Object.create(bD.prototype);bK.prototype.constructor=bK;bK.prototype.isDataTexture=true;function bL(a,b,c,d,e,f,g,h,i,j){a=a!==undefined?a:[];b=b!==undefined?b:aj;bD.call(this,a,b,c,d,e,f,g,h,i,j);this.flipY=false;}bL.prototype=Object.create(bD.prototype);bL.prototype.constructor=bL;bL.prototype.isCubeTexture=true;Object.defineProperty(bL.prototype,'images',{get:function(){return this.image;},set:function(a){this.image=a;}});var bM=new bD();var bN=new bL();function bO(){this.seq=[];this.map={};}var bP=[];var bQ=[];var bR=new Float32Array(16);var bS=new Float32Array(9);function bT(a,b,c){var d=a[0];if(d<=0||d>0)return a;var e=b*c,f=bP[e];if(f===undefined){f=new Float32Array(e);bP[e]=f;}if(b!==0){d.toArray(f,0);for(var g=1,h=0;g!==b;++g){h+=c;a[g].toArray(f,h);}}return f;}function bU(a,b){var c=bQ[b];if(c===undefined){c=new Int32Array(b);bQ[b]=c;}for(var d=0;d!==b;++d)c[d]=a.allocTextureUnit();return c;}function bV(a,b){a.uniform1f(this.addr,b);}function bW(a,b){a.uniform1i(this.addr,b);}function bX(a,b){if(b.x===undefined)a.uniform2fv(this.addr,b);else a.uniform2f(this.addr,b.x,b.y);}function bY(a,b){if(b.x!==undefined)a.uniform3f(this.addr,b.x,b.y,b.z);else if(b.r!==undefined)a.uniform3f(this.addr,b.r,b.g,b.b);else a.uniform3fv(this.addr,b);}function bZ(a,b){if(b.x===undefined)a.uniform4fv(this.addr,b);else a.uniform4f(this.addr,b.x,b.y,b.z,b.w);}function cd(a,b){a.uniformMatrix2fv(this.addr,false,b.elements||b);}function ce(a,b){if(b.elements===undefined)a.uniformMatrix3fv(this.addr,false,b);else{bS.set(b.elements);a.uniformMatrix3fv(this.addr,false,bS);}}function cf(a,b){if(b.elements===undefined)a.uniformMatrix4fv(this.addr,false,b);else{bR.set(b.elements);a.uniformMatrix4fv(this.addr,false,bR);}}function cg(a,b,c){var d=c.allocTextureUnit();a.uniform1i(this.addr,d);c.setTexture2D(b||bM,d);}function ch(a,b,c){var d=c.allocTextureUnit();a.uniform1i(this.addr,d);c.setTextureCube(b||bN,d);}function ci(a,b){a.uniform2iv(this.addr,b);}function cj(a,b){a.uniform3iv(this.addr,b);}function ck(a,b){a.uniform4iv(this.addr,b);}function cl(a){switch(a){case 0x1406:return bV;case 0x8b50:return bX;case 0x8b51:return bY;case 0x8b52:return bZ;case 0x8b5a:return cd;case 0x8b5b:return ce;case 0x8b5c:return cf;case 0x8b5e:case 0x8d66:return cg;case 0x8b60:return ch;case 0x1404:case 0x8b56:return bW;case 0x8b53:case 0x8b57:return ci;case 0x8b54:case 0x8b58:return cj;case 0x8b55:case 0x8b59:return ck;}}function cm(a,b){a.uniform1fv(this.addr,b);}function cn(a,b){a.uniform1iv(this.addr,b);}function co(a,b){a.uniform2fv(this.addr,bT(b,this.size,2));}function cp(a,b){a.uniform3fv(this.addr,bT(b,this.size,3));}function cq(a,b){a.uniform4fv(this.addr,bT(b,this.size,4));}function cr(a,b){a.uniformMatrix2fv(this.addr,false,bT(b,this.size,4));}function cs(a,b){a.uniformMatrix3fv(this.addr,false,bT(b,this.size,9));}function ct(a,b){a.uniformMatrix4fv(this.addr,false,bT(b,this.size,16));}function cu(a,b,c){var d=b.length,e=bU(c,d);a.uniform1iv(this.addr,e);for(var f=0;f!==d;++f)c.setTexture2D(b[f]||bM,e[f]);}function cv(a,b,c){var d=b.length,e=bU(c,d);a.uniform1iv(this.addr,e);for(var f=0;f!==d;++f)c.setTextureCube(b[f]||bN,e[f]);}function cw(a){switch(a){case 0x1406:return cm;case 0x8b50:return co;case 0x8b51:return cp;case 0x8b52:return cq;case 0x8b5a:return cr;case 0x8b5b:return cs;case 0x8b5c:return ct;case 0x8b5e:return cu;case 0x8b60:return cv;case 0x1404:case 0x8b56:return cn;case 0x8b53:case 0x8b57:return ci;case 0x8b54:case 0x8b58:return cj;case 0x8b55:case 0x8b59:return ck;}}function cx(a,b,c){this.id=a;this.addr=c;this.setValue=cl(b.type);}function cy(a,b,c){this.id=a;this.addr=c;this.size=b.size;this.setValue=cw(b.type);}function cz(a){this.id=a;bO.call(this);}cz.prototype.setValue=function(a,b){var c=this.seq;for(var d=0,e=c.length;d!==e;++d){var f=c[d];f.setValue(a,b[f.id]);}};var cA=/([\w\d_]+)(\])?(\[|\.)?/g;function cB(a,b){a.seq.push(b);a.map[b.id]=b;}function cC(a,b,c){var d=a.name,e=d.length;cA.lastIndex=0;for(;;){var f=cA.exec(d),g=cA.lastIndex,h=f[1],i=f[2]===']',j=f[3];if(i)h=h|0;if(j===undefined||j==='['&&g+2===e){cB(c,j===undefined?new cx(h,a,b):new cy(h,a,b));break;}else{var k=c.map,l=k[h];if(l===undefined){l=new cz(h);cB(c,l);}c=l;}}}function cD(a,b,c){bO.call(this);this.renderer=c;var d=a.getProgramParameter(b,a.ACTIVE_UNIFORMS);for(var e=0;e<d;++e){var f=a.getActiveUniform(b,e),g=f.name,h=a.getUniformLocation(b,g);cC(f,h,this);}}cD.prototype.setValue=function(a,b,c){var d=this.map[b];if(d!==undefined)d.setValue(a,c,this.renderer);};cD.prototype.setOptional=function(a,b,c){var d=b[c];if(d!==undefined)this.setValue(a,c,d);};cD.upload=function(a,b,c,d){for(var e=0,f=b.length;e!==f;++e){var g=b[e],h=c[g.id];if(h.needsUpdate!==false)g.setValue(a,h.value,d);}};cD.seqWithValue=function(a,b){var c=[];for(var d=0,e=a.length;d!==e;++d){var f=a[d];if(f.id in b)c.push(f);}return c;};var cE={'aliceblue':0xF0F8FF,'antiquewhite':0xFAEBD7,'aqua':0x00FFFF,'aquamarine':0x7FFFD4,'azure':0xF0FFFF,'beige':0xF5F5DC,'bisque':0xFFE4C4,'black':0x000000,'blanchedalmond':0xFFEBCD,'blue':0x0000FF,'blueviolet':0x8A2BE2,'brown':0xA52A2A,'burlywood':0xDEB887,'cadetblue':0x5F9EA0,'chartreuse':0x7FFF00,'chocolate':0xD2691E,'coral':0xFF7F50,'cornflowerblue':0x6495ED,'cornsilk':0xFFF8DC,'crimson':0xDC143C,'cyan':0x00FFFF,'darkblue':0x00008B,'darkcyan':0x008B8B,'darkgoldenrod':0xB8860B,'darkgray':0xA9A9A9,'darkgreen':0x006400,'darkgrey':0xA9A9A9,'darkkhaki':0xBDB76B,'darkmagenta':0x8B008B,'darkolivegreen':0x556B2F,'darkorange':0xFF8C00,'darkorchid':0x9932CC,'darkred':0x8B0000,'darksalmon':0xE9967A,'darkseagreen':0x8FBC8F,'darkslateblue':0x483D8B,'darkslategray':0x2F4F4F,'darkslategrey':0x2F4F4F,'darkturquoise':0x00CED1,'darkviolet':0x9400D3,'deeppink':0xFF1493,'deepskyblue':0x00BFFF,'dimgray':0x696969,'dimgrey':0x696969,'dodgerblue':0x1E90FF,'firebrick':0xB22222,'floralwhite':0xFFFAF0,'forestgreen':0x228B22,'fuchsia':0xFF00FF,'gainsboro':0xDCDCDC,'ghostwhite':0xF8F8FF,'gold':0xFFD700,'goldenrod':0xDAA520,'gray':0x808080,'green':0x008000,'greenyellow':0xADFF2F,'grey':0x808080,'honeydew':0xF0FFF0,'hotpink':0xFF69B4,'indianred':0xCD5C5C,'indigo':0x4B0082,'ivory':0xFFFFF0,'khaki':0xF0E68C,'lavender':0xE6E6FA,'lavenderblush':0xFFF0F5,'lawngreen':0x7CFC00,'lemonchiffon':0xFFFACD,'lightblue':0xADD8E6,'lightcoral':0xF08080,'lightcyan':0xE0FFFF,'lightgoldenrodyellow':0xFAFAD2,'lightgray':0xD3D3D3,'lightgreen':0x90EE90,'lightgrey':0xD3D3D3,'lightpink':0xFFB6C1,'lightsalmon':0xFFA07A,'lightseagreen':0x20B2AA,'lightskyblue':0x87CEFA,'lightslategray':0x778899,'lightslategrey':0x778899,'lightsteelblue':0xB0C4DE,'lightyellow':0xFFFFE0,'lime':0x00FF00,'limegreen':0x32CD32,'linen':0xFAF0E6,'magenta':0xFF00FF,'maroon':0x800000,'mediumaquamarine':0x66CDAA,'mediumblue':0x0000CD,'mediumorchid':0xBA55D3,'mediumpurple':0x9370DB,'mediumseagreen':0x3CB371,'mediumslateblue':0x7B68EE,'mediumspringgreen':0x00FA9A,'mediumturquoise':0x48D1CC,'mediumvioletred':0xC71585,'midnightblue':0x191970,'mintcream':0xF5FFFA,'mistyrose':0xFFE4E1,'moccasin':0xFFE4B5,'navajowhite':0xFFDEAD,'navy':0x000080,'oldlace':0xFDF5E6,'olive':0x808000,'olivedrab':0x6B8E23,'orange':0xFFA500,'orangered':0xFF4500,'orchid':0xDA70D6,'palegoldenrod':0xEEE8AA,'palegreen':0x98FB98,'paleturquoise':0xAFEEEE,'palevioletred':0xDB7093,'papayawhip':0xFFEFD5,'peachpuff':0xFFDAB9,'peru':0xCD853F,'pink':0xFFC0CB,'plum':0xDDA0DD,'powderblue':0xB0E0E6,'purple':0x800080,'rebeccapurple':0x663399,'red':0xFF0000,'rosybrown':0xBC8F8F,'royalblue':0x4169E1,'saddlebrown':0x8B4513,'salmon':0xFA8072,'sandybrown':0xF4A460,'seagreen':0x2E8B57,'seashell':0xFFF5EE,'sienna':0xA0522D,'silver':0xC0C0C0,'skyblue':0x87CEEB,'slateblue':0x6A5ACD,'slategray':0x708090,'slategrey':0x708090,'snow':0xFFFAFA,'springgreen':0x00FF7F,'steelblue':0x4682B4,'tan':0xD2B48C,'teal':0x008080,'thistle':0xD8BFD8,'tomato':0xFF6347,'turquoise':0x40E0D0,'violet':0xEE82EE,'wheat':0xF5DEB3,'white':0xFFFFFF,'whitesmoke':0xF5F5F5,'yellow':0xFFFF00,'yellowgreen':0x9ACD32};function cF(a,b,c){if(b===undefined&&c===undefined)return this.set(a);return this.setRGB(a,b,c);}Object.assign(cF.prototype,{isColor:true,r:1,g:1,b:1,set:function(a){if(a&&a.isColor)this.copy(a);else if(typeof a==='number')this.setHex(a);else if(typeof a==='string')this.setStyle(a);return this;},setScalar:function(a){this.r=a;this.g=a;this.b=a;return this;},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this;},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this;},setHSL:function(){function a(a,b,c){if(c<0)c+=1;if(c>1)c-=1;if(c<1/6)return a+(b-a)*6*c;if(c<1/2)return b;if(c<2/3)return a+(b-a)*6*(2/3-c);return a;}return function b(b,c,d){b=bA.euclideanModulo(b,1);c=bA.clamp(c,0,1);d=bA.clamp(d,0,1);if(c===0)this.r=this.g=this.b=d;else{var e=d<=0.5?d*(1+c):d+c-(d*c);var f=(2*d)-e;this.r=a(f,e,b+1/3);this.g=a(f,e,b);this.b=a(f,e,b-1/3);}return this;};}(),setStyle:function(a){function b(b){if(b===undefined)return;if(parseFloat(b)<1)console.warn('THREE.Color: Alpha component of '+a+' will be ignored.');}var c;if(c=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(a)){var d;var e=c[1];var f=c[2];switch(e){case 'rgb':case 'rgba':if(d=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(f)){this.r=Math.min(255,parseInt(d[1],10))/255;this.g=Math.min(255,parseInt(d[2],10))/255;this.b=Math.min(255,parseInt(d[3],10))/255;b(d[5]);return this;}if(d=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(f)){this.r=Math.min(100,parseInt(d[1],10))/100;this.g=Math.min(100,parseInt(d[2],10))/100;this.b=Math.min(100,parseInt(d[3],10))/100;b(d[5]);return this;}break;case 'hsl':case 'hsla':if(d=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(f)){var g=parseFloat(d[1])/360;var h=parseInt(d[2],10)/100;var i=parseInt(d[3],10)/100;b(d[5]);return this.setHSL(g,h,i);}break;}}else if(c=/^\#([A-Fa-f0-9]+)$/.exec(a)){var j=c[1];var k=j.length;if(k===3){this.r=parseInt(j.charAt(0)+j.charAt(0),16)/255;this.g=parseInt(j.charAt(1)+j.charAt(1),16)/255;this.b=parseInt(j.charAt(2)+j.charAt(2),16)/255;return this;}else if(k===6){this.r=parseInt(j.charAt(0)+j.charAt(1),16)/255;this.g=parseInt(j.charAt(2)+j.charAt(3),16)/255;this.b=parseInt(j.charAt(4)+j.charAt(5),16)/255;return this;}}if(a&&a.length>0){var j=cE[a];if(j!==undefined)this.setHex(j);else console.warn('THREE.Color: Unknown color '+a);}return this;},clone:function(){return new this.constructor(this.r,this.g,this.b);},copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this;},copyGammaToLinear:function(a,b){if(b===undefined)b=2.0;this.r=Math.pow(a.r,b);this.g=Math.pow(a.g,b);this.b=Math.pow(a.b,b);return this;},copyLinearToGamma:function(a,b){if(b===undefined)b=2.0;var c=(b>0)?(1.0/b):1.0;this.r=Math.pow(a.r,c);this.g=Math.pow(a.g,c);this.b=Math.pow(a.b,c);return this;},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this;},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this;},getHex:function(){return(this.r*255)<<16^(this.g*255)<<8^(this.b*255)<<0;},getHexString:function(){return('000000'+this.getHex().toString(16)).slice(-6);},getHSL:function(a){var b=a||{h:0,s:0,l:0};var c=this.r,d=this.g,e=this.b;var f=Math.max(c,d,e);var g=Math.min(c,d,e);var h,i;var j=(g+f)/2.0;if(g===f){h=0;i=0;}else{var k=f-g;i=j<=0.5?k/(f+g):k/(2-f-g);switch(f){case c:h=(d-e)/k+(d<e?6:0);break;case d:h=(e-c)/k+2;break;case e:h=(c-d)/k+4;break;}h/=6;}b.h=h;b.s=i;b.l=j;return b;},getStyle:function(){return 'rgb('+((this.r*255)|0)+','+((this.g*255)|0)+','+((this.b*255)|0)+')';},offsetHSL:function(a,b,c){var d=this.getHSL();d.h+=a;d.s+=b;d.l+=c;this.setHSL(d.h,d.s,d.l);return this;},add:function(a){this.r+=a.r;this.g+=a.g;this.b+=a.b;return this;},addColors:function(a,b){this.r=a.r+b.r;this.g=a.g+b.g;this.b=a.b+b.b;return this;},addScalar:function(a){this.r+=a;this.g+=a;this.b+=a;return this;},sub:function(a){this.r=Math.max(0,this.r-a.r);this.g=Math.max(0,this.g-a.g);this.b=Math.max(0,this.b-a.b);return this;},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this;},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;return this;},lerp:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this;},equals:function(a){return(a.r===this.r)&&(a.g===this.g)&&(a.b===this.b);},fromArray:function(a,b){if(b===undefined)b=0;this.r=a[b];this.g=a[b+1];this.b=a[b+2];return this;},toArray:function(a,b){if(a===undefined)a=[];if(b===undefined)b=0;a[b]=this.r;a[b+1]=this.g;a[b+2]=this.b;return a;},toJSON:function(){return this.getHex();}});var cG={common:{diffuse:{value:new cF(0xeeeeee)},opacity:{value:1.0},map:{value:null},offsetRepeat:{value:new bE(0,0,1,1)},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1.0},refractionRatio:{value:0.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new bB(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:0.00025},fogNear:{value:1},fogFar:{value:2000},fogColor:{value:new cF(0xffffff)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new cF(0xeeeeee)},opacity:{value:1.0},size:{value:1.0},scale:{value:1.0},map:{value:null},offsetRepeat:{value:new bE(0,0,1,1)}}};var cH={merge:function(a){var b={};for(var c=0;c<a.length;c++){var d=this.clone(a[c]);for(var e in d)b[e]=d[e];}return b;},clone:function(a){var b={};for(var c in a){b[c]={};for(var d in a[c]){var e=a[c][d];if(e&&(e.isColor||e.isMatrix3||e.isMatrix4||e.isVector2||e.isVector3||e.isVector4||e.isTexture))b[c][d]=e.clone();else if(Array.isArray(e))b[c][d]=e.slice();else b[c][d]=e;}}return b;}};var cI="#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n";var cJ="#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n";var cK="#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n";var cL="#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n";var cM="#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif";var cN="\nvec3 transformed = vec3( position );\n";var cO="\nvec3 objectNormal = vec3( normal );\n";var cP="float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t}\n\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat theta = acos( dot( N, V ) );\n\tvec2 uv = vec2(\n\t\tsqrt( saturate( roughness ) ),\n\t\tsaturate( theta / ( 0.5 * PI ) ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\n\tfloat b = 3.45068 + (4.18814 + y) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transpose( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\n\treturn result;\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n";var cQ="#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n";var cR="#if NUM_CLIPPING_PLANES > 0\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\n\t\tvec4 plane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t\t\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\n\t\t\tvec4 plane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t\n\t#endif\n#endif\n";var cS="#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n";var cT="#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n";var cU="#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n";var cV="#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif";var cW="#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n";var cX="#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif";var cY="#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif";var cZ="#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transpose( const in mat3 v ) {\n\tmat3 tmp;\n\ttmp[0] = vec3(v[0].x, v[1].x, v[2].x);\n\ttmp[1] = vec3(v[0].y, v[1].y, v[2].y);\n\ttmp[2] = vec3(v[0].z, v[1].z, v[2].z);\n\treturn tmp;\n}\n";var de="#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n";var df="vec3 transformedNormal = normalMatrix * objectNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n";var dg="#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n";var dh="#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n";var di="#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n";var dj="#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n";var dk="  gl_FragColor = linearToOutputTexel( gl_FragColor );\n";var dl="\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n";var dm="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n";var dn="#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n";var dp="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n";var dq="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n";var dr="\n#ifdef USE_FOG\nfogDepth = -mvPosition.z;\n#endif";var ds="#ifdef USE_FOG\n  varying float fogDepth;\n#endif\n";var dt="#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n";var du="#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif\n";var dv="#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif\n";var dw="#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n";var dx="#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif";var dy="vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n";var dz="uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltcMat;\tuniform sampler2D ltcMag;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n";var dA="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n";var dB="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n";var dC="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n";var dD="struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tfloat norm = texture2D( ltcMag, uv ).a;\n\t\tvec4 t = texture2D( ltcMat, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3(   1,   0, t.y ),\n\t\t\tvec3(   0, t.z,   0 ),\n\t\t\tvec3( t.w,   0, t.x )\n\t\t);\n\t\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n";var dE="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\t#ifndef STANDARD\n\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n\t#else\n\t\tvec3 clearCoatRadiance = vec3( 0.0 );\n\t#endif\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n";var dF="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif";var dG="#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n";var dH="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif";var dI="#ifdef USE_LOGDEPTHBUF\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\t#endif\n#endif\n";var dJ="#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n";var dK="#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n";var dL="#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n";var dM="#ifdef USE_MAP\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n#endif\n";var dN="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif\n";var dP="#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif";var dQ="#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n";var dR="#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif";var dS="#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n";var dT="#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n";var dU="#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n";var dV="vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 1.0 - 2.0 * rgb.xyz;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n";var dW="#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n";var dX="vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n";var dY="#if defined( DITHERING )\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif\n";var dZ="#if defined( DITHERING )\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif\n";var ef="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif\n";var eg="#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif";var eh="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n";var ei="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n";var ej="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n";var ek="float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n";var el="#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif";var em="#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n";var en="#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif\n";var eo="#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n";var ep="float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif";var eq="#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif";var er="#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n";var es="#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n";var et="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif";var eu="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n#endif\n";var ev="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif";var ew="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif";var ex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif";var ey="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif";var ez="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n#endif\n";var eA="uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tgl_FragColor.a *= opacity;\n}\n";var eB="varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n";var eC="#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n";var eD="#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n";var eE="#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}\n";var eF="#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}\n";var eG="uniform sampler2D tEquirect;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}\n";var eH="varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n";var eI="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n";var eJ="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}\n";var eK="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n";var eL="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}\n";var eM="uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n";var eN="#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n";var eO="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n";var eP="#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n";var eQ="#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n";var eR="#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n";var eS="#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}\n";var eT="#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}\n";var eU="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n";var eV="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n";var eW="uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n}\n";var eX="#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n";var eY={alphamap_fragment:cI,alphamap_pars_fragment:cJ,alphatest_fragment:cK,aomap_fragment:cL,aomap_pars_fragment:cM,begin_vertex:cN,beginnormal_vertex:cO,bsdfs:cP,bumpmap_pars_fragment:cQ,clipping_planes_fragment:cR,clipping_planes_pars_fragment:cS,clipping_planes_pars_vertex:cT,clipping_planes_vertex:cU,color_fragment:cV,color_pars_fragment:cW,color_pars_vertex:cX,color_vertex:cY,common:cZ,cube_uv_reflection_fragment:de,defaultnormal_vertex:df,displacementmap_pars_vertex:dg,displacementmap_vertex:dh,emissivemap_fragment:di,emissivemap_pars_fragment:dj,encodings_fragment:dk,encodings_pars_fragment:dl,envmap_fragment:dm,envmap_pars_fragment:dn,envmap_pars_vertex:dp,envmap_vertex:dq,fog_vertex:dr,fog_pars_vertex:ds,fog_fragment:dt,fog_pars_fragment:du,gradientmap_pars_fragment:dv,lightmap_fragment:dw,lightmap_pars_fragment:dx,lights_lambert_vertex:dy,lights_pars:dz,lights_phong_fragment:dA,lights_phong_pars_fragment:dB,lights_physical_fragment:dC,lights_physical_pars_fragment:dD,lights_template:dE,logdepthbuf_fragment:dF,logdepthbuf_pars_fragment:dG,logdepthbuf_pars_vertex:dH,logdepthbuf_vertex:dI,map_fragment:dJ,map_pars_fragment:dK,map_particle_fragment:dL,map_particle_pars_fragment:dM,metalnessmap_fragment:dN,metalnessmap_pars_fragment:dP,morphnormal_vertex:dQ,morphtarget_pars_vertex:dR,morphtarget_vertex:dS,normal_fragment:dT,normalmap_pars_fragment:dU,packing:dV,premultiplied_alpha_fragment:dW,project_vertex:dX,dithering_fragment:dY,dithering_pars_fragment:dZ,roughnessmap_fragment:ef,roughnessmap_pars_fragment:eg,shadowmap_pars_fragment:eh,shadowmap_pars_vertex:ei,shadowmap_vertex:ej,shadowmask_pars_fragment:ek,skinbase_vertex:el,skinning_pars_vertex:em,skinning_vertex:en,skinnormal_vertex:eo,specularmap_fragment:ep,specularmap_pars_fragment:eq,tonemapping_fragment:er,tonemapping_pars_fragment:es,uv_pars_fragment:et,uv_pars_vertex:eu,uv_vertex:ev,uv2_pars_fragment:ew,uv2_pars_vertex:ex,uv2_vertex:ey,worldpos_vertex:ez,cube_frag:eA,cube_vert:eB,depth_frag:eC,depth_vert:eD,distanceRGBA_frag:eE,distanceRGBA_vert:eF,equirect_frag:eG,equirect_vert:eH,linedashed_frag:eI,linedashed_vert:eJ,meshbasic_frag:eK,meshbasic_vert:eL,meshlambert_frag:eM,meshlambert_vert:eN,meshphong_frag:eO,meshphong_vert:eP,meshphysical_frag:eQ,meshphysical_vert:eR,normal_frag:eS,normal_vert:eT,points_frag:eU,points_vert:eV,shadow_frag:eW,shadow_vert:eX};var eZ={basic:{uniforms:cH.merge([cG.common,cG.specularmap,cG.envmap,cG.aomap,cG.lightmap,cG.fog]),vertexShader:eY.meshbasic_vert,fragmentShader:eY.meshbasic_frag},lambert:{uniforms:cH.merge([cG.common,cG.specularmap,cG.envmap,cG.aomap,cG.lightmap,cG.emissivemap,cG.fog,cG.lights,{emissive:{value:new cF(0x000000)}}]),vertexShader:eY.meshlambert_vert,fragmentShader:eY.meshlambert_frag},phong:{uniforms:cH.merge([cG.common,cG.specularmap,cG.envmap,cG.aomap,cG.lightmap,cG.emissivemap,cG.bumpmap,cG.normalmap,cG.displacementmap,cG.gradientmap,cG.fog,cG.lights,{emissive:{value:new cF(0x000000)},specular:{value:new cF(0x111111)},shininess:{value:30}}]),vertexShader:eY.meshphong_vert,fragmentShader:eY.meshphong_frag},standard:{uniforms:cH.merge([cG.common,cG.envmap,cG.aomap,cG.lightmap,cG.emissivemap,cG.bumpmap,cG.normalmap,cG.displacementmap,cG.roughnessmap,cG.metalnessmap,cG.fog,cG.lights,{emissive:{value:new cF(0x000000)},roughness:{value:0.5},metalness:{value:0.5},envMapIntensity:{value:1}}]),vertexShader:eY.meshphysical_vert,fragmentShader:eY.meshphysical_frag},points:{uniforms:cH.merge([cG.points,cG.fog]),vertexShader:eY.points_vert,fragmentShader:eY.points_frag},dashed:{uniforms:cH.merge([cG.common,cG.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:eY.linedashed_vert,fragmentShader:eY.linedashed_frag},depth:{uniforms:cH.merge([cG.common,cG.displacementmap]),vertexShader:eY.depth_vert,fragmentShader:eY.depth_frag},normal:{uniforms:cH.merge([cG.common,cG.bumpmap,cG.normalmap,cG.displacementmap,{opacity:{value:1.0}}]),vertexShader:eY.normal_vert,fragmentShader:eY.normal_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1.0}},vertexShader:eY.cube_vert,fragmentShader:eY.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:eY.equirect_vert,fragmentShader:eY.equirect_frag},distanceRGBA:{uniforms:cH.merge([cG.common,cG.displacementmap,{referencePosition:{value:new bI()},nearDistance:{value:1},farDistance:{value:1000}}]),vertexShader:eY.distanceRGBA_vert,fragmentShader:eY.distanceRGBA_frag},shadow:{uniforms:cH.merge([cG.lights,{color:{value:new cF(0x00000)},opacity:{value:1.0}}]),vertexShader:eY.shadow_vert,fragmentShader:eY.shadow_frag}};eZ.physical={uniforms:cH.merge([eZ.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:eY.meshphysical_vert,fragmentShader:eY.meshphysical_frag};function fg(a,b){this.min=(a!==undefined)?a:new bB(+Infinity,+Infinity);this.max=(b!==undefined)?b:new bB(-Infinity,-Infinity);}Object.assign(fg.prototype,{set:function(a,b){this.min.copy(a);this.max.copy(b);return this;},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this;},setFromCenterAndSize:function(){var a=new bB();return function b(b,c){var d=a.copy(c).multiplyScalar(0.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this;};}(),clone:function(){return new this.constructor().copy(this);},copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this;},makeEmpty:function(){this.min.x=this.min.y=+Infinity;this.max.x=this.max.y=-Infinity;return this;},isEmpty:function(){return(this.max.x<this.min.x)||(this.max.y<this.min.y);},getCenter:function(a){var b=a||new bB();return this.isEmpty()?b.set(0,0):b.addVectors(this.min,this.max).multiplyScalar(0.5);},getSize:function(a){var b=a||new bB();return this.isEmpty()?b.set(0,0):b.subVectors(this.max,this.min);},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this;},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this;},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this;},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?false:true;},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y;},getParameter:function(a,b){var c=b||new bB();return c.set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y));},intersectsBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y?false:true;},clampPoint:function(a,b){var c=b||new bB();return c.copy(a).clamp(this.min,this.max);},distanceToPoint:function(){var a=new bB();return function b(b){var c=a.copy(b).clamp(this.min,this.max);return c.sub(b).length();};}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this;},union:function(a){this.min.min(a.min);this.max.max(a.max);return this;},translate:function(a){this.min.add(a);this.max.add(a);return this;},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max);}});function fh(a,b,c,d,e){var f,g;var h,i,j,k;var l,m;function n(){var a=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]);var d=new Uint16Array([0,1,2,0,2,3]);f=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,f);b.bufferData(b.ARRAY_BUFFER,a,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.bufferData(b.ELEMENT_ARRAY_BUFFER,d,b.STATIC_DRAW);l=b.createTexture();m=b.createTexture();c.bindTexture(b.TEXTURE_2D,l);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);c.bindTexture(b.TEXTURE_2D,m);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);h={vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if ( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if ( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if ( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")};i=o(h);j={vertex:b.getAttribLocation(i,"position"),uv:b.getAttribLocation(i,"uv")};k={renderType:b.getUniformLocation(i,"renderType"),map:b.getUniformLocation(i,"map"),occlusionMap:b.getUniformLocation(i,"occlusionMap"),opacity:b.getUniformLocation(i,"opacity"),color:b.getUniformLocation(i,"color"),scale:b.getUniformLocation(i,"scale"),rotation:b.getUniformLocation(i,"rotation"),screenPosition:b.getUniformLocation(i,"screenPosition")};}this.render=function(a,e,h,o){if(a.length===0)return;var p=new bI();var q=o.w/o.z,r=o.z*0.5,s=o.w*0.5;var t=16/o.w,u=new bB(t*q,t);var v=new bI(1,1,0),w=new bB(1,1);var x=new fg();x.min.set(o.x,o.y);x.max.set(o.x+(o.z-16),o.y+(o.w-16));if(i===undefined)n();c.useProgram(i);c.initAttributes();c.enableAttribute(j.vertex);c.enableAttribute(j.uv);c.disableUnusedAttributes();b.uniform1i(k.occlusionMap,0);b.uniform1i(k.map,1);b.bindBuffer(b.ARRAY_BUFFER,f);b.vertexAttribPointer(j.vertex,2,b.FLOAT,false,2*8,0);b.vertexAttribPointer(j.uv,2,b.FLOAT,false,2*8,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);c.disable(b.CULL_FACE);c.buffers.depth.setMask(false);for(var y=0,z=a.length;y<z;y++){t=16/o.w;u.set(t*q,t);var A=a[y];p.set(A.matrixWorld.elements[12],A.matrixWorld.elements[13],A.matrixWorld.elements[14]);p.applyMatrix4(h.matrixWorldInverse);p.applyMatrix4(h.projectionMatrix);v.copy(p);w.x=o.x+(v.x*r)+r-8;w.y=o.y+(v.y*s)+s-8;if(x.containsPoint(w)===true){c.activeTexture(b.TEXTURE0);c.bindTexture(b.TEXTURE_2D,null);c.activeTexture(b.TEXTURE1);c.bindTexture(b.TEXTURE_2D,l);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,w.x,w.y,16,16,0);b.uniform1i(k.renderType,0);b.uniform2f(k.scale,u.x,u.y);b.uniform3f(k.screenPosition,v.x,v.y,v.z);c.disable(b.BLEND);c.enable(b.DEPTH_TEST);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);c.activeTexture(b.TEXTURE0);c.bindTexture(b.TEXTURE_2D,m);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,w.x,w.y,16,16,0);b.uniform1i(k.renderType,1);c.disable(b.DEPTH_TEST);c.activeTexture(b.TEXTURE1);c.bindTexture(b.TEXTURE_2D,l);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);A.positionScreen.copy(v);if(A.customUpdateCallback)A.customUpdateCallback(A);else A.updateLensFlares();b.uniform1i(k.renderType,2);c.enable(b.BLEND);for(var B=0,C=A.lensFlares.length;B<C;B++){var D=A.lensFlares[B];if(D.opacity>0.001&&D.scale>0.001){v.x=D.x;v.y=D.y;v.z=D.z;t=D.size*D.scale/o.w;u.x=t*q;u.y=t;b.uniform3f(k.screenPosition,v.x,v.y,v.z);b.uniform2f(k.scale,u.x,u.y);b.uniform1f(k.rotation,D.rotation);b.uniform1f(k.opacity,D.opacity);b.uniform3f(k.color,D.color.r,D.color.g,D.color.b);c.setBlending(D.blending,D.blendEquation,D.blendSrc,D.blendDst);d.setTexture2D(D.texture,1);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);}}}}c.enable(b.CULL_FACE);c.enable(b.DEPTH_TEST);c.buffers.depth.setMask(true);c.reset();};function o(a){var c=b.createProgram();var d=b.createShader(b.FRAGMENT_SHADER);var f=b.createShader(b.VERTEX_SHADER);var g="precision "+e.precision+" float;\n";b.shaderSource(d,g+a.fragmentShader);b.shaderSource(f,g+a.vertexShader);b.compileShader(d);b.compileShader(f);b.attachShader(c,d);b.attachShader(c,f);b.linkProgram(c);return c;}}function fi(a,b,c,d,e,f,g,h,i){bD.call(this,a,b,c,d,e,f,g,h,i);this.needsUpdate=true;}fi.prototype=Object.create(bD.prototype);fi.prototype.constructor=fi;function fj(a,b,c,d,e){var f,g;var h,i,j;var k;var l=new bI();var m=new bH();var n=new bI();function o(){var a=new Float32Array([-0.5,-0.5,0,0,0.5,-0.5,1,0,0.5,0.5,1,1,-0.5,0.5,0,1]);var c=new Uint16Array([0,1,2,0,2,3]);f=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,f);b.bufferData(b.ARRAY_BUFFER,a,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.bufferData(b.ELEMENT_ARRAY_BUFFER,c,b.STATIC_DRAW);h=p();i={position:b.getAttribLocation(h,'position'),uv:b.getAttribLocation(h,'uv')};j={uvOffset:b.getUniformLocation(h,'uvOffset'),uvScale:b.getUniformLocation(h,'uvScale'),rotation:b.getUniformLocation(h,'rotation'),scale:b.getUniformLocation(h,'scale'),color:b.getUniformLocation(h,'color'),map:b.getUniformLocation(h,'map'),opacity:b.getUniformLocation(h,'opacity'),modelViewMatrix:b.getUniformLocation(h,'modelViewMatrix'),projectionMatrix:b.getUniformLocation(h,'projectionMatrix'),fogType:b.getUniformLocation(h,'fogType'),fogDensity:b.getUniformLocation(h,'fogDensity'),fogNear:b.getUniformLocation(h,'fogNear'),fogFar:b.getUniformLocation(h,'fogFar'),fogColor:b.getUniformLocation(h,'fogColor'),alphaTest:b.getUniformLocation(h,'alphaTest')};var d=document.createElementNS('http://www.w3.org/1999/xhtml','canvas');d.width=8;d.height=8;var e=d.getContext('2d');e.fillStyle='white';e.fillRect(0,0,8,8);k=new fi(d);}this.render=function(e,p,r){if(e.length===0)return;if(h===undefined)o();c.useProgram(h);c.initAttributes();c.enableAttribute(i.position);c.enableAttribute(i.uv);c.disableUnusedAttributes();c.disable(b.CULL_FACE);c.enable(b.BLEND);b.bindBuffer(b.ARRAY_BUFFER,f);b.vertexAttribPointer(i.position,2,b.FLOAT,false,2*8,0);b.vertexAttribPointer(i.uv,2,b.FLOAT,false,2*8,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.uniformMatrix4fv(j.projectionMatrix,false,r.projectionMatrix.elements);c.activeTexture(b.TEXTURE0);b.uniform1i(j.map,0);var s=0;var t=0;var u=p.fog;if(u){b.uniform3f(j.fogColor,u.color.r,u.color.g,u.color.b);if(u.isFog){b.uniform1f(j.fogNear,u.near);b.uniform1f(j.fogFar,u.far);b.uniform1i(j.fogType,1);s=1;t=1;}else if(u.isFogExp2){b.uniform1f(j.fogDensity,u.density);b.uniform1i(j.fogType,2);s=2;t=2;}}else{b.uniform1i(j.fogType,0);s=0;t=0;}for(var v=0,w=e.length;v<w;v++){var x=e[v];x.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,x.matrixWorld);x.z=-x.modelViewMatrix.elements[14];}e.sort(q);var y=[];for(var v=0,w=e.length;v<w;v++){var x=e[v];var z=x.material;if(z.visible===false)continue;x.onBeforeRender(a,p,r,undefined,z,undefined);b.uniform1f(j.alphaTest,z.alphaTest);b.uniformMatrix4fv(j.modelViewMatrix,false,x.modelViewMatrix.elements);x.matrixWorld.decompose(l,m,n);y[0]=n.x;y[1]=n.y;var A=0;if(p.fog&&z.fog)A=t;if(s!==A){b.uniform1i(j.fogType,A);s=A;}if(z.map!==null){b.uniform2f(j.uvOffset,z.map.offset.x,z.map.offset.y);b.uniform2f(j.uvScale,z.map.repeat.x,z.map.repeat.y);}else{b.uniform2f(j.uvOffset,0,0);b.uniform2f(j.uvScale,1,1);}b.uniform1f(j.opacity,z.opacity);b.uniform3f(j.color,z.color.r,z.color.g,z.color.b);b.uniform1f(j.rotation,z.rotation);b.uniform2fv(j.scale,y);c.setBlending(z.blending,z.blendEquation,z.blendSrc,z.blendDst,z.blendEquationAlpha,z.blendSrcAlpha,z.blendDstAlpha,z.premultipliedAlpha);c.buffers.depth.setTest(z.depthTest);c.buffers.depth.setMask(z.depthWrite);d.setTexture2D(z.map||k,0);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);x.onAfterRender(a,p,r,undefined,z,undefined);}c.enable(b.CULL_FACE);c.reset();};function p(){var a=b.createProgram();var c=b.createShader(b.VERTEX_SHADER);var d=b.createShader(b.FRAGMENT_SHADER);b.shaderSource(c,['precision '+e.precision+' float;','#define SHADER_NAME '+'SpriteMaterial','uniform mat4 modelViewMatrix;','uniform mat4 projectionMatrix;','uniform float rotation;','uniform vec2 scale;','uniform vec2 uvOffset;','uniform vec2 uvScale;','attribute vec2 position;','attribute vec2 uv;','varying vec2 vUV;','void main() {','vUV = uvOffset + uv * uvScale;','vec2 alignedPosition = position * scale;','vec2 rotatedPosition;','rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;','rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;','vec4 finalPosition;','finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );','finalPosition.xy += rotatedPosition;','finalPosition = projectionMatrix * finalPosition;','gl_Position = finalPosition;','}'].join('\n'));b.shaderSource(d,['precision '+e.precision+' float;','#define SHADER_NAME '+'SpriteMaterial','uniform vec3 color;','uniform sampler2D map;','uniform float opacity;','uniform int fogType;','uniform vec3 fogColor;','uniform float fogDensity;','uniform float fogNear;','uniform float fogFar;','uniform float alphaTest;','varying vec2 vUV;','void main() {','vec4 texture = texture2D( map, vUV );','if ( texture.a < alphaTest ) discard;','gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );','if ( fogType > 0 ) {','float depth = gl_FragCoord.z / gl_FragCoord.w;','float fogFactor = 0.0;','if ( fogType == 1 ) {','fogFactor = smoothstep( fogNear, fogFar, depth );','} else {','const float LOG2 = 1.442695;','fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );','fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );','}','gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );','}','}'].join('\n'));b.compileShader(c);b.compileShader(d);b.attachShader(a,c);b.attachShader(a,d);b.linkProgram(a);return a;}function q(a,b){if(a.renderOrder!==b.renderOrder)return a.renderOrder-b.renderOrder;else if(a.z!==b.z)return b.z-a.z;else return b.id-a.id;}}var fk=0;function fl(){Object.defineProperty(this,'id',{value:fk++});this.uuid=bA.generateUUID();this.name='';this.type='Material';this.fog=true;this.lights=true;this.blending=w;this.side=n;this.flatShading=false;this.vertexColors=s;this.opacity=1;this.transparent=false;this.blendSrc=K;this.blendDst=L;this.blendEquation=B;this.blendSrcAlpha=null;this.blendDstAlpha=null;this.blendEquationAlpha=null;this.depthFunc=U;this.depthTest=true;this.depthWrite=true;this.clippingPlanes=null;this.clipIntersection=false;this.clipShadows=false;this.colorWrite=true;this.precision=null;this.polygonOffset=false;this.polygonOffsetFactor=0;this.polygonOffsetUnits=0;this.dithering=false;this.alphaTest=0;this.premultipliedAlpha=false;this.overdraw=0;this.visible=true;this.userData={};this.needsUpdate=true;}Object.assign(fl.prototype,b.prototype,{isMaterial:true,onBeforeCompile:function(){},setValues:function(a){if(a===undefined)return;for(var b in a){var c=a[b];if(c===undefined){console.warn("THREE.Material: '"+b+"' parameter is undefined.");continue;}if(b==='shading'){console.warn('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.');this.flatShading=(c===q)?true:false;continue;}var d=this[b];if(d===undefined){console.warn("THREE."+this.type+": '"+b+"' is not a property of this material.");continue;}if(d&&d.isColor)d.set(c);else if((d&&d.isVector3)&&(c&&c.isVector3))d.copy(c);else if(b==='overdraw')this[b]=Number(c);else this[b]=c;}},toJSON:function(a){var b=a===undefined;if(b)a={textures:{},images:{}};var c={metadata:{version:4.5,type:'Material',generator:'Material.toJSON'}};c.uuid=this.uuid;c.type=this.type;if(this.name!=='')c.name=this.name;if(this.color&&this.color.isColor)c.color=this.color.getHex();if(this.roughness!==undefined)c.roughness=this.roughness;if(this.metalness!==undefined)c.metalness=this.metalness;if(this.emissive&&this.emissive.isColor)c.emissive=this.emissive.getHex();if(this.specular&&this.specular.isColor)c.specular=this.specular.getHex();if(this.shininess!==undefined)c.shininess=this.shininess;if(this.clearCoat!==undefined)c.clearCoat=this.clearCoat;if(this.clearCoatRoughness!==undefined)c.clearCoatRoughness=this.clearCoatRoughness;if(this.map&&this.map.isTexture)c.map=this.map.toJSON(a).uuid;if(this.alphaMap&&this.alphaMap.isTexture)c.alphaMap=this.alphaMap.toJSON(a).uuid;if(this.lightMap&&this.lightMap.isTexture)c.lightMap=this.lightMap.toJSON(a).uuid;if(this.bumpMap&&this.bumpMap.isTexture){c.bumpMap=this.bumpMap.toJSON(a).uuid;c.bumpScale=this.bumpScale;}if(this.normalMap&&this.normalMap.isTexture){c.normalMap=this.normalMap.toJSON(a).uuid;c.normalScale=this.normalScale.toArray();}if(this.displacementMap&&this.displacementMap.isTexture){c.displacementMap=this.displacementMap.toJSON(a).uuid;c.displacementScale=this.displacementScale;c.displacementBias=this.displacementBias;}if(this.roughnessMap&&this.roughnessMap.isTexture)c.roughnessMap=this.roughnessMap.toJSON(a).uuid;if(this.metalnessMap&&this.metalnessMap.isTexture)c.metalnessMap=this.metalnessMap.toJSON(a).uuid;if(this.emissiveMap&&this.emissiveMap.isTexture)c.emissiveMap=this.emissiveMap.toJSON(a).uuid;if(this.specularMap&&this.specularMap.isTexture)c.specularMap=this.specularMap.toJSON(a).uuid;if(this.envMap&&this.envMap.isTexture){c.envMap=this.envMap.toJSON(a).uuid;c.reflectivity=this.reflectivity;}if(this.gradientMap&&this.gradientMap.isTexture)c.gradientMap=this.gradientMap.toJSON(a).uuid;if(this.size!==undefined)c.size=this.size;if(this.sizeAttenuation!==undefined)c.sizeAttenuation=this.sizeAttenuation;if(this.blending!==w)c.blending=this.blending;if(this.flatShading===true)c.flatShading=this.flatShading;if(this.side!==n)c.side=this.side;if(this.vertexColors!==s)c.vertexColors=this.vertexColors;if(this.opacity<1)c.opacity=this.opacity;if(this.transparent===true)c.transparent=this.transparent;c.depthFunc=this.depthFunc;c.depthTest=this.depthTest;c.depthWrite=this.depthWrite;if(this.dithering===true)c.dithering=true;if(this.alphaTest>0)c.alphaTest=this.alphaTest;if(this.premultipliedAlpha===true)c.premultipliedAlpha=this.premultipliedAlpha;if(this.wireframe===true)c.wireframe=this.wireframe;if(this.wireframeLinewidth>1)c.wireframeLinewidth=this.wireframeLinewidth;if(this.wireframeLinecap!=='round')c.wireframeLinecap=this.wireframeLinecap;if(this.wireframeLinejoin!=='round')c.wireframeLinejoin=this.wireframeLinejoin;if(this.morphTargets===true)c.morphTargets=true;if(this.skinning===true)c.skinning=true;if(this.visible===false)c.visible=false;if(JSON.stringify(this.userData)!=='{}')c.userData=this.userData;function d(a){var b=[];for(var c in a){var d=a[c];delete d.metadata;b.push(d);}return b;}if(b){var e=d(a.textures);var f=d(a.images);if(e.length>0)c.textures=e;if(f.length>0)c.images=f;}return c;},clone:function(){return new this.constructor().copy(this);},copy:function(a){this.name=a.name;this.fog=a.fog;this.lights=a.lights;this.blending=a.blending;this.side=a.side;this.flatShading=a.flatShading;this.vertexColors=a.vertexColors;this.opacity=a.opacity;this.transparent=a.transparent;this.blendSrc=a.blendSrc;this.blendDst=a.blendDst;this.blendEquation=a.blendEquation;this.blendSrcAlpha=a.blendSrcAlpha;this.blendDstAlpha=a.blendDstAlpha;this.blendEquationAlpha=a.blendEquationAlpha;this.depthFunc=a.depthFunc;this.depthTest=a.depthTest;this.depthWrite=a.depthWrite;this.colorWrite=a.colorWrite;this.precision=a.precision;this.polygonOffset=a.polygonOffset;this.polygonOffsetFactor=a.polygonOffsetFactor;this.polygonOffsetUnits=a.polygonOffsetUnits;this.dithering=a.dithering;this.alphaTest=a.alphaTest;this.premultipliedAlpha=a.premultipliedAlpha;this.overdraw=a.overdraw;this.visible=a.visible;this.userData=JSON.parse(JSON.stringify(a.userData));this.clipShadows=a.clipShadows;this.clipIntersection=a.clipIntersection;var b=a.clippingPlanes,c=null;if(b!==null){var d=b.length;c=new Array(d);for(var e=0;e!==d;++e)c[e]=b[e].clone();}this.clippingPlanes=c;return this;},dispose:function(){this.dispatchEvent({type:'dispose'});}});function fm(a){fl.call(this);this.type='ShaderMaterial';this.defines={};this.uniforms={};this.vertexShader='void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}';this.fragmentShader='void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}';this.linewidth=1;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.lights=false;this.clipping=false;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.extensions={derivatives:false,fragDepth:false,drawBuffers:false,shaderTextureLOD:false};this.defaultAttributeValues={'color':[1,1,1],'uv':[0,0],'uv2':[0,0]};this.index0AttributeName=undefined;if(a!==undefined){if(a.attributes!==undefined)console.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');this.setValues(a);}}fm.prototype=Object.create(fl.prototype);fm.prototype.constructor=fm;fm.prototype.isShaderMaterial=true;fm.prototype.copy=function(a){fl.prototype.copy.call(this,a);this.fragmentShader=a.fragmentShader;this.vertexShader=a.vertexShader;this.uniforms=cH.clone(a.uniforms);this.defines=a.defines;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.lights=a.lights;this.clipping=a.clipping;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;this.extensions=a.extensions;return this;};fm.prototype.toJSON=function(a){var b=fl.prototype.toJSON.call(this,a);b.uniforms=this.uniforms;b.vertexShader=this.vertexShader;b.fragmentShader=this.fragmentShader;return b;};function fn(a){fl.call(this);this.type='MeshDepthMaterial';this.depthPacking=by;this.skinning=false;this.morphTargets=false;this.map=null;this.alphaMap=null;this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.lights=false;this.setValues(a);}fn.prototype=Object.create(fl.prototype);fn.prototype.constructor=fn;fn.prototype.isMeshDepthMaterial=true;fn.prototype.copy=function(a){fl.prototype.copy.call(this,a);this.depthPacking=a.depthPacking;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.map=a.map;this.alphaMap=a.alphaMap;this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;return this;};function fo(a){fl.call(this);this.type='MeshDistanceMaterial';this.referencePosition=new bI();this.nearDistance=1;this.farDistance=1000;this.skinning=false;this.morphTargets=false;this.map=null;this.alphaMap=null;this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.fog=false;this.lights=false;this.setValues(a);}fo.prototype=Object.create(fl.prototype);fo.prototype.constructor=fo;fo.prototype.isMeshDistanceMaterial=true;fo.prototype.copy=function(a){fl.prototype.copy.call(this,a);this.referencePosition.copy(a.referencePosition);this.nearDistance=a.nearDistance;this.farDistance=a.farDistance;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.map=a.map;this.alphaMap=a.alphaMap;this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;return this;};function fp(a,b){this.min=(a!==undefined)?a:new bI(+Infinity,+Infinity,+Infinity);this.max=(b!==undefined)?b:new bI(-Infinity,-Infinity,-Infinity);}Object.assign(fp.prototype,{isBox3:true,set:function(a,b){this.min.copy(a);this.max.copy(b);return this;},setFromArray:function(a){var b=+Infinity;var c=+Infinity;var d=+Infinity;var e=-Infinity;var f=-Infinity;var g=-Infinity;for(var h=0,i=a.length;h<i;h+=3){var j=a[h];var k=a[h+1];var l=a[h+2];if(j<b)b=j;if(k<c)c=k;if(l<d)d=l;if(j>e)e=j;if(k>f)f=k;if(l>g)g=l;}this.min.set(b,c,d);this.max.set(e,f,g);return this;},setFromBufferAttribute:function(a){var b=+Infinity;var c=+Infinity;var d=+Infinity;var e=-Infinity;var f=-Infinity;var g=-Infinity;for(var h=0,i=a.count;h<i;h++){var j=a.getX(h);var k=a.getY(h);var l=a.getZ(h);if(j<b)b=j;if(k<c)c=k;if(l<d)d=l;if(j>e)e=j;if(k>f)f=k;if(l>g)g=l;}this.min.set(b,c,d);this.max.set(e,f,g);return this;},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this;},setFromCenterAndSize:function(){var a=new bI();return function b(b,c){var d=a.copy(c).multiplyScalar(0.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this;};}(),setFromObject:function(a){this.makeEmpty();return this.expandByObject(a);},clone:function(){return new this.constructor().copy(this);},copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this;},makeEmpty:function(){this.min.x=this.min.y=this.min.z=+Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this;},isEmpty:function(){return(this.max.x<this.min.x)||(this.max.y<this.min.y)||(this.max.z<this.min.z);},getCenter:function(a){var b=a||new bI();return this.isEmpty()?b.set(0,0,0):b.addVectors(this.min,this.max).multiplyScalar(0.5);},getSize:function(a){var b=a||new bI();return this.isEmpty()?b.set(0,0,0):b.subVectors(this.max,this.min);},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this;},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this;},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this;},expandByObject:function(){var a=new bI();return function b(b){var c=this;b.updateMatrixWorld(true);b.traverse(function(b){var d,e;var f=b.geometry;if(f!==undefined)if(f.isGeometry){var g=f.vertices;for(d=0,e=g.length;d<e;d++){a.copy(g[d]);a.applyMatrix4(b.matrixWorld);c.expandByPoint(a);}}else if(f.isBufferGeometry){var h=f.attributes.position;if(h!==undefined)for(d=0,e=h.count;d<e;d++){a.fromBufferAttribute(h,d).applyMatrix4(b.matrixWorld);c.expandByPoint(a);}}});return this;};}(),containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z?false:true;},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z;},getParameter:function(a,b){var c=b||new bI();return c.set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z));},intersectsBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z?false:true;},intersectsSphere:(function(){var a=new bI();return function b(b){this.clampPoint(b.center,a);return a.distanceToSquared(b.center)<=(b.radius*b.radius);};})(),intersectsPlane:function(a){var b,c;if(a.normal.x>0){b=a.normal.x*this.min.x;c=a.normal.x*this.max.x;}else{b=a.normal.x*this.max.x;c=a.normal.x*this.min.x;}if(a.normal.y>0){b+=a.normal.y*this.min.y;c+=a.normal.y*this.max.y;}else{b+=a.normal.y*this.max.y;c+=a.normal.y*this.min.y;}if(a.normal.z>0){b+=a.normal.z*this.min.z;c+=a.normal.z*this.max.z;}else{b+=a.normal.z*this.max.z;c+=a.normal.z*this.min.z;}return(b<=a.constant&&c>=a.constant);},clampPoint:function(a,b){var c=b||new bI();return c.copy(a).clamp(this.min,this.max);},distanceToPoint:function(){var a=new bI();return function b(b){var c=a.copy(b).clamp(this.min,this.max);return c.sub(b).length();};}(),getBoundingSphere:function(){var a=new bI();return function b(b){var c=b||new fq();this.getCenter(c.center);c.radius=this.getSize(a).length()*0.5;return c;};}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);if(this.isEmpty())this.makeEmpty();return this;},union:function(a){this.min.min(a.min);this.max.max(a.max);return this;},applyMatrix4:function(){var a=[new bI(),new bI(),new bI(),new bI(),new bI(),new bI(),new bI(),new bI()];return function b(b){if(this.isEmpty())return this;a[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(b);a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b);a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b);a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b);a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b);a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b);a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b);a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.setFromPoints(a);return this;};}(),translate:function(a){this.min.add(a);this.max.add(a);return this;},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max);}});function fq(a,b){this.center=(a!==undefined)?a:new bI();this.radius=(b!==undefined)?b:0;}Object.assign(fq.prototype,{set:function(a,b){this.center.copy(a);this.radius=b;return this;},setFromPoints:function(){var a=new fp();return function b(b,c){var d=this.center;if(c!==undefined)d.copy(c);else a.setFromPoints(b).getCenter(d);var e=0;for(var f=0,g=b.length;f<g;f++)e=Math.max(e,d.distanceToSquared(b[f]));this.radius=Math.sqrt(e);return this;};}(),clone:function(){return new this.constructor().copy(this);},copy:function(a){this.center.copy(a.center);this.radius=a.radius;return this;},empty:function(){return(this.radius<=0);},containsPoint:function(a){return(a.distanceToSquared(this.center)<=(this.radius*this.radius));},distanceToPoint:function(a){return(a.distanceTo(this.center)-this.radius);},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=(b*b);},intersectsBox:function(a){return a.intersectsSphere(this);},intersectsPlane:function(a){return Math.abs(a.distanceToPoint(this.center))<=this.radius;},clampPoint:function(a,b){var c=this.center.distanceToSquared(a);var d=b||new bI();d.copy(a);if(c>(this.radius*this.radius)){d.sub(this.center).normalize();d.multiplyScalar(this.radius).add(this.center);}return d;},getBoundingBox:function(a){var b=a||new fp();b.set(this.center,this.center);b.expandByScalar(this.radius);return b;},applyMatrix4:function(a){this.center.applyMatrix4(a);this.radius=this.radius*a.getMaxScaleOnAxis();return this;},translate:function(a){this.center.add(a);return this;},equals:function(a){return a.center.equals(this.center)&&(a.radius===this.radius);}});function fr(){this.elements=[1,0,0,0,1,0,0,0,1];if(arguments.length>0)console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');}Object.assign(fr.prototype,{isMatrix3:true,set:function(a,b,c,d,e,f,g,h,i){var j=this.elements;j[0]=a;j[1]=d;j[2]=g;j[3]=b;j[4]=e;j[5]=h;j[6]=c;j[7]=f;j[8]=i;return this;},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this;},clone:function(){return new this.constructor().fromArray(this.elements);},copy:function(a){var b=this.elements;var c=a.elements;b[0]=c[0];b[1]=c[1];b[2]=c[2];b[3]=c[3];b[4]=c[4];b[5]=c[5];b[6]=c[6];b[7]=c[7];b[8]=c[8];return this;},setFromMatrix4:function(a){var b=a.elements;this.set(b[0],b[4],b[8],b[1],b[5],b[9],b[2],b[6],b[10]);return this;},applyToBufferAttribute:function(){var a=new bI();return function b(b){for(var c=0,d=b.count;c<d;c++){a.x=b.getX(c);a.y=b.getY(c);a.z=b.getZ(c);a.applyMatrix3(this);b.setXYZ(c,a.x,a.y,a.z);}return b;};}(),multiply:function(a){return this.multiplyMatrices(this,a);},premultiply:function(a){return this.multiplyMatrices(a,this);},multiplyMatrices:function(a,b){var c=a.elements;var d=b.elements;var e=this.elements;var f=c[0],g=c[3],h=c[6];var i=c[1],j=c[4],k=c[7];var l=c[2],m=c[5],n=c[8];var o=d[0],p=d[3],q=d[6];var r=d[1],s=d[4],t=d[7];var u=d[2],v=d[5],w=d[8];e[0]=f*o+g*r+h*u;e[3]=f*p+g*s+h*v;e[6]=f*q+g*t+h*w;e[1]=i*o+j*r+k*u;e[4]=i*p+j*s+k*v;e[7]=i*q+j*t+k*w;e[2]=l*o+m*r+n*u;e[5]=l*p+m*s+n*v;e[8]=l*q+m*t+n*w;return this;},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;b[6]*=a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this;},determinant:function(){var a=this.elements;var b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8];return b*f*j-b*g*i-c*e*j+c*g*h+d*e*i-d*f*h;},getInverse:function(a,b){if(a&&a.isMatrix4)console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");var c=a.elements,d=this.elements,e=c[0],f=c[1],g=c[2],h=c[3],i=c[4],j=c[5],k=c[6],l=c[7],m=c[8],n=m*i-j*l,o=j*k-m*h,p=l*h-i*k,q=e*n+f*o+g*p;if(q===0){var r="THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";if(b===true)throw new Error(r);else console.warn(r);return this.identity();}var s=1/q;d[0]=n*s;d[1]=(g*l-m*f)*s;d[2]=(j*f-g*i)*s;d[3]=o*s;d[4]=(m*e-g*k)*s;d[5]=(g*h-j*e)*s;d[6]=p*s;d[7]=(f*k-l*e)*s;d[8]=(i*e-f*h)*s;return this;},transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this;},getNormalMatrix:function(a){return this.setFromMatrix4(a).getInverse(this).transpose();},transposeIntoArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this;},equals:function(a){var b=this.elements;var c=a.elements;for(var d=0;d<9;d++)if(b[d]!==c[d])return false;return true;},fromArray:function(a,b){if(b===undefined)b=0;for(var c=0;c<9;c++)this.elements[c]=a[c+b];return this;},toArray:function(a,b){if(a===undefined)a=[];if(b===undefined)b=0;var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];return a;}});function fs(a,b){this.normal=(a!==undefined)?a:new bI(1,0,0);this.constant=(b!==undefined)?b:0;}Object.assign(fs.prototype,{set:function(a,b){this.normal.copy(a);this.constant=b;return this;},setComponents:function(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this;},setFromNormalAndCoplanarPoint:function(a,b){this.normal.copy(a);this.constant=-b.dot(this.normal);return this;},setFromCoplanarPoints:function(){var a=new bI();var b=new bI();return function c(c,d,e){var f=a.subVectors(e,d).cross(b.subVectors(c,d)).normalize();this.setFromNormalAndCoplanarPoint(f,c);return this;};}(),clone:function(){return new this.constructor().copy(this);},copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this;},normalize:function(){var a=1.0/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this;},negate:function(){this.constant*=-1;this.normal.negate();return this;},distanceToPoint:function(a){return this.normal.dot(a)+this.constant;},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius;},projectPoint:function(a,b){var c=b||new bI();return c.copy(this.normal).multiplyScalar(-this.distanceToPoint(a)).add(a);},intersectLine:function(){var a=new bI();return function b(b,c){var d=c||new bI();var e=b.delta(a);var f=this.normal.dot(e);if(f===0){if(this.distanceToPoint(b.start)===0)return d.copy(b.start);return undefined;}var g=-(b.start.dot(this.normal)+this.constant)/f;if(g<0||g>1)return undefined;return d.copy(e).multiplyScalar(g).add(b.start);};}(),intersectsLine:function(a){var b=this.distanceToPoint(a.start);var c=this.distanceToPoint(a.end);return(b<0&&c>0)||(c<0&&b>0);},intersectsBox:function(a){return a.intersectsPlane(this);},intersectsSphere:function(a){return a.intersectsPlane(this);},coplanarPoint:function(a){var b=a||new bI();return b.copy(this.normal).multiplyScalar(-this.constant);},applyMatrix4:function(){var a=new bI();var b=new fr();return function c(c,d){var e=d||b.getNormalMatrix(c);var f=this.coplanarPoint(a).applyMatrix4(c);var g=this.normal.applyMatrix3(e).normalize();this.constant=-f.dot(g);return this;};}(),translate:function(a){this.constant-=a.dot(this.normal);return this;},equals:function(a){return a.normal.equals(this.normal)&&(a.constant===this.constant);}});function ft(a,b,c,d,e,f){this.planes=[(a!==undefined)?a:new fs(),(b!==undefined)?b:new fs(),(c!==undefined)?c:new fs(),(d!==undefined)?d:new fs(),(e!==undefined)?e:new fs(),(f!==undefined)?f:new fs()];}Object.assign(ft.prototype,{set:function(a,b,c,d,e,f){var g=this.planes;g[0].copy(a);g[1].copy(b);g[2].copy(c);g[3].copy(d);g[4].copy(e);g[5].copy(f);return this;},clone:function(){return new this.constructor().copy(this);},copy:function(a){var b=this.planes;for(var c=0;c<6;c++)b[c].copy(a.planes[c]);return this;},setFromMatrix:function(a){var b=this.planes;var c=a.elements;var d=c[0],e=c[1],f=c[2],g=c[3];var h=c[4],i=c[5],j=c[6],k=c[7];var l=c[8],m=c[9],n=c[10],o=c[11];var p=c[12],q=c[13],r=c[14],s=c[15];b[0].setComponents(g-d,k-h,o-l,s-p).normalize();b[1].setComponents(g+d,k+h,o+l,s+p).normalize();b[2].setComponents(g+e,k+i,o+m,s+q).normalize();b[3].setComponents(g-e,k-i,o-m,s-q).normalize();b[4].setComponents(g-f,k-j,o-n,s-r).normalize();b[5].setComponents(g+f,k+j,o+n,s+r).normalize();return this;},intersectsObject:function(){var a=new fq();return function b(b){var c=b.geometry;if(c.boundingSphere===null)c.computeBoundingSphere();a.copy(c.boundingSphere).applyMatrix4(b.matrixWorld);return this.intersectsSphere(a);};}(),intersectsSprite:function(){var a=new fq();return function b(b){a.center.set(0,0,0);a.radius=0.7071067811865476;a.applyMatrix4(b.matrixWorld);return this.intersectsSphere(a);};}(),intersectsSphere:function(a){var b=this.planes;var c=a.center;var d=-a.radius;for(var e=0;e<6;e++){var f=b[e].distanceToPoint(c);if(f<d)return false;}return true;},intersectsBox:function(){var a=new bI(),b=new bI();return function c(c){var d=this.planes;for(var e=0;e<6;e++){var f=d[e];a.x=f.normal.x>0?c.min.x:c.max.x;b.x=f.normal.x>0?c.max.x:c.min.x;a.y=f.normal.y>0?c.min.y:c.max.y;b.y=f.normal.y>0?c.max.y:c.min.y;a.z=f.normal.z>0?c.min.z:c.max.z;b.z=f.normal.z>0?c.max.z:c.min.z;var g=f.distanceToPoint(a);var h=f.distanceToPoint(b);if(g<0&&h<0)return false;}return true;};}(),containsPoint:function(a){var b=this.planes;for(var c=0;c<6;c++)if(b[c].distanceToPoint(a)<0)return false;return true;}});function fu(a,b,c){var d=new ft(),e=new bJ(),f=new bB(),g=new bB(c,c),h=new bI(),i=new bI(),j=1,k=2,m=(j|k)+1,q=new Array(m),r=new Array(m),s={};var t=[new bI(1,0,0),new bI(-1,0,0),new bI(0,0,1),new bI(0,0,-1),new bI(0,1,0),new bI(0,-1,0)];var u=[new bI(0,1,0),new bI(0,1,0),new bI(0,1,0),new bI(0,1,0),new bI(0,0,1),new bI(0,0,-1)];var v=[new bE(),new bE(),new bE(),new bE(),new bE(),new bE()];for(var w=0;w!==m;++w){var x=(w&j)!==0;var y=(w&k)!==0;var z=new fn({depthPacking:bz,morphTargets:x,skinning:y});q[w]=z;var A=new fo({morphTargets:x,skinning:y});r[w]=A;}var B=this;this.enabled=false;this.autoUpdate=true;this.needsUpdate=false;this.type=l;this.renderReverseSided=true;this.renderSingleSided=true;this.render=function(b,c,j){if(B.enabled===false)return;if(B.autoUpdate===false&&B.needsUpdate===false)return;if(b.length===0)return;var k=a.context;var l=a.state;l.disable(k.BLEND);l.buffers.color.setClear(1,1,1,1);l.buffers.depth.setTest(true);l.setScissorTest(false);var m;for(var n=0,o=b.length;n<o;n++){var p=b[n];var q=p.shadow;var r=p&&p.isPointLight;if(q===undefined){console.warn('THREE.WebGLShadowMap:',p,'has no shadow.');continue;}var s=q.camera;f.copy(q.mapSize);f.min(g);if(r){var w=f.x;var x=f.y;v[0].set(w*2,x,w,x);v[1].set(0,x,w,x);v[2].set(w*3,x,w,x);v[3].set(w,x,w,x);v[4].set(w*3,0,w,x);v[5].set(w,0,w,x);f.x*=4.0;f.y*=2.0;}if(q.map===null){var y={minFilter:at,magFilter:at,format:aN};q.map=new bF(f.x,f.y,y);q.map.texture.name=p.name+".shadowMap";s.updateProjectionMatrix();}if(q.isSpotLightShadow)q.update(p);var z=q.map;var A=q.matrix;i.setFromMatrixPosition(p.matrixWorld);s.position.copy(i);if(r){m=6;A.makeTranslation(-i.x,-i.y,-i.z);}else{m=1;h.setFromMatrixPosition(p.target.matrixWorld);s.lookAt(h);s.updateMatrixWorld();A.set(0.5,0.0,0.0,0.5,0.0,0.5,0.0,0.5,0.0,0.0,0.5,0.5,0.0,0.0,0.0,1.0);A.multiply(s.projectionMatrix);A.multiply(s.matrixWorldInverse);}a.setRenderTarget(z);a.clear();for(var C=0;C<m;C++){if(r){h.copy(s.position);h.add(t[C]);s.up.copy(u[C]);s.lookAt(h);s.updateMatrixWorld();var E=v[C];l.viewport(E);}e.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse);d.setFromMatrix(e);D(c,j,s,r);}}B.needsUpdate=false;};function C(b,c,d,e,f,g){var h=b.geometry;var i=null;var l=q;var m=b.customDepthMaterial;if(d){l=r;m=b.customDistanceMaterial;}if(!m){var t=false;if(c.morphTargets)if(h&&h.isBufferGeometry)t=h.morphAttributes&&h.morphAttributes.position&&h.morphAttributes.position.length>0;else if(h&&h.isGeometry)t=h.morphTargets&&h.morphTargets.length>0;if(b.isSkinnedMesh&&c.skinning===false)console.warn('THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:',b);var u=b.isSkinnedMesh&&c.skinning;var v=0;if(t)v|=j;if(u)v|=k;i=l[v];}else i=m;if(a.localClippingEnabled&&c.clipShadows===true&&c.clippingPlanes.length!==0){var w=i.uuid,x=c.uuid;var y=s[w];if(y===undefined){y={};s[w]=y;}var z=y[x];if(z===undefined){z=i.clone();y[x]=z;}i=z;}i.visible=c.visible;i.wireframe=c.wireframe;var A=c.side;if(B.renderSingleSided&&A==p)A=n;if(B.renderReverseSided)if(A===n)A=o;else if(A===o)A=n;i.side=A;i.clipShadows=c.clipShadows;i.clippingPlanes=c.clippingPlanes;i.clipIntersection=c.clipIntersection;i.wireframeLinewidth=c.wireframeLinewidth;i.linewidth=c.linewidth;if(d&&i.isMeshDistanceMaterial){i.referencePosition.copy(e);i.nearDistance=f;i.farDistance=g;}return i;}function D(c,e,f,g){if(c.visible===false)return;var h=c.layers.test(e.layers);if(h&&(c.isMesh||c.isLine||c.isPoints))if(c.castShadow&&(!c.frustumCulled||d.intersectsObject(c))){c.modelViewMatrix.multiplyMatrices(f.matrixWorldInverse,c.matrixWorld);var j=b.update(c);var k=c.material;if(Array.isArray(k)){var l=j.groups;for(var m=0,n=l.length;m<n;m++){var o=l[m];var p=k[o.materialIndex];if(p&&p.visible){var q=C(c,p,g,i,f.near,f.far);a.renderBufferDirect(f,null,j,q,c,o);}}}else if(k.visible){var q=C(c,k,g,i,f.near,f.far);a.renderBufferDirect(f,null,j,q,c,null);}}var r=c.children;for(var s=0,t=r.length;s<t;s++)D(r[s],e,f,g);}}function fv(a){var b={};function c(b,c){var d=b.array;var e=b.dynamic?a.DYNAMIC_DRAW:a.STATIC_DRAW;var f=a.createBuffer();a.bindBuffer(c,f);a.bufferData(c,d,e);b.onUploadCallback();var g=a.FLOAT;if(d instanceof Float32Array)g=a.FLOAT;else if(d instanceof Float64Array)console.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');else if(d instanceof Uint16Array)g=a.UNSIGNED_SHORT;else if(d instanceof Int16Array)g=a.SHORT;else if(d instanceof Uint32Array)g=a.UNSIGNED_INT;else if(d instanceof Int32Array)g=a.INT;else if(d instanceof Int8Array)g=a.BYTE;else if(d instanceof Uint8Array)g=a.UNSIGNED_BYTE;return{buffer:f,type:g,bytesPerElement:d.BYTES_PER_ELEMENT,version:b.version};}function d(b,c,d){var e=c.array;var f=c.updateRange;a.bindBuffer(d,b);if(c.dynamic===false)a.bufferData(d,e,a.STATIC_DRAW);else if(f.count===-1)a.bufferSubData(d,0,e);else if(f.count===0)console.error('THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.');else{a.bufferSubData(d,f.offset*e.BYTES_PER_ELEMENT,e.subarray(f.offset,f.offset+f.count));f.count=-1;}}function e(a){if(a.isInterleavedBufferAttribute)a=a.data;return b[a.uuid];}function f(c){if(c.isInterleavedBufferAttribute)c=c.data;var d=b[c.uuid];if(d){a.deleteBuffer(d.buffer);delete b[c.uuid];}}function g(a,e){if(a.isInterleavedBufferAttribute)a=a.data;var f=b[a.uuid];if(f===undefined)b[a.uuid]=c(a,e);else if(f.version<a.version){d(f.buffer,a,e);f.version=a.version;}}return{get:e,remove:f,update:g};}function fw(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._order=d||fw.DefaultOrder;}fw.RotationOrders=['XYZ','YZX','ZXY','XZY','YXZ','ZYX'];fw.DefaultOrder='XYZ';Object.defineProperties(fw.prototype,{x:{get:function(){return this._x;},set:function(a){this._x=a;this.onChangeCallback();}},y:{get:function(){return this._y;},set:function(a){this._y=a;this.onChangeCallback();}},z:{get:function(){return this._z;},set:function(a){this._z=a;this.onChangeCallback();}},order:{get:function(){return this._order;},set:function(a){this._order=a;this.onChangeCallback();}}});Object.assign(fw.prototype,{isEuler:true,set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._order=d||this._order;this.onChangeCallback();return this;},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order);},copy:function(a){this._x=a._x;this._y=a._y;this._z=a._z;this._order=a._order;this.onChangeCallback();return this;},setFromRotationMatrix:function(a,b,c){var d=bA.clamp;var e=a.elements;var f=e[0],g=e[4],h=e[8];var i=e[1],j=e[5],k=e[9];var l=e[2],m=e[6],n=e[10];b=b||this._order;if(b==='XYZ'){this._y=Math.asin(d(h,-1,1));if(Math.abs(h)<0.99999){this._x=Math.atan2(-k,n);this._z=Math.atan2(-g,f);}else{this._x=Math.atan2(m,j);this._z=0;}}else if(b==='YXZ'){this._x=Math.asin(-d(k,-1,1));if(Math.abs(k)<0.99999){this._y=Math.atan2(h,n);this._z=Math.atan2(i,j);}else{this._y=Math.atan2(-l,f);this._z=0;}}else if(b==='ZXY'){this._x=Math.asin(d(m,-1,1));if(Math.abs(m)<0.99999){this._y=Math.atan2(-l,n);this._z=Math.atan2(-g,j);}else{this._y=0;this._z=Math.atan2(i,f);}}else if(b==='ZYX'){this._y=Math.asin(-d(l,-1,1));if(Math.abs(l)<0.99999){this._x=Math.atan2(m,n);this._z=Math.atan2(i,f);}else{this._x=0;this._z=Math.atan2(-g,j);}}else if(b==='YZX'){this._z=Math.asin(d(i,-1,1));if(Math.abs(i)<0.99999){this._x=Math.atan2(-k,j);this._y=Math.atan2(-l,f);}else{this._x=0;this._y=Math.atan2(h,n);}}else if(b==='XZY'){this._z=Math.asin(-d(g,-1,1));if(Math.abs(g)<0.99999){this._x=Math.atan2(m,j);this._y=Math.atan2(h,f);}else{this._x=Math.atan2(-k,n);this._y=0;}}else console.warn('THREE.Euler: .setFromRotationMatrix() given unsupported order: '+b);this._order=b;if(c!==false)this.onChangeCallback();return this;},setFromQuaternion:function(){var a=new bJ();return function b(b,c,d){a.makeRotationFromQuaternion(b);return this.setFromRotationMatrix(a,c,d);};}(),setFromVector3:function(a,b){return this.set(a.x,a.y,a.z,b||this._order);},reorder:function(){var a=new bH();return function b(b){a.setFromEuler(this);return this.setFromQuaternion(a,b);};}(),equals:function(a){return(a._x===this._x)&&(a._y===this._y)&&(a._z===this._z)&&(a._order===this._order);},fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];if(a[3]!==undefined)this._order=a[3];this.onChangeCallback();return this;},toArray:function(a,b){if(a===undefined)a=[];if(b===undefined)b=0;a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._order;return a;},toVector3:function(a){if(a)return a.set(this._x,this._y,this._z);else return new bI(this._x,this._y,this._z);},onChange:function(a){this.onChangeCallback=a;return this;},onChangeCallback:function(){}});function fx(){this.mask=1|0;}Object.assign(fx.prototype,{set:function(a){this.mask=1<<a|0;},enable:function(a){this.mask|=1<<a|0;},toggle:function(a){this.mask^=1<<a|0;},disable:function(a){this.mask&=~(1<<a|0);},test:function(a){return(this.mask&a.mask)!==0;}});var fy=0;function fz(){Object.defineProperty(this,'id',{value:fy++});this.uuid=bA.generateUUID();this.name='';this.type='Object3D';this.parent=null;this.children=[];this.up=fz.DefaultUp.clone();var a=new bI();var b=new fw();var c=new bH();var d=new bI(1,1,1);function e(){c.setFromEuler(b,false);}function f(){b.setFromQuaternion(c,undefined,false);}b.onChange(e);c.onChange(f);Object.defineProperties(this,{position:{enumerable:true,value:a},rotation:{enumerable:true,value:b},quaternion:{enumerable:true,value:c},scale:{enumerable:true,value:d},modelViewMatrix:{value:new bJ()},normalMatrix:{value:new fr()}});this.matrix=new bJ();this.matrixWorld=new bJ();this.matrixAutoUpdate=fz.DefaultMatrixAutoUpdate;this.matrixWorldNeedsUpdate=false;this.layers=new fx();this.visible=true;this.castShadow=false;this.receiveShadow=false;this.frustumCulled=true;this.renderOrder=0;this.userData={};}fz.DefaultUp=new bI(0,1,0);fz.DefaultMatrixAutoUpdate=true;Object.assign(fz.prototype,b.prototype,{isObject3D:true,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale);},applyQuaternion:function(a){this.quaternion.premultiply(a);return this;},setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b);},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,true);},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a);},setRotationFromQuaternion:function(a){this.quaternion.copy(a);},rotateOnAxis:function(){var a=new bH();return function b(b,c){a.setFromAxisAngle(b,c);this.quaternion.multiply(a);return this;};}(),rotateX:function(){var a=new bI(1,0,0);return function b(b){return this.rotateOnAxis(a,b);};}(),rotateY:function(){var a=new bI(0,1,0);return function b(b){return this.rotateOnAxis(a,b);};}(),rotateZ:function(){var a=new bI(0,0,1);return function b(b){return this.rotateOnAxis(a,b);};}(),translateOnAxis:function(){var a=new bI();return function b(b,c){a.copy(b).applyQuaternion(this.quaternion);this.position.add(a.multiplyScalar(c));return this;};}(),translateX:function(){var a=new bI(1,0,0);return function b(b){return this.translateOnAxis(a,b);};}(),translateY:function(){var a=new bI(0,1,0);return function b(b){return this.translateOnAxis(a,b);};}(),translateZ:function(){var a=new bI(0,0,1);return function b(b){return this.translateOnAxis(a,b);};}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld);},worldToLocal:function(){var a=new bJ();return function b(b){return b.applyMatrix4(a.getInverse(this.matrixWorld));};}(),lookAt:function(){var a=new bJ();return function b(b){if(this.isCamera)a.lookAt(this.position,b,this.up);else a.lookAt(b,this.position,this.up);this.quaternion.setFromRotationMatrix(a);};}(),add:function(a){if(arguments.length>1){for(var b=0;b<arguments.length;b++)this.add(arguments[b]);return this;}if(a===this){console.error("THREE.Object3D.add: object can't be added as a child of itself.",a);return this;}if((a&&a.isObject3D)){if(a.parent!==null)a.parent.remove(a);a.parent=this;a.dispatchEvent({type:'added'});this.children.push(a);}else console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",a);return this;},remove:function(a){if(arguments.length>1){for(var b=0;b<arguments.length;b++)this.remove(arguments[b]);return this;}var c=this.children.indexOf(a);if(c!==-1){a.parent=null;a.dispatchEvent({type:'removed'});this.children.splice(c,1);}return this;},getObjectById:function(a){return this.getObjectByProperty('id',a);},getObjectByName:function(a){return this.getObjectByProperty('name',a);},getObjectByProperty:function(a,b){if(this[a]===b)return this;for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c];var f=e.getObjectByProperty(a,b);if(f!==undefined)return f;}return undefined;},getWorldPosition:function(a){var b=a||new bI();this.updateMatrixWorld(true);return b.setFromMatrixPosition(this.matrixWorld);},getWorldQuaternion:function(){var a=new bI();var b=new bI();return function c(c){var d=c||new bH();this.updateMatrixWorld(true);this.matrixWorld.decompose(a,d,b);return d;};}(),getWorldRotation:function(){var a=new bH();return function b(b){var c=b||new fw();this.getWorldQuaternion(a);return c.setFromQuaternion(a,this.rotation.order,false);};}(),getWorldScale:function(){var a=new bI();var b=new bH();return function c(c){var d=c||new bI();this.updateMatrixWorld(true);this.matrixWorld.decompose(a,b,d);return d;};}(),getWorldDirection:function(){var a=new bH();return function b(b){var c=b||new bI();this.getWorldQuaternion(a);return c.set(0,0,1).applyQuaternion(a);};}(),raycast:function(){},traverse:function(a){a(this);var b=this.children;for(var c=0,d=b.length;c<d;c++)b[c].traverse(a);},traverseVisible:function(a){if(this.visible===false)return;a(this);var b=this.children;for(var c=0,d=b.length;c<d;c++)b[c].traverseVisible(a);},traverseAncestors:function(a){var b=this.parent;if(b!==null){a(b);b.traverseAncestors(a);}},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=true;},updateMatrixWorld:function(a){if(this.matrixAutoUpdate)this.updateMatrix();if(this.matrixWorldNeedsUpdate||a){if(this.parent===null)this.matrixWorld.copy(this.matrix);else this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);this.matrixWorldNeedsUpdate=false;a=true;}var b=this.children;for(var c=0,d=b.length;c<d;c++)b[c].updateMatrixWorld(a);},toJSON:function(a){var b=(a===undefined||a==='');var c={};if(b){a={geometries:{},materials:{},textures:{},images:{}};c.metadata={version:4.5,type:'Object',generator:'Object3D.toJSON'};}var d={};d.uuid=this.uuid;d.type=this.type;if(this.name!=='')d.name=this.name;if(this.castShadow===true)d.castShadow=true;if(this.receiveShadow===true)d.receiveShadow=true;if(this.visible===false)d.visible=false;if(JSON.stringify(this.userData)!=='{}')d.userData=this.userData;d.matrix=this.matrix.toArray();function e(b,c){if(b[c.uuid]===undefined)b[c.uuid]=c.toJSON(a);return c.uuid;}if(this.geometry!==undefined)d.geometry=e(a.geometries,this.geometry);if(this.material!==undefined)if(Array.isArray(this.material)){var f=[];for(var g=0,h=this.material.length;g<h;g++)f.push(e(a.materials,this.material[g]));d.material=f;}else d.material=e(a.materials,this.material);if(this.children.length>0){d.children=[];for(var g=0;g<this.children.length;g++)d.children.push(this.children[g].toJSON(a).object);}if(b){var i=m(a.geometries);var j=m(a.materials);var k=m(a.textures);var l=m(a.images);if(i.length>0)c.geometries=i;if(j.length>0)c.materials=j;if(k.length>0)c.textures=k;if(l.length>0)c.images=l;}c.object=d;return c;function m(a){var b=[];for(var c in a){var d=a[c];delete d.metadata;b.push(d);}return b;}},clone:function(a){return new this.constructor().copy(this,a);},copy:function(a,b){if(b===undefined)b=true;this.name=a.name;this.up.copy(a.up);this.position.copy(a.position);this.quaternion.copy(a.quaternion);this.scale.copy(a.scale);this.matrix.copy(a.matrix);this.matrixWorld.copy(a.matrixWorld);this.matrixAutoUpdate=a.matrixAutoUpdate;this.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate;this.layers.mask=a.layers.mask;this.visible=a.visible;this.castShadow=a.castShadow;this.receiveShadow=a.receiveShadow;this.frustumCulled=a.frustumCulled;this.renderOrder=a.renderOrder;this.userData=JSON.parse(JSON.stringify(a.userData));if(b===true)for(var c=0;c<a.children.length;c++){var d=a.children[c];this.add(d.clone());}return this;}});function fA(){fz.call(this);this.type='Camera';this.matrixWorldInverse=new bJ();this.projectionMatrix=new bJ();}fA.prototype=Object.assign(Object.create(fz.prototype),{constructor:fA,isCamera:true,copy:function(a,b){fz.prototype.copy.call(this,a,b);this.matrixWorldInverse.copy(a.matrixWorldInverse);this.projectionMatrix.copy(a.projectionMatrix);return this;},getWorldDirection:function(){var a=new bH();return function b(b){var c=b||new bI();this.getWorldQuaternion(a);return c.set(0,0,-1).applyQuaternion(a);};}(),updateMatrixWorld:function(a){fz.prototype.updateMatrixWorld.call(this,a);this.matrixWorldInverse.getInverse(this.matrixWorld);},clone:function(){return new this.constructor().copy(this);}});function fB(a,b,c,d,e,f){fA.call(this);this.type='OrthographicCamera';this.zoom=1;this.view=null;this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=(e!==undefined)?e:0.1;this.far=(f!==undefined)?f:2000;this.updateProjectionMatrix();}fB.prototype=Object.assign(Object.create(fA.prototype),{constructor:fB,isOrthographicCamera:true,copy:function(a,b){fA.prototype.copy.call(this,a,b);this.left=a.left;this.right=a.right;this.top=a.top;this.bottom=a.bottom;this.near=a.near;this.far=a.far;this.zoom=a.zoom;this.view=a.view===null?null:Object.assign({},a.view);return this;},setViewOffset:function(a,b,c,d,e,f){this.view={fullWidth:a,fullHeight:b,offsetX:c,offsetY:d,width:e,height:f};this.updateProjectionMatrix();},clearViewOffset:function(){this.view=null;this.updateProjectionMatrix();},updateProjectionMatrix:function(){var a=(this.right-this.left)/(2*this.zoom);var b=(this.top-this.bottom)/(2*this.zoom);var c=(this.right+this.left)/2;var d=(this.top+this.bottom)/2;var e=c-a;var f=c+a;var g=d+b;var h=d-b;if(this.view!==null){var i=this.zoom/(this.view.width/this.view.fullWidth);var j=this.zoom/(this.view.height/this.view.fullHeight);var k=(this.right-this.left)/this.view.width;var l=(this.top-this.bottom)/this.view.height;e+=k*(this.view.offsetX/i);f=e+k*(this.view.width/i);g-=l*(this.view.offsetY/j);h=g-l*(this.view.height/j);}this.projectionMatrix.makeOrthographic(e,f,g,h,this.near,this.far);},toJSON:function(a){var b=fz.prototype.toJSON.call(this,a);b.object.zoom=this.zoom;b.object.left=this.left;b.object.right=this.right;b.object.top=this.top;b.object.bottom=this.bottom;b.object.near=this.near;b.object.far=this.far;if(this.view!==null)b.object.view=Object.assign({},this.view);return b;}});function fC(a,b,c,d){fA.call(this);this.type='PerspectiveCamera';this.fov=a!==undefined?a:50;this.zoom=1;this.near=c!==undefined?c:0.1;this.far=d!==undefined?d:2000;this.focus=10;this.aspect=b!==undefined?b:1;this.view=null;this.filmGauge=35;this.filmOffset=0;this.updateProjectionMatrix();}fC.prototype=Object.assign(Object.create(fA.prototype),{constructor:fC,isPerspectiveCamera:true,copy:function(a,b){fA.prototype.copy.call(this,a,b);this.fov=a.fov;this.zoom=a.zoom;this.near=a.near;this.far=a.far;this.focus=a.focus;this.aspect=a.aspect;this.view=a.view===null?null:Object.assign({},a.view);this.filmGauge=a.filmGauge;this.filmOffset=a.filmOffset;return this;},setFocalLength:function(a){var b=0.5*this.getFilmHeight()/a;this.fov=bA.RAD2DEG*2*Math.atan(b);this.updateProjectionMatrix();},getFocalLength:function(){var a=Math.tan(bA.DEG2RAD*0.5*this.fov);return 0.5*this.getFilmHeight()/a;},getEffectiveFOV:function(){return bA.RAD2DEG*2*Math.atan(Math.tan(bA.DEG2RAD*0.5*this.fov)/this.zoom);},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1);},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1);},setViewOffset:function(a,b,c,d,e,f){this.aspect=a/b;this.view={fullWidth:a,fullHeight:b,offsetX:c,offsetY:d,width:e,height:f};this.updateProjectionMatrix();},clearViewOffset:function(){this.view=null;this.updateProjectionMatrix();},updateProjectionMatrix:function(){var a=this.near,b=a*Math.tan(bA.DEG2RAD*0.5*this.fov)/this.zoom,c=2*b,d=this.aspect*c,e=-0.5*d,f=this.view;if(f!==null){var g=f.fullWidth,h=f.fullHeight;e+=f.offsetX*d/g;b-=f.offsetY*c/h;d*=f.width/g;c*=f.height/h;}var i=this.filmOffset;if(i!==0)e+=a*i/this.getFilmWidth();this.projectionMatrix.makePerspective(e,e+d,b,b-c,a,this.far);},toJSON:function(a){var b=fz.prototype.toJSON.call(this,a);b.object.fov=this.fov;b.object.zoom=this.zoom;b.object.near=this.near;b.object.far=this.far;b.object.focus=this.focus;b.object.aspect=this.aspect;if(this.view!==null)b.object.view=Object.assign({},this.view);b.object.filmGauge=this.filmGauge;b.object.filmOffset=this.filmOffset;return b;}});function fD(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=(d&&d.isVector3)?d:new bI();this.vertexNormals=Array.isArray(d)?d:[];this.color=(e&&e.isColor)?e:new cF();this.vertexColors=Array.isArray(e)?e:[];this.materialIndex=f!==undefined?f:0;}Object.assign(fD.prototype,{clone:function(){return new this.constructor().copy(this);},copy:function(a){this.a=a.a;this.b=a.b;this.c=a.c;this.normal.copy(a.normal);this.color.copy(a.color);this.materialIndex=a.materialIndex;for(var b=0,c=a.vertexNormals.length;b<c;b++)this.vertexNormals[b]=a.vertexNormals[b].clone();for(var b=0,c=a.vertexColors.length;b<c;b++)this.vertexColors[b]=a.vertexColors[b].clone();return this;}});var fE=0;function fF(){return fE++;}function fG(){Object.defineProperty(this,'id',{value:fF()});this.uuid=bA.generateUUID();this.name='';this.type='Geometry';this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingBox=null;this.boundingSphere=null;this.elementsNeedUpdate=false;this.verticesNeedUpdate=false;this.uvsNeedUpdate=false;this.normalsNeedUpdate=false;this.colorsNeedUpdate=false;this.lineDistancesNeedUpdate=false;this.groupsNeedUpdate=false;}Object.assign(fG.prototype,b.prototype,{isGeometry:true,applyMatrix:function(a){var b=new fr().getNormalMatrix(a);for(var c=0,d=this.vertices.length;c<d;c++){var e=this.vertices[c];e.applyMatrix4(a);}for(var c=0,d=this.faces.length;c<d;c++){var f=this.faces[c];f.normal.applyMatrix3(b).normalize();for(var g=0,h=f.vertexNormals.length;g<h;g++)f.vertexNormals[g].applyMatrix3(b).normalize();}if(this.boundingBox!==null)this.computeBoundingBox();if(this.boundingSphere!==null)this.computeBoundingSphere();this.verticesNeedUpdate=true;this.normalsNeedUpdate=true;return this;},rotateX:function(){var a=new bJ();return function b(b){a.makeRotationX(b);this.applyMatrix(a);return this;};}(),rotateY:function(){var a=new bJ();return function b(b){a.makeRotationY(b);this.applyMatrix(a);return this;};}(),rotateZ:function(){var a=new bJ();return function b(b){a.makeRotationZ(b);this.applyMatrix(a);return this;};}(),translate:function(){var a=new bJ();return function b(b,c,d){a.makeTranslation(b,c,d);this.applyMatrix(a);return this;};}(),scale:function(){var a=new bJ();return function b(b,c,d){a.makeScale(b,c,d);this.applyMatrix(a);return this;};}(),lookAt:function(){var a=new fz();return function b(b){a.lookAt(b);a.updateMatrix();this.applyMatrix(a.matrix);};}(),fromBufferGeometry:function(a){var b=this;var c=a.index!==null?a.index.array:undefined;var d=a.attributes;var e=d.position.array;var f=d.normal!==undefined?d.normal.array:undefined;var g=d.color!==undefined?d.color.array:undefined;var h=d.uv!==undefined?d.uv.array:undefined;var i=d.uv2!==undefined?d.uv2.array:undefined;if(i!==undefined)this.faceVertexUvs[1]=[];var j=[];var k=[];var l=[];for(var m=0,n=0;m<e.length;m+=3,n+=2){b.vertices.push(new bI(e[m],e[m+1],e[m+2]));if(f!==undefined)j.push(new bI(f[m],f[m+1],f[m+2]));if(g!==undefined)b.colors.push(new cF(g[m],g[m+1],g[m+2]));if(h!==undefined)k.push(new bB(h[n],h[n+1]));if(i!==undefined)l.push(new bB(i[n],i[n+1]));}function o(a,c,d,e){var m=f!==undefined?[j[a].clone(),j[c].clone(),j[d].clone()]:[];var n=g!==undefined?[b.colors[a].clone(),b.colors[c].clone(),b.colors[d].clone()]:[];var o=new fD(a,c,d,m,n,e);b.faces.push(o);if(h!==undefined)b.faceVertexUvs[0].push([k[a].clone(),k[c].clone(),k[d].clone()]);if(i!==undefined)b.faceVertexUvs[1].push([l[a].clone(),l[c].clone(),l[d].clone()]);}var p=a.groups;if(p.length>0)for(var m=0;m<p.length;m++){var q=p[m];var r=q.start;var s=q.count;for(var n=r,t=r+s;n<t;n+=3)if(c!==undefined)o(c[n],c[n+1],c[n+2],q.materialIndex);else o(n,n+1,n+2,q.materialIndex);}else if(c!==undefined)for(var m=0;m<c.length;m+=3)o(c[m],c[m+1],c[m+2]);else for(var m=0;m<e.length/3;m+=3)o(m,m+1,m+2);this.computeFaceNormals();if(a.boundingBox!==null)this.boundingBox=a.boundingBox.clone();if(a.boundingSphere!==null)this.boundingSphere=a.boundingSphere.clone();return this;},center:function(){this.computeBoundingBox();var a=this.boundingBox.getCenter().negate();this.translate(a.x,a.y,a.z);return a;},normalize:function(){this.computeBoundingSphere();var a=this.boundingSphere.center;var b=this.boundingSphere.radius;var c=b===0?1:1.0/b;var d=new bJ();d.set(c,0,0,-c*a.x,0,c,0,-c*a.y,0,0,c,-c*a.z,0,0,0,1);this.applyMatrix(d);return this;},computeFaceNormals:function(){var a=new bI(),b=new bI();for(var c=0,d=this.faces.length;c<d;c++){var e=this.faces[c];var f=this.vertices[e.a];var g=this.vertices[e.b];var h=this.vertices[e.c];a.subVectors(h,g);b.subVectors(f,g);a.cross(b);a.normalize();e.normal.copy(a);}},computeVertexNormals:function(a){if(a===undefined)a=true;var b,c,d,e,f,g;g=new Array(this.vertices.length);for(b=0,c=this.vertices.length;b<c;b++)g[b]=new bI();if(a){var h,i,j;var k=new bI(),l=new bI();for(d=0,e=this.faces.length;d<e;d++){f=this.faces[d];h=this.vertices[f.a];i=this.vertices[f.b];j=this.vertices[f.c];k.subVectors(j,i);l.subVectors(h,i);k.cross(l);g[f.a].add(k);g[f.b].add(k);g[f.c].add(k);}}else{this.computeFaceNormals();for(d=0,e=this.faces.length;d<e;d++){f=this.faces[d];g[f.a].add(f.normal);g[f.b].add(f.normal);g[f.c].add(f.normal);}}for(b=0,c=this.vertices.length;b<c;b++)g[b].normalize();for(d=0,e=this.faces.length;d<e;d++){f=this.faces[d];var m=f.vertexNormals;if(m.length===3){m[0].copy(g[f.a]);m[1].copy(g[f.b]);m[2].copy(g[f.c]);}else{m[0]=g[f.a].clone();m[1]=g[f.b].clone();m[2]=g[f.c].clone();}}if(this.faces.length>0)this.normalsNeedUpdate=true;},computeFlatVertexNormals:function(){var a,b,c;this.computeFaceNormals();for(a=0,b=this.faces.length;a<b;a++){c=this.faces[a];var d=c.vertexNormals;if(d.length===3){d[0].copy(c.normal);d[1].copy(c.normal);d[2].copy(c.normal);}else{d[0]=c.normal.clone();d[1]=c.normal.clone();d[2]=c.normal.clone();}}if(this.faces.length>0)this.normalsNeedUpdate=true;},computeMorphNormals:function(){var a,b,c,d,e;for(c=0,d=this.faces.length;c<d;c++){e=this.faces[c];if(!e.__originalFaceNormal)e.__originalFaceNormal=e.normal.clone();else e.__originalFaceNormal.copy(e.normal);if(!e.__originalVertexNormals)e.__originalVertexNormals=[];for(a=0,b=e.vertexNormals.length;a<b;a++)if(!e.__originalVertexNormals[a])e.__originalVertexNormals[a]=e.vertexNormals[a].clone();else e.__originalVertexNormals[a].copy(e.vertexNormals[a]);}var f=new fG();f.faces=this.faces;for(a=0,b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];var g=this.morphNormals[a].faceNormals;var h=this.morphNormals[a].vertexNormals;var i,j;for(c=0,d=this.faces.length;c<d;c++){i=new bI();j={a:new bI(),b:new bI(),c:new bI()};g.push(i);h.push(j);}}var k=this.morphNormals[a];f.vertices=this.morphTargets[a].vertices;f.computeFaceNormals();f.computeVertexNormals();var i,j;for(c=0,d=this.faces.length;c<d;c++){e=this.faces[c];i=k.faceNormals[c];j=k.vertexNormals[c];i.copy(e.normal);j.a.copy(e.vertexNormals[0]);j.b.copy(e.vertexNormals[1]);j.c.copy(e.vertexNormals[2]);}}for(c=0,d=this.faces.length;c<d;c++){e=this.faces[c];e.normal=e.__originalFaceNormal;e.vertexNormals=e.__originalVertexNormals;}},computeLineDistances:function(){var a=0;var b=this.vertices;for(var c=0,d=b.length;c<d;c++){if(c>0)a+=b[c].distanceTo(b[c-1]);this.lineDistances[c]=a;}},computeBoundingBox:function(){if(this.boundingBox===null)this.boundingBox=new fp();this.boundingBox.setFromPoints(this.vertices);},computeBoundingSphere:function(){if(this.boundingSphere===null)this.boundingSphere=new fq();this.boundingSphere.setFromPoints(this.vertices);},merge:function(a,b,c){if(!(a&&a.isGeometry)){console.error('THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.',a);return;}var d,e=this.vertices.length,f=this.vertices,g=a.vertices,h=this.faces,i=a.faces,j=this.faceVertexUvs[0],k=a.faceVertexUvs[0],l=this.colors,m=a.colors;if(c===undefined)c=0;if(b!==undefined)d=new fr().getNormalMatrix(b);for(var n=0,o=g.length;n<o;n++){var p=g[n];var q=p.clone();if(b!==undefined)q.applyMatrix4(b);f.push(q);}for(var n=0,o=m.length;n<o;n++)l.push(m[n].clone());for(n=0,o=i.length;n<o;n++){var r=i[n],s,t,u,v=r.vertexNormals,w=r.vertexColors;s=new fD(r.a+e,r.b+e,r.c+e);s.normal.copy(r.normal);if(d!==undefined)s.normal.applyMatrix3(d).normalize();for(var x=0,y=v.length;x<y;x++){t=v[x].clone();if(d!==undefined)t.applyMatrix3(d).normalize();s.vertexNormals.push(t);}s.color.copy(r.color);for(var x=0,y=w.length;x<y;x++){u=w[x];s.vertexColors.push(u.clone());}s.materialIndex=r.materialIndex+c;h.push(s);}for(n=0,o=k.length;n<o;n++){var z=k[n],A=[];if(z===undefined)continue;for(var x=0,y=z.length;x<y;x++)A.push(z[x].clone());j.push(A);}},mergeMesh:function(a){if(!(a&&a.isMesh)){console.error('THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.',a);return;}a.matrixAutoUpdate&&a.updateMatrix();this.merge(a.geometry,a.matrix);},mergeVertices:function(){var a={};var b=[],c=[];var d,e;var f=4;var g=Math.pow(10,f);var h,i,j;var k,l,m;for(h=0,i=this.vertices.length;h<i;h++){d=this.vertices[h];e=Math.round(d.x*g)+'_'+Math.round(d.y*g)+'_'+Math.round(d.z*g);if(a[e]===undefined){a[e]=h;b.push(this.vertices[h]);c[h]=b.length-1;}else c[h]=c[a[e]];}var n=[];for(h=0,i=this.faces.length;h<i;h++){j=this.faces[h];j.a=c[j.a];j.b=c[j.b];j.c=c[j.c];k=[j.a,j.b,j.c];for(var o=0;o<3;o++)if(k[o]===k[(o+1)%3]){n.push(h);break;}}for(h=n.length-1;h>=0;h--){var p=n[h];this.faces.splice(p,1);for(l=0,m=this.faceVertexUvs.length;l<m;l++)this.faceVertexUvs[l].splice(p,1);}var q=this.vertices.length-b.length;this.vertices=b;return q;},sortFacesByMaterialIndex:function(){var a=this.faces;var b=a.length;for(var c=0;c<b;c++)a[c]._id=c;function d(a,b){return a.materialIndex-b.materialIndex;}a.sort(d);var e=this.faceVertexUvs[0];var f=this.faceVertexUvs[1];var g,h;if(e&&e.length===b)g=[];if(f&&f.length===b)h=[];for(var c=0;c<b;c++){var i=a[c]._id;if(g)g.push(e[i]);if(h)h.push(f[i]);}if(g)this.faceVertexUvs[0]=g;if(h)this.faceVertexUvs[1]=h;},toJSON:function(){var a={metadata:{version:4.5,type:'Geometry',generator:'Geometry.toJSON'}};a.uuid=this.uuid;a.type=this.type;if(this.name!=='')a.name=this.name;if(this.parameters!==undefined){var b=this.parameters;for(var c in b)if(b[c]!==undefined)a[c]=b[c];return a;}var d=[];for(var e=0;e<this.vertices.length;e++){var f=this.vertices[e];d.push(f.x,f.y,f.z);}var g=[];var h=[];var i={};var j=[];var k={};var l=[];var m={};for(var e=0;e<this.faces.length;e++){var n=this.faces[e];var o=true;var p=false;var q=this.faceVertexUvs[0][e]!==undefined;var r=n.normal.length()>0;var s=n.vertexNormals.length>0;var t=n.color.r!==1||n.color.g!==1||n.color.b!==1;var u=n.vertexColors.length>0;var v=0;v=z(v,0,0);v=z(v,1,o);v=z(v,2,p);v=z(v,3,q);v=z(v,4,r);v=z(v,5,s);v=z(v,6,t);v=z(v,7,u);g.push(v);g.push(n.a,n.b,n.c);g.push(n.materialIndex);if(q){var w=this.faceVertexUvs[0][e];g.push(C(w[0]),C(w[1]),C(w[2]));}if(r)g.push(A(n.normal));if(s){var x=n.vertexNormals;g.push(A(x[0]),A(x[1]),A(x[2]));}if(t)g.push(B(n.color));if(u){var y=n.vertexColors;g.push(B(y[0]),B(y[1]),B(y[2]));}}function z(a,b,c){return c?a|(1<<b):a&(~(1<<b));}function A(a){var b=a.x.toString()+a.y.toString()+a.z.toString();if(i[b]!==undefined)return i[b];i[b]=h.length/3;h.push(a.x,a.y,a.z);return i[b];}function B(a){var b=a.r.toString()+a.g.toString()+a.b.toString();if(k[b]!==undefined)return k[b];k[b]=j.length;j.push(a.getHex());return k[b];}function C(a){var b=a.x.toString()+a.y.toString();if(m[b]!==undefined)return m[b];m[b]=l.length/2;l.push(a.x,a.y);return m[b];}a.data={};a.data.vertices=d;a.data.normals=h;if(j.length>0)a.data.colors=j;if(l.length>0)a.data.uvs=[l];a.data.faces=g;return a;},clone:function(){return new fG().copy(this);},copy:function(a){var b,c,d,e,f,g;this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingBox=null;this.boundingSphere=null;this.name=a.name;var h=a.vertices;for(b=0,c=h.length;b<c;b++)this.vertices.push(h[b].clone());var i=a.colors;for(b=0,c=i.length;b<c;b++)this.colors.push(i[b].clone());var j=a.faces;for(b=0,c=j.length;b<c;b++)this.faces.push(j[b].clone());for(b=0,c=a.faceVertexUvs.length;b<c;b++){var k=a.faceVertexUvs[b];if(this.faceVertexUvs[b]===undefined)this.faceVertexUvs[b]=[];for(d=0,e=k.length;d<e;d++){var l=k[d],m=[];for(f=0,g=l.length;f<g;f++){var n=l[f];m.push(n.clone());}this.faceVertexUvs[b].push(m);}}var o=a.morphTargets;for(b=0,c=o.length;b<c;b++){var p={};p.name=o[b].name;if(o[b].vertices!==undefined){p.vertices=[];for(d=0,e=o[b].vertices.length;d<e;d++)p.vertices.push(o[b].vertices[d].clone());}if(o[b].normals!==undefined){p.normals=[];for(d=0,e=o[b].normals.length;d<e;d++)p.normals.push(o[b].normals[d].clone());}this.morphTargets.push(p);}var q=a.morphNormals;for(b=0,c=q.length;b<c;b++){var r={};if(q[b].vertexNormals!==undefined){r.vertexNormals=[];for(d=0,e=q[b].vertexNormals.length;d<e;d++){var s=q[b].vertexNormals[d];var t={};t.a=s.a.clone();t.b=s.b.clone();t.c=s.c.clone();r.vertexNormals.push(t);}}if(q[b].faceNormals!==undefined){r.faceNormals=[];for(d=0,e=q[b].faceNormals.length;d<e;d++)r.faceNormals.push(q[b].faceNormals[d].clone());}this.morphNormals.push(r);}var u=a.skinWeights;for(b=0,c=u.length;b<c;b++)this.skinWeights.push(u[b].clone());var v=a.skinIndices;for(b=0,c=v.length;b<c;b++)this.skinIndices.push(v[b].clone());var w=a.lineDistances;for(b=0,c=w.length;b<c;b++)this.lineDistances.push(w[b]);var x=a.boundingBox;if(x!==null)this.boundingBox=x.clone();var y=a.boundingSphere;if(y!==null)this.boundingSphere=y.clone();this.elementsNeedUpdate=a.elementsNeedUpdate;this.verticesNeedUpdate=a.verticesNeedUpdate;this.uvsNeedUpdate=a.uvsNeedUpdate;this.normalsNeedUpdate=a.normalsNeedUpdate;this.colorsNeedUpdate=a.colorsNeedUpdate;this.lineDistancesNeedUpdate=a.lineDistancesNeedUpdate;this.groupsNeedUpdate=a.groupsNeedUpdate;return this;},dispose:function(){this.dispatchEvent({type:'dispose'});}});function fH(a,b,c){if(Array.isArray(a))throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');this.uuid=bA.generateUUID();this.name='';this.array=a;this.itemSize=b;this.count=a!==undefined?a.length/b:0;this.normalized=c===true;this.dynamic=false;this.updateRange={offset:0,count:-1};this.onUploadCallback=function(){};this.version=0;}Object.defineProperty(fH.prototype,'needsUpdate',{set:function(a){if(a===true)this.version++;}});Object.assign(fH.prototype,{isBufferAttribute:true,setArray:function(a){if(Array.isArray(a))throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');this.count=a!==undefined?a.length/this.itemSize:0;this.array=a;},setDynamic:function(a){this.dynamic=a;return this;},copy:function(a){this.array=new a.array.constructor(a.array);this.itemSize=a.itemSize;this.count=a.count;this.normalized=a.normalized;this.dynamic=a.dynamic;return this;},copyAt:function(a,b,c){a*=this.itemSize;c*=b.itemSize;for(var d=0,e=this.itemSize;d<e;d++)this.array[a+d]=b.array[c+d];return this;},copyArray:function(a){this.array.set(a);return this;},copyColorsArray:function(a){var b=this.array,c=0;for(var d=0,e=a.length;d<e;d++){var f=a[d];if(f===undefined){console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined',d);f=new cF();}b[c++]=f.r;b[c++]=f.g;b[c++]=f.b;}return this;},copyIndicesArray:function(a){var b=this.array,c=0;for(var d=0,e=a.length;d<e;d++){var f=a[d];b[c++]=f.a;b[c++]=f.b;b[c++]=f.c;}return this;},copyVector2sArray:function(a){var b=this.array,c=0;for(var d=0,e=a.length;d<e;d++){var f=a[d];if(f===undefined){console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined',d);f=new bB();}b[c++]=f.x;b[c++]=f.y;}return this;},copyVector3sArray:function(a){var b=this.array,c=0;for(var d=0,e=a.length;d<e;d++){var f=a[d];if(f===undefined){console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined',d);f=new bI();}b[c++]=f.x;b[c++]=f.y;b[c++]=f.z;}return this;},copyVector4sArray:function(a){var b=this.array,c=0;for(var d=0,e=a.length;d<e;d++){var f=a[d];if(f===undefined){console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined',d);f=new bE();}b[c++]=f.x;b[c++]=f.y;b[c++]=f.z;b[c++]=f.w;}return this;},set:function(a,b){if(b===undefined)b=0;this.array.set(a,b);return this;},getX:function(a){return this.array[a*this.itemSize];},setX:function(a,b){this.array[a*this.itemSize]=b;return this;},getY:function(a){return this.array[a*this.itemSize+1];},setY:function(a,b){this.array[a*this.itemSize+1]=b;return this;},getZ:function(a){return this.array[a*this.itemSize+2];},setZ:function(a,b){this.array[a*this.itemSize+2]=b;return this;},getW:function(a){return this.array[a*this.itemSize+3];},setW:function(a,b){this.array[a*this.itemSize+3]=b;return this;},setXY:function(a,b,c){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;return this;},setXYZ:function(a,b,c,d){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;this.array[a+2]=d;return this;},setXYZW:function(a,b,c,d,e){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;this.array[a+2]=d;this.array[a+3]=e;return this;},onUpload:function(a){this.onUploadCallback=a;return this;},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this);}});function fI(a,b){fH.call(this,new Int8Array(a),b);}fI.prototype=Object.create(fH.prototype);fI.prototype.constructor=fI;function fJ(a,b){fH.call(this,new Uint8Array(a),b);}fJ.prototype=Object.create(fH.prototype);fJ.prototype.constructor=fJ;function fK(a,b){fH.call(this,new Uint8ClampedArray(a),b);}fK.prototype=Object.create(fH.prototype);fK.prototype.constructor=fK;function fL(a,b){fH.call(this,new Int16Array(a),b);}fL.prototype=Object.create(fH.prototype);fL.prototype.constructor=fL;function fM(a,b){fH.call(this,new Uint16Array(a),b);}fM.prototype=Object.create(fH.prototype);fM.prototype.constructor=fM;function fN(a,b){fH.call(this,new Int32Array(a),b);}fN.prototype=Object.create(fH.prototype);fN.prototype.constructor=fN;function fO(a,b){fH.call(this,new Uint32Array(a),b);}fO.prototype=Object.create(fH.prototype);fO.prototype.constructor=fO;function fP(a,b){fH.call(this,new Float32Array(a),b);}fP.prototype=Object.create(fH.prototype);fP.prototype.constructor=fP;function fQ(a,b){fH.call(this,new Float64Array(a),b);}fQ.prototype=Object.create(fH.prototype);fQ.prototype.constructor=fQ;function fR(){this.indices=[];this.vertices=[];this.normals=[];this.colors=[];this.uvs=[];this.uvs2=[];this.groups=[];this.morphTargets={};this.skinWeights=[];this.skinIndices=[];this.boundingBox=null;this.boundingSphere=null;this.verticesNeedUpdate=false;this.normalsNeedUpdate=false;this.colorsNeedUpdate=false;this.uvsNeedUpdate=false;this.groupsNeedUpdate=false;}Object.assign(fR.prototype,{computeGroups:function(a){var b;var c=[];var d=undefined;var e=a.faces;for(var f=0;f<e.length;f++){var g=e[f];if(g.materialIndex!==d){d=g.materialIndex;if(b!==undefined){b.count=(f*3)-b.start;c.push(b);}b={start:f*3,materialIndex:d};}}if(b!==undefined){b.count=(f*3)-b.start;c.push(b);}this.groups=c;},fromGeometry:function(a){var b=a.faces;var c=a.vertices;var d=a.faceVertexUvs;var e=d[0]&&d[0].length>0;var f=d[1]&&d[1].length>0;var g=a.morphTargets;var h=g.length;var i;if(h>0){i=[];for(var j=0;j<h;j++)i[j]=[];this.morphTargets.position=i;}var k=a.morphNormals;var l=k.length;var m;if(l>0){m=[];for(var j=0;j<l;j++)m[j]=[];this.morphTargets.normal=m;}var n=a.skinIndices;var o=a.skinWeights;var p=n.length===c.length;var q=o.length===c.length;for(var j=0;j<b.length;j++){var r=b[j];this.vertices.push(c[r.a],c[r.b],c[r.c]);var s=r.vertexNormals;if(s.length===3)this.normals.push(s[0],s[1],s[2]);else{var t=r.normal;this.normals.push(t,t,t);}var u=r.vertexColors;if(u.length===3)this.colors.push(u[0],u[1],u[2]);else{var v=r.color;this.colors.push(v,v,v);}if(e===true){var w=d[0][j];if(w!==undefined)this.uvs.push(w[0],w[1],w[2]);else{console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ',j);this.uvs.push(new bB(),new bB(),new bB());}}if(f===true){var w=d[1][j];if(w!==undefined)this.uvs2.push(w[0],w[1],w[2]);else{console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ',j);this.uvs2.push(new bB(),new bB(),new bB());}}for(var x=0;x<h;x++){var y=g[x].vertices;i[x].push(y[r.a],y[r.b],y[r.c]);}for(var x=0;x<l;x++){var z=k[x].vertexNormals[j];m[x].push(z.a,z.b,z.c);}if(p)this.skinIndices.push(n[r.a],n[r.b],n[r.c]);if(q)this.skinWeights.push(o[r.a],o[r.b],o[r.c]);}this.computeGroups(a);this.verticesNeedUpdate=a.verticesNeedUpdate;this.normalsNeedUpdate=a.normalsNeedUpdate;this.colorsNeedUpdate=a.colorsNeedUpdate;this.uvsNeedUpdate=a.uvsNeedUpdate;this.groupsNeedUpdate=a.groupsNeedUpdate;return this;}});function fS(a){if(a.length===0)return -Infinity;var b=a[0];for(var c=1,d=a.length;c<d;++c)if(a[c]>b)b=a[c];return b;}function fT(){Object.defineProperty(this,'id',{value:fF()});this.uuid=bA.generateUUID();this.name='';this.type='BufferGeometry';this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingBox=null;this.boundingSphere=null;this.drawRange={start:0,count:Infinity};}fT.MaxIndex=65535;Object.assign(fT.prototype,b.prototype,{isBufferGeometry:true,getIndex:function(){return this.index;},setIndex:function(a){if(Array.isArray(a))this.index=new (fS(a)>65535?fO:fM)(a,1);else this.index=a;},addAttribute:function(a,b){if(!(b&&b.isBufferAttribute)&&!(b&&b.isInterleavedBufferAttribute)){console.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');this.addAttribute(a,new fH(arguments[1],arguments[2]));return;}if(a==='index'){console.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');this.setIndex(b);return;}this.attributes[a]=b;return this;},getAttribute:function(a){return this.attributes[a];},removeAttribute:function(a){delete this.attributes[a];return this;},addGroup:function(a,b,c){this.groups.push({start:a,count:b,materialIndex:c!==undefined?c:0});},clearGroups:function(){this.groups=[];},setDrawRange:function(a,b){this.drawRange.start=a;this.drawRange.count=b;},applyMatrix:function(a){var b=this.attributes.position;if(b!==undefined){a.applyToBufferAttribute(b);b.needsUpdate=true;}var c=this.attributes.normal;if(c!==undefined){var d=new fr().getNormalMatrix(a);d.applyToBufferAttribute(c);c.needsUpdate=true;}if(this.boundingBox!==null)this.computeBoundingBox();if(this.boundingSphere!==null)this.computeBoundingSphere();return this;},rotateX:function(){var a=new bJ();return function b(b){a.makeRotationX(b);this.applyMatrix(a);return this;};}(),rotateY:function(){var a=new bJ();return function b(b){a.makeRotationY(b);this.applyMatrix(a);return this;};}(),rotateZ:function(){var a=new bJ();return function b(b){a.makeRotationZ(b);this.applyMatrix(a);return this;};}(),translate:function(){var a=new bJ();return function b(b,c,d){a.makeTranslation(b,c,d);this.applyMatrix(a);return this;};}(),scale:function(){var a=new bJ();return function b(b,c,d){a.makeScale(b,c,d);this.applyMatrix(a);return this;};}(),lookAt:function(){var a=new fz();return function b(b){a.lookAt(b);a.updateMatrix();this.applyMatrix(a.matrix);};}(),center:function(){this.computeBoundingBox();var a=this.boundingBox.getCenter().negate();this.translate(a.x,a.y,a.z);return a;},setFromObject:function(a){var b=a.geometry;if(a.isPoints||a.isLine){var c=new fP(b.vertices.length*3,3);var d=new fP(b.colors.length*3,3);this.addAttribute('position',c.copyVector3sArray(b.vertices));this.addAttribute('color',d.copyColorsArray(b.colors));if(b.lineDistances&&b.lineDistances.length===b.vertices.length){var e=new fP(b.lineDistances.length,1);this.addAttribute('lineDistance',e.copyArray(b.lineDistances));}if(b.boundingSphere!==null)this.boundingSphere=b.boundingSphere.clone();if(b.boundingBox!==null)this.boundingBox=b.boundingBox.clone();}else if(a.isMesh)if(b&&b.isGeometry)this.fromGeometry(b);return this;},updateFromObject:function(a){var b=a.geometry;if(a.isMesh){var c=b.__directGeometry;if(b.elementsNeedUpdate===true){c=undefined;b.elementsNeedUpdate=false;}if(c===undefined)return this.fromGeometry(b);c.verticesNeedUpdate=b.verticesNeedUpdate;c.normalsNeedUpdate=b.normalsNeedUpdate;c.colorsNeedUpdate=b.colorsNeedUpdate;c.uvsNeedUpdate=b.uvsNeedUpdate;c.groupsNeedUpdate=b.groupsNeedUpdate;b.verticesNeedUpdate=false;b.normalsNeedUpdate=false;b.colorsNeedUpdate=false;b.uvsNeedUpdate=false;b.groupsNeedUpdate=false;b=c;}var d;if(b.verticesNeedUpdate===true){d=this.attributes.position;if(d!==undefined){d.copyVector3sArray(b.vertices);d.needsUpdate=true;}b.verticesNeedUpdate=false;}if(b.normalsNeedUpdate===true){d=this.attributes.normal;if(d!==undefined){d.copyVector3sArray(b.normals);d.needsUpdate=true;}b.normalsNeedUpdate=false;}if(b.colorsNeedUpdate===true){d=this.attributes.color;if(d!==undefined){d.copyColorsArray(b.colors);d.needsUpdate=true;}b.colorsNeedUpdate=false;}if(b.uvsNeedUpdate){d=this.attributes.uv;if(d!==undefined){d.copyVector2sArray(b.uvs);d.needsUpdate=true;}b.uvsNeedUpdate=false;}if(b.lineDistancesNeedUpdate){d=this.attributes.lineDistance;if(d!==undefined){d.copyArray(b.lineDistances);d.needsUpdate=true;}b.lineDistancesNeedUpdate=false;}if(b.groupsNeedUpdate){b.computeGroups(a.geometry);this.groups=b.groups;b.groupsNeedUpdate=false;}return this;},fromGeometry:function(a){a.__directGeometry=new fR().fromGeometry(a);return this.fromDirectGeometry(a.__directGeometry);},fromDirectGeometry:function(a){var b=new Float32Array(a.vertices.length*3);this.addAttribute('position',new fH(b,3).copyVector3sArray(a.vertices));if(a.normals.length>0){var c=new Float32Array(a.normals.length*3);this.addAttribute('normal',new fH(c,3).copyVector3sArray(a.normals));}if(a.colors.length>0){var d=new Float32Array(a.colors.length*3);this.addAttribute('color',new fH(d,3).copyColorsArray(a.colors));}if(a.uvs.length>0){var e=new Float32Array(a.uvs.length*2);this.addAttribute('uv',new fH(e,2).copyVector2sArray(a.uvs));}if(a.uvs2.length>0){var f=new Float32Array(a.uvs2.length*2);this.addAttribute('uv2',new fH(f,2).copyVector2sArray(a.uvs2));}if(a.indices.length>0){var g=fS(a.indices)>65535?Uint32Array:Uint16Array;var h=new g(a.indices.length*3);this.setIndex(new fH(h,1).copyIndicesArray(a.indices));}this.groups=a.groups;for(var i in a.morphTargets){var j=[];var k=a.morphTargets[i];for(var l=0,m=k.length;l<m;l++){var n=k[l];var o=new fP(n.length*3,3);j.push(o.copyVector3sArray(n));}this.morphAttributes[i]=j;}if(a.skinIndices.length>0){var p=new fP(a.skinIndices.length*4,4);this.addAttribute('skinIndex',p.copyVector4sArray(a.skinIndices));}if(a.skinWeights.length>0){var q=new fP(a.skinWeights.length*4,4);this.addAttribute('skinWeight',q.copyVector4sArray(a.skinWeights));}if(a.boundingSphere!==null)this.boundingSphere=a.boundingSphere.clone();if(a.boundingBox!==null)this.boundingBox=a.boundingBox.clone();return this;},computeBoundingBox:function(){if(this.boundingBox===null)this.boundingBox=new fp();var a=this.attributes.position;if(a!==undefined)this.boundingBox.setFromBufferAttribute(a);else this.boundingBox.makeEmpty();if(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this);},computeBoundingSphere:function(){var a=new fp();var b=new bI();return function c(){if(this.boundingSphere===null)this.boundingSphere=new fq();var c=this.attributes.position;if(c){var d=this.boundingSphere.center;a.setFromBufferAttribute(c);a.getCenter(d);var e=0;for(var f=0,g=c.count;f<g;f++){b.x=c.getX(f);b.y=c.getY(f);b.z=c.getZ(f);e=Math.max(e,d.distanceToSquared(b));}this.boundingSphere.radius=Math.sqrt(e);if(isNaN(this.boundingSphere.radius))console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this);}};}(),computeFaceNormals:function(){},computeVertexNormals:function(){var a=this.index;var b=this.attributes;var c=this.groups;if(b.position){var d=b.position.array;if(b.normal===undefined)this.addAttribute('normal',new fH(new Float32Array(d.length),3));else{var e=b.normal.array;for(var f=0,g=e.length;f<g;f++)e[f]=0;}var h=b.normal.array;var i,j,k;var l=new bI(),m=new bI(),n=new bI();var o=new bI(),p=new bI();if(a){var q=a.array;if(c.length===0)this.addGroup(0,q.length);for(var r=0,s=c.length;r<s;++r){var t=c[r];var u=t.start;var v=t.count;for(var f=u,g=u+v;f<g;f+=3){i=q[f+0]*3;j=q[f+1]*3;k=q[f+2]*3;l.fromArray(d,i);m.fromArray(d,j);n.fromArray(d,k);o.subVectors(n,m);p.subVectors(l,m);o.cross(p);h[i]+=o.x;h[i+1]+=o.y;h[i+2]+=o.z;h[j]+=o.x;h[j+1]+=o.y;h[j+2]+=o.z;h[k]+=o.x;h[k+1]+=o.y;h[k+2]+=o.z;}}}else for(var f=0,g=d.length;f<g;f+=9){l.fromArray(d,f);m.fromArray(d,f+3);n.fromArray(d,f+6);o.subVectors(n,m);p.subVectors(l,m);o.cross(p);h[f]=o.x;h[f+1]=o.y;h[f+2]=o.z;h[f+3]=o.x;h[f+4]=o.y;h[f+5]=o.z;h[f+6]=o.x;h[f+7]=o.y;h[f+8]=o.z;}this.normalizeNormals();b.normal.needsUpdate=true;}},merge:function(a,b){if(!(a&&a.isBufferGeometry)){console.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.',a);return;}if(b===undefined)b=0;var c=this.attributes;for(var d in c){if(a.attributes[d]===undefined)continue;var e=c[d];var f=e.array;var g=a.attributes[d];var h=g.array;var i=g.itemSize;for(var j=0,k=i*b;j<h.length;j++,k++)f[k]=h[j];}return this;},normalizeNormals:function(){var a=new bI();return function b(){var b=this.attributes.normal;for(var c=0,d=b.count;c<d;c++){a.x=b.getX(c);a.y=b.getY(c);a.z=b.getZ(c);a.normalize();b.setXYZ(c,a.x,a.y,a.z);}};}(),toNonIndexed:function(){if(this.index===null){console.warn('THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.');return this;}var a=new fT();var b=this.index.array;var c=this.attributes;for(var d in c){var e=c[d];var f=e.array;var g=e.itemSize;var h=new f.constructor(b.length*g);var i=0,j=0;for(var k=0,l=b.length;k<l;k++){i=b[k]*g;for(var m=0;m<g;m++)h[j++]=f[i++];}a.addAttribute(d,new fH(h,g));}return a;},toJSON:function(){var a={metadata:{version:4.5,type:'BufferGeometry',generator:'BufferGeometry.toJSON'}};a.uuid=this.uuid;a.type=this.type;if(this.name!=='')a.name=this.name;if(this.parameters!==undefined){var b=this.parameters;for(var c in b)if(b[c]!==undefined)a[c]=b[c];return a;}a.data={attributes:{}};var d=this.index;if(d!==null){var e=Array.prototype.slice.call(d.array);a.data.index={type:d.array.constructor.name,array:e};}var f=this.attributes;for(var c in f){var g=f[c];var e=Array.prototype.slice.call(g.array);a.data.attributes[c]={itemSize:g.itemSize,type:g.array.constructor.name,array:e,normalized:g.normalized};}var h=this.groups;if(h.length>0)a.data.groups=JSON.parse(JSON.stringify(h));var i=this.boundingSphere;if(i!==null)a.data.boundingSphere={center:i.center.toArray(),radius:i.radius};return a;},clone:function(){return new fT().copy(this);},copy:function(a){var b,c,d;this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingBox=null;this.boundingSphere=null;this.name=a.name;var e=a.index;if(e!==null)this.setIndex(e.clone());var f=a.attributes;for(b in f){var g=f[b];this.addAttribute(b,g.clone());}var h=a.morphAttributes;for(b in h){var i=[];var j=h[b];for(c=0,d=j.length;c<d;c++)i.push(j[c].clone());this.morphAttributes[b]=i;}var k=a.groups;for(c=0,d=k.length;c<d;c++){var l=k[c];this.addGroup(l.start,l.count,l.materialIndex);}var m=a.boundingBox;if(m!==null)this.boundingBox=m.clone();var n=a.boundingSphere;if(n!==null)this.boundingSphere=n.clone();this.drawRange.start=a.drawRange.start;this.drawRange.count=a.drawRange.count;return this;},dispose:function(){this.dispatchEvent({type:'dispose'});}});function fU(a,b,c,d,e,f){fG.call(this);this.type='BoxGeometry';this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};this.fromBufferGeometry(new fV(a,b,c,d,e,f));this.mergeVertices();}fU.prototype=Object.create(fG.prototype);fU.prototype.constructor=fU;function fV(a,b,c,d,e,f){fT.call(this);this.type='BoxBufferGeometry';this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};var g=this;d=Math.floor(d)||1;e=Math.floor(e)||1;f=Math.floor(f)||1;var h=[];var i=[];var j=[];var k=[];var l=0;var m=0;n('z','y','x',-1,-1,c,b,a,f,e,0);n('z','y','x',1,-1,c,b,-a,f,e,1);n('x','z','y',1,1,a,c,b,d,f,2);n('x','z','y',1,-1,a,c,-b,d,f,3);n('x','y','z',1,-1,a,b,c,d,e,4);n('x','y','z',-1,-1,a,b,-c,d,e,5);this.setIndex(h);this.addAttribute('position',new fP(i,3));this.addAttribute('normal',new fP(j,3));this.addAttribute('uv',new fP(k,2));function n(a,b,c,d,e,f,n,o,p,q,r){var s=f/p;var t=n/q;var u=f/2;var v=n/2;var w=o/2;var x=p+1;var y=q+1;var z=0;var A=0;var B,C;var D=new bI();for(C=0;C<y;C++){var E=C*t-v;for(B=0;B<x;B++){var F=B*s-u;D[a]=F*d;D[b]=E*e;D[c]=w;i.push(D.x,D.y,D.z);D[a]=0;D[b]=0;D[c]=o>0?1:-1;j.push(D.x,D.y,D.z);k.push(B/p);k.push(1-(C/q));z+=1;}}for(C=0;C<q;C++)for(B=0;B<p;B++){var G=l+B+x*C;var H=l+B+x*(C+1);var I=l+(B+1)+x*(C+1);var J=l+(B+1)+x*C;h.push(G,H,J);h.push(H,I,J);A+=6;}g.addGroup(m,A,r);m+=A;l+=z;}}fV.prototype=Object.create(fT.prototype);fV.prototype.constructor=fV;function fW(a,b,c,d){fG.call(this);this.type='PlaneGeometry';this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};this.fromBufferGeometry(new fX(a,b,c,d));this.mergeVertices();}fW.prototype=Object.create(fG.prototype);fW.prototype.constructor=fW;function fX(a,b,c,d){fT.call(this);this.type='PlaneBufferGeometry';this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};var e=a/2;var f=b/2;var g=Math.floor(c)||1;var h=Math.floor(d)||1;var i=g+1;var j=h+1;var k=a/g;var l=b/h;var m,n;var o=[];var p=[];var q=[];var r=[];for(n=0;n<j;n++){var s=n*l-f;for(m=0;m<i;m++){var t=m*k-e;p.push(t,-s,0);q.push(0,0,1);r.push(m/g);r.push(1-(n/h));}}for(n=0;n<h;n++)for(m=0;m<g;m++){var u=m+i*n;var v=m+i*(n+1);var w=(m+1)+i*(n+1);var x=(m+1)+i*n;o.push(u,v,x);o.push(v,w,x);}this.setIndex(o);this.addAttribute('position',new fP(p,3));this.addAttribute('normal',new fP(q,3));this.addAttribute('uv',new fP(r,2));}fX.prototype=Object.create(fT.prototype);fX.prototype.constructor=fX;function fY(a){fl.call(this);this.type='MeshBasicMaterial';this.color=new cF(0xffffff);this.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=Z;this.reflectivity=1;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.skinning=false;this.morphTargets=false;this.lights=false;this.setValues(a);}fY.prototype=Object.create(fl.prototype);fY.prototype.constructor=fY;fY.prototype.isMeshBasicMaterial=true;fY.prototype.copy=function(a){fl.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.skinning=a.skinning;this.morphTargets=a.morphTargets;return this;};function fZ(a,b){this.origin=(a!==undefined)?a:new bI();this.direction=(b!==undefined)?b:new bI();}Object.assign(fZ.prototype,{set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this;},clone:function(){return new this.constructor().copy(this);},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this;},at:function(a,b){var c=b||new bI();return c.copy(this.direction).multiplyScalar(a).add(this.origin);},lookAt:function(a){this.direction.copy(a).sub(this.origin).normalize();return this;},recast:function(){var a=new bI();return function b(b){this.origin.copy(this.at(b,a));return this;};}(),closestPointToPoint:function(a,b){var c=b||new bI();c.subVectors(a,this.origin);var d=c.dot(this.direction);if(d<0)return c.copy(this.origin);return c.copy(this.direction).multiplyScalar(d).add(this.origin);},distanceToPoint:function(a){return Math.sqrt(this.distanceSqToPoint(a));},distanceSqToPoint:function(){var a=new bI();return function b(b){var c=a.subVectors(b,this.origin).dot(this.direction);if(c<0)return this.origin.distanceToSquared(b);a.copy(this.direction).multiplyScalar(c).add(this.origin);return a.distanceToSquared(b);};}(),distanceSqToSegment:function(){var a=new bI();var b=new bI();var c=new bI();return function d(d,e,f,g){a.copy(d).add(e).multiplyScalar(0.5);b.copy(e).sub(d).normalize();c.copy(this.origin).sub(a);var h=d.distanceTo(e)*0.5;var i=-this.direction.dot(b);var j=c.dot(this.direction);var k=-c.dot(b);var l=c.lengthSq();var m=Math.abs(1-i*i);var n,o,p,q;if(m>0){n=i*k-j;o=i*j-k;q=h*m;if(n>=0)if(o>=-q)if(o<=q){var r=1/m;n*=r;o*=r;p=n*(n+i*o+2*j)+o*(i*n+o+2*k)+l;}else{o=h;n=Math.max(0,-(i*o+j));p=-n*n+o*(o+2*k)+l;}else{o=-h;n=Math.max(0,-(i*o+j));p=-n*n+o*(o+2*k)+l;}else if(o<=-q){n=Math.max(0,-(-i*h+j));o=(n>0)?-h:Math.min(Math.max(-h,-k),h);p=-n*n+o*(o+2*k)+l;}else if(o<=q){n=0;o=Math.min(Math.max(-h,-k),h);p=o*(o+2*k)+l;}else{n=Math.max(0,-(i*h+j));o=(n>0)?h:Math.min(Math.max(-h,-k),h);p=-n*n+o*(o+2*k)+l;}}else{o=(i>0)?-h:h;n=Math.max(0,-(i*o+j));p=-n*n+o*(o+2*k)+l;}if(f)f.copy(this.direction).multiplyScalar(n).add(this.origin);if(g)g.copy(b).multiplyScalar(o).add(a);return p;};}(),intersectSphere:function(){var a=new bI();return function b(b,c){a.subVectors(b.center,this.origin);var d=a.dot(this.direction);var e=a.dot(a)-d*d;var f=b.radius*b.radius;if(e>f)return null;var g=Math.sqrt(f-e);var h=d-g;var i=d+g;if(h<0&&i<0)return null;if(h<0)return this.at(i,c);return this.at(h,c);};}(),intersectsSphere:function(a){return this.distanceToPoint(a.center)<=a.radius;},distanceToPlane:function(a){var b=a.normal.dot(this.direction);if(b===0){if(a.distanceToPoint(this.origin)===0)return 0;return null;}var c=-(this.origin.dot(a.normal)+a.constant)/b;return c>=0?c:null;},intersectPlane:function(a,b){var c=this.distanceToPlane(a);if(c===null)return null;return this.at(c,b);},intersectsPlane:function(a){var b=a.distanceToPoint(this.origin);if(b===0)return true;var c=a.normal.dot(this.direction);if(c*b<0)return true;return false;},intersectBox:function(a,b){var c,d,e,f,g,h;var i=1/this.direction.x,j=1/this.direction.y,k=1/this.direction.z;var l=this.origin;if(i>=0){c=(a.min.x-l.x)*i;d=(a.max.x-l.x)*i;}else{c=(a.max.x-l.x)*i;d=(a.min.x-l.x)*i;}if(j>=0){e=(a.min.y-l.y)*j;f=(a.max.y-l.y)*j;}else{e=(a.max.y-l.y)*j;f=(a.min.y-l.y)*j;}if((c>f)||(e>d))return null;if(e>c||c!==c)c=e;if(f<d||d!==d)d=f;if(k>=0){g=(a.min.z-l.z)*k;h=(a.max.z-l.z)*k;}else{g=(a.max.z-l.z)*k;h=(a.min.z-l.z)*k;}if((c>h)||(g>d))return null;if(g>c||c!==c)c=g;if(h<d||d!==d)d=h;if(d<0)return null;return this.at(c>=0?c:d,b);},intersectsBox:(function(){var a=new bI();return function b(b){return this.intersectBox(b,a)!==null;};})(),intersectTriangle:function(){var a=new bI();var b=new bI();var c=new bI();var d=new bI();return function e(e,f,g,h,i){b.subVectors(f,e);c.subVectors(g,e);d.crossVectors(b,c);var j=this.direction.dot(d);var k;if(j>0){if(h)return null;k=1;}else if(j<0){k=-1;j=-j;}else return null;a.subVectors(this.origin,e);var l=k*this.direction.dot(c.crossVectors(a,c));if(l<0)return null;var m=k*this.direction.dot(b.cross(a));if(m<0)return null;if(l+m>j)return null;var n=-k*a.dot(d);if(n<0)return null;return this.at(n/j,i);};}(),applyMatrix4:function(a){this.origin.applyMatrix4(a);this.direction.transformDirection(a);return this;},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction);}});function gh(a,b){this.start=(a!==undefined)?a:new bI();this.end=(b!==undefined)?b:new bI();}Object.assign(gh.prototype,{set:function(a,b){this.start.copy(a);this.end.copy(b);return this;},clone:function(){return new this.constructor().copy(this);},copy:function(a){this.start.copy(a.start);this.end.copy(a.end);return this;},getCenter:function(a){var b=a||new bI();return b.addVectors(this.start,this.end).multiplyScalar(0.5);},delta:function(a){var b=a||new bI();return b.subVectors(this.end,this.start);},distanceSq:function(){return this.start.distanceToSquared(this.end);},distance:function(){return this.start.distanceTo(this.end);},at:function(a,b){var c=b||new bI();return this.delta(c).multiplyScalar(a).add(this.start);},closestPointToPointParameter:function(){var a=new bI();var b=new bI();return function c(c,d){a.subVectors(c,this.start);b.subVectors(this.end,this.start);var e=b.dot(b);var f=b.dot(a);var g=f/e;if(d)g=bA.clamp(g,0,1);return g;};}(),closestPointToPoint:function(a,b,c){var d=this.closestPointToPointParameter(a,b);var e=c||new bI();return this.delta(e).multiplyScalar(d).add(this.start);},applyMatrix4:function(a){this.start.applyMatrix4(a);this.end.applyMatrix4(a);return this;},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end);}});function gi(a,b,c){this.a=(a!==undefined)?a:new bI();this.b=(b!==undefined)?b:new bI();this.c=(c!==undefined)?c:new bI();}Object.assign(gi,{normal:function(){var a=new bI();return function b(b,c,d,e){var f=e||new bI();f.subVectors(d,c);a.subVectors(b,c);f.cross(a);var g=f.lengthSq();if(g>0)return f.multiplyScalar(1/Math.sqrt(g));return f.set(0,0,0);};}(),barycoordFromPoint:function(){var a=new bI();var b=new bI();var c=new bI();return function d(d,e,f,g,h){a.subVectors(g,e);b.subVectors(f,e);c.subVectors(d,e);var i=a.dot(a);var j=a.dot(b);var k=a.dot(c);var l=b.dot(b);var m=b.dot(c);var n=(i*l-j*j);var o=h||new bI();if(n===0)return o.set(-2,-1,-1);var p=1/n;var q=(l*k-j*m)*p;var r=(i*m-j*k)*p;return o.set(1-q-r,r,q);};}(),containsPoint:function(){var a=new bI();return function b(b,c,d,e){var f=gi.barycoordFromPoint(b,c,d,e,a);return(f.x>=0)&&(f.y>=0)&&((f.x+f.y)<=1);};}()});Object.assign(gi.prototype,{set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this;},setFromPointsAndIndices:function(a,b,c,d){this.a.copy(a[b]);this.b.copy(a[c]);this.c.copy(a[d]);return this;},clone:function(){return new this.constructor().copy(this);},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this;},area:function(){var a=new bI();var b=new bI();return function c(){a.subVectors(this.c,this.b);b.subVectors(this.a,this.b);return a.cross(b).length()*0.5;};}(),midpoint:function(a){var b=a||new bI();return b.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3);},normal:function(a){return gi.normal(this.a,this.b,this.c,a);},plane:function(a){var b=a||new fs();return b.setFromCoplanarPoints(this.a,this.b,this.c);},barycoordFromPoint:function(a,b){return gi.barycoordFromPoint(a,this.a,this.b,this.c,b);},containsPoint:function(a){return gi.containsPoint(a,this.a,this.b,this.c);},closestPointToPoint:function(){var a=new fs();var b=[new gh(),new gh(),new gh()];var c=new bI();var d=new bI();return function e(e,f){var g=f||new bI();var h=Infinity;a.setFromCoplanarPoints(this.a,this.b,this.c);a.projectPoint(e,c);if(this.containsPoint(c)===true)g.copy(c);else{b[0].set(this.a,this.b);b[1].set(this.b,this.c);b[2].set(this.c,this.a);for(var i=0;i<b.length;i++){b[i].closestPointToPoint(c,true,d);var j=c.distanceToSquared(d);if(j<h){h=j;g.copy(d);}}}return g;};}(),equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c);}});function gj(a,b){fz.call(this);this.type='Mesh';this.geometry=a!==undefined?a:new fT();this.material=b!==undefined?b:new fY({color:Math.random()*0xffffff});this.drawMode=bn;this.updateMorphTargets();}gj.prototype=Object.assign(Object.create(fz.prototype),{constructor:gj,isMesh:true,setDrawMode:function(a){this.drawMode=a;},copy:function(a){fz.prototype.copy.call(this,a);this.drawMode=a.drawMode;return this;},updateMorphTargets:function(){var a=this.geometry;var b,c,d;if(a.isBufferGeometry){var e=a.morphAttributes;var f=Object.keys(e);if(f.length>0){var g=e[f[0]];if(g!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(b=0,c=g.length;b<c;b++){d=g[b].name||String(b);this.morphTargetInfluences.push(0);this.morphTargetDictionary[d]=b;}}}}else{var h=a.morphTargets;if(h!==undefined&&h.length>0){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(b=0,c=h.length;b<c;b++){d=h[b].name||String(b);this.morphTargetInfluences.push(0);this.morphTargetDictionary[d]=b;}}}},raycast:(function(){var a=new bJ();var b=new fZ();var c=new fq();var d=new bI();var e=new bI();var f=new bI();var g=new bI();var h=new bI();var i=new bI();var j=new bB();var k=new bB();var l=new bB();var m=new bI();var n=new bI();var q=new bI();function r(a,b,c,d,e,f,g){gi.barycoordFromPoint(a,b,c,d,m);e.multiplyScalar(m.x);f.multiplyScalar(m.y);g.multiplyScalar(m.z);e.add(f).add(g);return e.clone();}function s(a,b,c,d,e,f,g,h){var i;if(b.side===o)i=d.intersectTriangle(g,f,e,true,h);else i=d.intersectTriangle(e,f,g,b.side!==p,h);if(i===null)return null;q.copy(h);q.applyMatrix4(a.matrixWorld);var j=c.ray.origin.distanceTo(q);if(j<c.near||j>c.far)return null;return{distance:j,point:q.clone(),object:a};}function t(a,b,c,g,h,i,m,o){d.fromBufferAttribute(g,i);e.fromBufferAttribute(g,m);f.fromBufferAttribute(g,o);var p=s(a,a.material,b,c,d,e,f,n);if(p){if(h){j.fromBufferAttribute(h,i);k.fromBufferAttribute(h,m);l.fromBufferAttribute(h,o);p.uv=r(n,d,e,f,j,k,l);}p.face=new fD(i,m,o,gi.normal(d,e,f));p.faceIndex=i;}return p;}return function u(m,o){var p=this.geometry;var q=this.material;var u=this.matrixWorld;if(q===undefined)return;if(p.boundingSphere===null)p.computeBoundingSphere();c.copy(p.boundingSphere);c.applyMatrix4(u);if(m.ray.intersectsSphere(c)===false)return;a.getInverse(u);b.copy(m.ray).applyMatrix4(a);if(p.boundingBox!==null)if(b.intersectsBox(p.boundingBox)===false)return;var v;if(p.isBufferGeometry){var w,x,y;var z=p.index;var A=p.attributes.position;var B=p.attributes.uv;var C,D;if(z!==null){for(C=0,D=z.count;C<D;C+=3){w=z.getX(C);x=z.getX(C+1);y=z.getX(C+2);v=t(this,m,b,A,B,w,x,y);if(v){v.faceIndex=Math.floor(C/3);o.push(v);}}}else for(C=0,D=A.count;C<D;C+=3){w=C;x=C+1;y=C+2;v=t(this,m,b,A,B,w,x,y);if(v){v.index=w;o.push(v);}}}else if(p.isGeometry){var E,F,G;var H=Array.isArray(q);var I=p.vertices;var J=p.faces;var K;var L=p.faceVertexUvs[0];if(L.length>0)K=L;for(var M=0,N=J.length;M<N;M++){var O=J[M];var P=H?q[O.materialIndex]:q;if(P===undefined)continue;E=I[O.a];F=I[O.b];G=I[O.c];if(P.morphTargets===true){var Q=p.morphTargets;var R=this.morphTargetInfluences;d.set(0,0,0);e.set(0,0,0);f.set(0,0,0);for(var S=0,T=Q.length;S<T;S++){var U=R[S];if(U===0)continue;var V=Q[S].vertices;d.addScaledVector(g.subVectors(V[O.a],E),U);e.addScaledVector(h.subVectors(V[O.b],F),U);f.addScaledVector(i.subVectors(V[O.c],G),U);}d.add(E);e.add(F);f.add(G);E=d;F=e;G=f;}v=s(this,P,m,b,E,F,G,n);if(v){if(K&&K[M]){var W=K[M];j.copy(W[0]);k.copy(W[1]);l.copy(W[2]);v.uv=r(n,E,F,G,j,k,l);}v.face=O;v.faceIndex=M;o.push(v);}}}};}()),clone:function(){return new this.constructor(this.geometry,this.material).copy(this);}});function gk(a,b,c,d){var e=new cF(0x000000);var f=0;var g,h;var i;function j(b,d,j,l){var m=d.background;if(m===null)k(e,f);else if(m&&m.isColor){k(m,1);l=true;}if(a.autoClear||l)a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil);if(m&&m.isCubeTexture){if(i===undefined){i=new gj(new fV(1,1,1),new fm({uniforms:eZ.cube.uniforms,vertexShader:eZ.cube.vertexShader,fragmentShader:eZ.cube.fragmentShader,side:o,depthTest:true,depthWrite:false,polygonOffset:true,fog:false}));i.geometry.removeAttribute('normal');i.geometry.removeAttribute('uv');i.onBeforeRender=function(a,b,c){var d=c.far;this.matrixWorld.makeScale(d,d,d);this.matrixWorld.copyPosition(c.matrixWorld);this.material.polygonOffsetUnits=d*10;};c.update(i.geometry);}i.material.uniforms.tCube.value=m;b.push(i,i.geometry,i.material,0,null);}else if(m&&m.isTexture){if(g===undefined){g=new fB(-1,1,1,-1,0,1);h=new gj(new fX(2,2),new fY({depthTest:false,depthWrite:false,fog:false}));c.update(h.geometry);}h.material.map=m;a.renderBufferDirect(g,null,h.geometry,h.material,h,null);}}function k(a,c){b.buffers.color.setClear(a.r,a.g,a.b,c,d);}return{getClearColor:function(){return e;},setClearColor:function(a,b){e.set(a);f=b!==undefined?b:1;k(e,f);},getClearAlpha:function(){return f;},setClearAlpha:function(a){f=a;k(e,f);},render:j};}function gl(a,b){if(a.renderOrder!==b.renderOrder)return a.renderOrder-b.renderOrder;else if(a.program&&b.program&&a.program!==b.program)return a.program.id-b.program.id;else if(a.material.id!==b.material.id)return a.material.id-b.material.id;else if(a.z!==b.z)return a.z-b.z;else return a.id-b.id;}function gm(a,b){if(a.renderOrder!==b.renderOrder)return a.renderOrder-b.renderOrder;if(a.z!==b.z)return b.z-a.z;else return a.id-b.id;}function gn(){var a=[];var b=0;var c=[];var d=[];function e(){b=0;c.length=0;d.length=0;}function f(e,f,g,h,i){var j=a[b];if(j===undefined){j={id:e.id,object:e,geometry:f,material:g,program:g.program,renderOrder:e.renderOrder,z:h,group:i};a[b]=j;}else{j.id=e.id;j.object=e;j.geometry=f;j.material=g;j.program=g.program;j.renderOrder=e.renderOrder;j.z=h;j.group=i;}(g.transparent===true?d:c).push(j);b++;}function g(){if(c.length>1)c.sort(gl);if(d.length>1)d.sort(gm);}return{opaque:c,transparent:d,init:e,push:f,sort:g};}function go(){var a={};function b(b,c){var d=b.id+','+c.id;var e=a[d];if(e===undefined){e=new gn();a[d]=e;}return e;}function c(){a={};}return{get:b,dispose:c};}function gp(a,b){return Math.abs(b[1])-Math.abs(a[1]);}function gq(a){var b={};var c=new Float32Array(8);function d(d,e,f,g){var h=d.morphTargetInfluences;var i=h.length;var j=b[e.id];if(j===undefined){j=[];for(var k=0;k<i;k++)j[k]=[k,0];b[e.id]=j;}var l=f.morphTargets&&e.morphAttributes.position;var m=f.morphNormals&&e.morphAttributes.normal;for(var k=0;k<i;k++){var n=j[k];if(n[1]!==0){if(l)e.removeAttribute('morphTarget'+k);if(m)e.removeAttribute('morphNormal'+k);}}for(var k=0;k<i;k++){var n=j[k];n[0]=k;n[1]=h[k];}j.sort(gp);for(var k=0;k<8;k++){var n=j[k];if(n){var o=n[0];var p=n[1];if(p){if(l)e.addAttribute('morphTarget'+k,l[o]);if(m)e.addAttribute('morphNormal'+k,m[o]);c[k]=p;continue;}}c[k]=0;}g.getUniforms().setValue(a,'morphTargetInfluences',c);}return{update:d};}function gr(a,b,c){var d;function e(a){d=a;}var f,g;function h(a){f=a.type;g=a.bytesPerElement;}function i(b,e){a.drawElements(d,e,f,b*g);c.calls++;c.vertices+=e;if(d===a.TRIANGLES)c.faces+=e/3;else if(d===a.POINTS)c.points+=e;}function j(e,h,i){var j=b.get('ANGLE_instanced_arrays');if(j===null){console.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');return;}j.drawElementsInstancedANGLE(d,i,f,h*g,e.maxInstancedCount);c.calls++;c.vertices+=i*e.maxInstancedCount;if(d===a.TRIANGLES)c.faces+=e.maxInstancedCount*i/3;else if(d===a.POINTS)c.points+=e.maxInstancedCount*i;}this.setMode=e;this.setIndex=h;this.render=i;this.renderInstances=j;}function gs(a,b,c){var d;function e(a){d=a;}function f(b,e){a.drawArrays(d,b,e);c.calls++;c.vertices+=e;if(d===a.TRIANGLES)c.faces+=e/3;else if(d===a.POINTS)c.points+=e;}function g(e,f,g){var h=b.get('ANGLE_instanced_arrays');if(h===null){console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');return;}var i=e.attributes.position;if(i.isInterleavedBufferAttribute){g=i.data.count;h.drawArraysInstancedANGLE(d,0,g,e.maxInstancedCount);}else h.drawArraysInstancedANGLE(d,f,g,e.maxInstancedCount);c.calls++;c.vertices+=g*e.maxInstancedCount;if(d===a.TRIANGLES)c.faces+=e.maxInstancedCount*g/3;else if(d===a.POINTS)c.points+=e.maxInstancedCount*g;}this.setMode=e;this.render=f;this.renderInstances=g;}function gt(a,b,c){var d={};var e={};function f(a){var g=a.target;var h=d[g.id];if(h.index!==null)b.remove(h.index);for(var i in h.attributes)b.remove(h.attributes[i]);g.removeEventListener('dispose',f);delete d[g.id];var j=e[g.id];if(j){b.remove(j);delete e[g.id];}j=e[h.id];if(j){b.remove(j);delete e[h.id];}c.geometries--;}function g(a,b){var e=d[b.id];if(e)return e;b.addEventListener('dispose',f);if(b.isBufferGeometry)e=b;else if(b.isGeometry){if(b._bufferGeometry===undefined)b._bufferGeometry=new fT().setFromObject(a);e=b._bufferGeometry;}d[b.id]=e;c.geometries++;return e;}function h(c){var d=c.index;var e=c.attributes;if(d!==null)b.update(d,a.ELEMENT_ARRAY_BUFFER);for(var f in e)b.update(e[f],a.ARRAY_BUFFER);var g=c.morphAttributes;for(var f in g){var h=g[f];for(var i=0,j=h.length;i<j;i++)b.update(h[i],a.ARRAY_BUFFER);}}function i(c){var d=e[c.id];if(d)return d;var f=[];var g=c.index;var h=c.attributes;if(g!==null){var i=g.array;for(var j=0,k=i.length;j<k;j+=3){var l=i[j+0];var m=i[j+1];var n=i[j+2];f.push(l,m,m,n,n,l);}}else{var i=h.position.array;for(var j=0,k=(i.length/3)-1;j<k;j+=3){var l=j+0;var m=j+1;var n=j+2;f.push(l,m,m,n,n,l);}}d=new (fS(f)>65535?fO:fM)(f,1);b.update(d,a.ELEMENT_ARRAY_BUFFER);e[c.id]=d;return d;}return{get:g,update:h,getWireframeAttribute:i};}function gu(){var a={};return{get:function(b){if(a[b.id]!==undefined)return a[b.id];var c;switch(b.type){case 'DirectionalLight':c={direction:new bI(),color:new cF(),shadow:false,shadowBias:0,shadowRadius:1,shadowMapSize:new bB()};break;case 'SpotLight':c={position:new bI(),direction:new bI(),color:new cF(),distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:false,shadowBias:0,shadowRadius:1,shadowMapSize:new bB()};break;case 'PointLight':c={position:new bI(),color:new cF(),distance:0,decay:0,shadow:false,shadowBias:0,shadowRadius:1,shadowMapSize:new bB(),shadowCameraNear:1,shadowCameraFar:1000};break;case 'HemisphereLight':c={direction:new bI(),skyColor:new cF(),groundColor:new cF()};break;case 'RectAreaLight':c={color:new cF(),position:new bI(),halfWidth:new bI(),halfHeight:new bI()};break;}a[b.id]=c;return c;}};}function gv(){var a=new gu();var b={hash:'',ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};var c=new bI();var d=new bJ();var e=new bJ();function f(f,g,h){var i=0,j=0,k=0;var l=0;var m=0;var n=0;var o=0;var p=0;var q=h.matrixWorldInverse;for(var r=0,s=f.length;r<s;r++){var t=f[r];var u=t.color;var v=t.intensity;var w=t.distance;var x=(t.shadow&&t.shadow.map)?t.shadow.map.texture:null;if(t.isAmbientLight){i+=u.r*v;j+=u.g*v;k+=u.b*v;}else if(t.isDirectionalLight){var y=a.get(t);y.color.copy(t.color).multiplyScalar(t.intensity);y.direction.setFromMatrixPosition(t.matrixWorld);c.setFromMatrixPosition(t.target.matrixWorld);y.direction.sub(c);y.direction.transformDirection(q);y.shadow=t.castShadow;if(t.castShadow){var z=t.shadow;y.shadowBias=z.bias;y.shadowRadius=z.radius;y.shadowMapSize=z.mapSize;}b.directionalShadowMap[l]=x;b.directionalShadowMatrix[l]=t.shadow.matrix;b.directional[l]=y;l++;}else if(t.isSpotLight){var y=a.get(t);y.position.setFromMatrixPosition(t.matrixWorld);y.position.applyMatrix4(q);y.color.copy(u).multiplyScalar(v);y.distance=w;y.direction.setFromMatrixPosition(t.matrixWorld);c.setFromMatrixPosition(t.target.matrixWorld);y.direction.sub(c);y.direction.transformDirection(q);y.coneCos=Math.cos(t.angle);y.penumbraCos=Math.cos(t.angle*(1-t.penumbra));y.decay=(t.distance===0)?0.0:t.decay;y.shadow=t.castShadow;if(t.castShadow){var z=t.shadow;y.shadowBias=z.bias;y.shadowRadius=z.radius;y.shadowMapSize=z.mapSize;}b.spotShadowMap[n]=x;b.spotShadowMatrix[n]=t.shadow.matrix;b.spot[n]=y;n++;}else if(t.isRectAreaLight){var y=a.get(t);y.color.copy(u).multiplyScalar(v/(t.width*t.height));y.position.setFromMatrixPosition(t.matrixWorld);y.position.applyMatrix4(q);e.identity();d.copy(t.matrixWorld);d.premultiply(q);e.extractRotation(d);y.halfWidth.set(t.width*0.5,0.0,0.0);y.halfHeight.set(0.0,t.height*0.5,0.0);y.halfWidth.applyMatrix4(e);y.halfHeight.applyMatrix4(e);b.rectArea[o]=y;o++;}else if(t.isPointLight){var y=a.get(t);y.position.setFromMatrixPosition(t.matrixWorld);y.position.applyMatrix4(q);y.color.copy(t.color).multiplyScalar(t.intensity);y.distance=t.distance;y.decay=(t.distance===0)?0.0:t.decay;y.shadow=t.castShadow;if(t.castShadow){var z=t.shadow;y.shadowBias=z.bias;y.shadowRadius=z.radius;y.shadowMapSize=z.mapSize;y.shadowCameraNear=z.camera.near;y.shadowCameraFar=z.camera.far;}b.pointShadowMap[m]=x;b.pointShadowMatrix[m]=t.shadow.matrix;b.point[m]=y;m++;}else if(t.isHemisphereLight){var y=a.get(t);y.direction.setFromMatrixPosition(t.matrixWorld);y.direction.transformDirection(q);y.direction.normalize();y.skyColor.copy(t.color).multiplyScalar(v);y.groundColor.copy(t.groundColor).multiplyScalar(v);b.hemi[p]=y;p++;}}b.ambient[0]=i;b.ambient[1]=j;b.ambient[2]=k;b.directional.length=l;b.spot.length=n;b.rectArea.length=o;b.point.length=m;b.hemi.length=p;b.hash=l+','+m+','+n+','+o+','+p+','+g.length;}return{setup:f,state:b};}function gw(a,b){var c={};function d(d){var e=b.frame;var f=d.geometry;var g=a.get(d,f);if(c[g.id]!==e){if(f.isGeometry)g.updateFromObject(d);a.update(g);c[g.id]=e;}return g;}function e(){c={};}return{update:d,clear:e};}function gx(a){var b=a.split('\n');for(var c=0;c<b.length;c++)b[c]=(c+1)+': '+b[c];return b.join('\n');}function gy(a,b,c){var d=a.createShader(b);a.shaderSource(d,c);a.compileShader(d);if(a.getShaderParameter(d,a.COMPILE_STATUS)===false)console.error('THREE.WebGLShader: Shader couldn\'t compile.');if(a.getShaderInfoLog(d)!=='')console.warn('THREE.WebGLShader: gl.getShaderInfoLog()',b===a.VERTEX_SHADER?'vertex':'fragment',a.getShaderInfoLog(d),gx(c));return d;}var gz=0;function gA(a){switch(a){case bq:return ['Linear','( value )'];case br:return ['sRGB','( value )'];case bt:return ['RGBE','( value )'];case bv:return ['RGBM','( value, 7.0 )'];case bw:return ['RGBM','( value, 16.0 )'];case bx:return ['RGBD','( value, 256.0 )'];case bs:return ['Gamma','( value, float( GAMMA_FACTOR ) )'];default:throw new Error('unsupported encoding: '+a);}}function gB(a,b){var c=gA(b);return "vec4 "+a+"( vec4 value ) { return "+c[0]+"ToLinear"+c[1]+"; }";}function gC(a,b){var c=gA(b);return "vec4 "+a+"( vec4 value ) { return LinearTo"+c[0]+c[1]+"; }";}function gD(a,b){var c;switch(b){case ae:c="Linear";break;case af:c="Reinhard";break;case ag:c="Uncharted2";break;case ah:c="OptimizedCineon";break;default:throw new Error('unsupported toneMapping: '+b);}return "vec3 "+a+"( vec3 color ) { return "+c+"ToneMapping( color ); }";}function gE(a,b,c){a=a||{};var d=[(a.derivatives||b.envMapCubeUV||b.bumpMap||b.normalMap||b.flatShading)?'#extension GL_OES_standard_derivatives : enable':'',(a.fragDepth||b.logarithmicDepthBuffer)&&c.get('EXT_frag_depth')?'#extension GL_EXT_frag_depth : enable':'',(a.drawBuffers)&&c.get('WEBGL_draw_buffers')?'#extension GL_EXT_draw_buffers : require':'',(a.shaderTextureLOD||b.envMap)&&c.get('EXT_shader_texture_lod')?'#extension GL_EXT_shader_texture_lod : enable':''];return d.filter(gH).join('\n');}function gF(a){var b=[];for(var c in a){var d=a[c];if(d===false)continue;b.push('#define '+c+' '+d);}return b.join('\n');}function gG(a,b,c){var d={};var e=a.getProgramParameter(b,a.ACTIVE_ATTRIBUTES);for(var f=0;f<e;f++){var g=a.getActiveAttrib(b,f);var h=g.name;d[h]=a.getAttribLocation(b,h);}return d;}function gH(a){return a!=='';}function gI(a,b){return a.replace(/NUM_DIR_LIGHTS/g,b.numDirLights).replace(/NUM_SPOT_LIGHTS/g,b.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,b.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,b.numPointLights).replace(/NUM_HEMI_LIGHTS/g,b.numHemiLights);}function gJ(a){var b=/^[ \t]*#include +<([\w\d.]+)>/gm;function c(a,b){var c=eY[b];if(c===undefined)throw new Error('Can not resolve #include <'+b+'>');return gJ(c);}return a.replace(b,c);}function gK(a){var b=/for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;function c(a,b,c,d){var e='';for(var f=parseInt(b);f<parseInt(c);f++)e+=d.replace(/\[ i \]/g,'[ '+f+' ]');return e;}return a.replace(b,c);}function gL(a,b,c,d,e,f){var g=a.context;var h=d.defines;var i=e.vertexShader;var j=e.fragmentShader;var k='SHADOWMAP_TYPE_BASIC';if(f.shadowMapType===l)k='SHADOWMAP_TYPE_PCF';else if(f.shadowMapType===m)k='SHADOWMAP_TYPE_PCF_SOFT';var n='ENVMAP_TYPE_CUBE';var o='ENVMAP_MODE_REFLECTION';var p='ENVMAP_BLENDING_MULTIPLY';if(f.envMap){switch(d.envMap.mapping){case aj:case ak:n='ENVMAP_TYPE_CUBE';break;case ao:case ap:n='ENVMAP_TYPE_CUBE_UV';break;case al:case am:n='ENVMAP_TYPE_EQUIREC';break;case an:n='ENVMAP_TYPE_SPHERE';break;}switch(d.envMap.mapping){case ak:case am:o='ENVMAP_MODE_REFRACTION';break;}switch(d.combine){case Z:p='ENVMAP_BLENDING_MULTIPLY';break;case ab:p='ENVMAP_BLENDING_MIX';break;case ac:p='ENVMAP_BLENDING_ADD';break;}}var q=(a.gammaFactor>0)?a.gammaFactor:1.0;var r=gE(d.extensions,f,b);var s=gF(h);var t=g.createProgram();var u,v;if(d.isRawShaderMaterial){u=[s,'\n'].filter(gH).join('\n');v=[r,s,'\n'].filter(gH).join('\n');}else{u=['precision '+f.precision+' float;','precision '+f.precision+' int;','#define SHADER_NAME '+e.name,s,f.supportsVertexTextures?'#define VERTEX_TEXTURES':'','#define GAMMA_FACTOR '+q,'#define MAX_BONES '+f.maxBones,(f.useFog&&f.fog)?'#define USE_FOG':'',(f.useFog&&f.fogExp)?'#define FOG_EXP2':'',f.map?'#define USE_MAP':'',f.envMap?'#define USE_ENVMAP':'',f.envMap?'#define '+o:'',f.lightMap?'#define USE_LIGHTMAP':'',f.aoMap?'#define USE_AOMAP':'',f.emissiveMap?'#define USE_EMISSIVEMAP':'',f.bumpMap?'#define USE_BUMPMAP':'',f.normalMap?'#define USE_NORMALMAP':'',f.displacementMap&&f.supportsVertexTextures?'#define USE_DISPLACEMENTMAP':'',f.specularMap?'#define USE_SPECULARMAP':'',f.roughnessMap?'#define USE_ROUGHNESSMAP':'',f.metalnessMap?'#define USE_METALNESSMAP':'',f.alphaMap?'#define USE_ALPHAMAP':'',f.vertexColors?'#define USE_COLOR':'',f.flatShading?'#define FLAT_SHADED':'',f.skinning?'#define USE_SKINNING':'',f.useVertexTexture?'#define BONE_TEXTURE':'',f.morphTargets?'#define USE_MORPHTARGETS':'',f.morphNormals&&f.flatShading===false?'#define USE_MORPHNORMALS':'',f.doubleSided?'#define DOUBLE_SIDED':'',f.flipSided?'#define FLIP_SIDED':'','#define NUM_CLIPPING_PLANES '+f.numClippingPlanes,f.shadowMapEnabled?'#define USE_SHADOWMAP':'',f.shadowMapEnabled?'#define '+k:'',f.sizeAttenuation?'#define USE_SIZEATTENUATION':'',f.logarithmicDepthBuffer?'#define USE_LOGDEPTHBUF':'',f.logarithmicDepthBuffer&&b.get('EXT_frag_depth')?'#define USE_LOGDEPTHBUF_EXT':'','uniform mat4 modelMatrix;','uniform mat4 modelViewMatrix;','uniform mat4 projectionMatrix;','uniform mat4 viewMatrix;','uniform mat3 normalMatrix;','uniform vec3 cameraPosition;','attribute vec3 position;','attribute vec3 normal;','attribute vec2 uv;','#ifdef USE_COLOR','	attribute vec3 color;','#endif','#ifdef USE_MORPHTARGETS','	attribute vec3 morphTarget0;','	attribute vec3 morphTarget1;','	attribute vec3 morphTarget2;','	attribute vec3 morphTarget3;','	#ifdef USE_MORPHNORMALS','		attribute vec3 morphNormal0;','		attribute vec3 morphNormal1;','		attribute vec3 morphNormal2;','		attribute vec3 morphNormal3;','	#else','		attribute vec3 morphTarget4;','		attribute vec3 morphTarget5;','		attribute vec3 morphTarget6;','		attribute vec3 morphTarget7;','	#endif','#endif','#ifdef USE_SKINNING','	attribute vec4 skinIndex;','	attribute vec4 skinWeight;','#endif','\n'].filter(gH).join('\n');v=[r,'precision '+f.precision+' float;','precision '+f.precision+' int;','#define SHADER_NAME '+e.name,s,f.alphaTest?'#define ALPHATEST '+f.alphaTest:'','#define GAMMA_FACTOR '+q,(f.useFog&&f.fog)?'#define USE_FOG':'',(f.useFog&&f.fogExp)?'#define FOG_EXP2':'',f.map?'#define USE_MAP':'',f.envMap?'#define USE_ENVMAP':'',f.envMap?'#define '+n:'',f.envMap?'#define '+o:'',f.envMap?'#define '+p:'',f.lightMap?'#define USE_LIGHTMAP':'',f.aoMap?'#define USE_AOMAP':'',f.emissiveMap?'#define USE_EMISSIVEMAP':'',f.bumpMap?'#define USE_BUMPMAP':'',f.normalMap?'#define USE_NORMALMAP':'',f.specularMap?'#define USE_SPECULARMAP':'',f.roughnessMap?'#define USE_ROUGHNESSMAP':'',f.metalnessMap?'#define USE_METALNESSMAP':'',f.alphaMap?'#define USE_ALPHAMAP':'',f.vertexColors?'#define USE_COLOR':'',f.gradientMap?'#define USE_GRADIENTMAP':'',f.flatShading?'#define FLAT_SHADED':'',f.doubleSided?'#define DOUBLE_SIDED':'',f.flipSided?'#define FLIP_SIDED':'','#define NUM_CLIPPING_PLANES '+f.numClippingPlanes,'#define UNION_CLIPPING_PLANES '+(f.numClippingPlanes-f.numClipIntersection),f.shadowMapEnabled?'#define USE_SHADOWMAP':'',f.shadowMapEnabled?'#define '+k:'',f.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":'',f.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":'',f.logarithmicDepthBuffer?'#define USE_LOGDEPTHBUF':'',f.logarithmicDepthBuffer&&b.get('EXT_frag_depth')?'#define USE_LOGDEPTHBUF_EXT':'',f.envMap&&b.get('EXT_shader_texture_lod')?'#define TEXTURE_LOD_EXT':'','uniform mat4 viewMatrix;','uniform vec3 cameraPosition;',(f.toneMapping!==ad)?"#define TONE_MAPPING":'',(f.toneMapping!==ad)?eY.tonemapping_pars_fragment:'',(f.toneMapping!==ad)?gD("toneMapping",f.toneMapping):'',f.dithering?'#define DITHERING':'',(f.outputEncoding||f.mapEncoding||f.envMapEncoding||f.emissiveMapEncoding)?eY.encodings_pars_fragment:'',f.mapEncoding?gB('mapTexelToLinear',f.mapEncoding):'',f.envMapEncoding?gB('envMapTexelToLinear',f.envMapEncoding):'',f.emissiveMapEncoding?gB('emissiveMapTexelToLinear',f.emissiveMapEncoding):'',f.outputEncoding?gC("linearToOutputTexel",f.outputEncoding):'',f.depthPacking?"#define DEPTH_PACKING "+d.depthPacking:'','\n'].filter(gH).join('\n');}i=gJ(i);i=gI(i,f);j=gJ(j);j=gI(j,f);if(!d.isShaderMaterial){i=gK(i);j=gK(j);}var w=u+i;var x=v+j;var y=gy(g,g.VERTEX_SHADER,w);var z=gy(g,g.FRAGMENT_SHADER,x);g.attachShader(t,y);g.attachShader(t,z);if(d.index0AttributeName!==undefined)g.bindAttribLocation(t,0,d.index0AttributeName);else if(f.morphTargets===true)g.bindAttribLocation(t,0,'position');g.linkProgram(t);var A=g.getProgramInfoLog(t);var B=g.getShaderInfoLog(y);var C=g.getShaderInfoLog(z);var D=true;var E=true;if(g.getProgramParameter(t,g.LINK_STATUS)===false){D=false;console.error('THREE.WebGLProgram: shader error: ',g.getError(),'gl.VALIDATE_STATUS',g.getProgramParameter(t,g.VALIDATE_STATUS),'gl.getProgramInfoLog',A,B,C);}else if(A!=='')console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()',A);else if(B===''||C==='')E=false;if(E)this.diagnostics={runnable:D,material:d,programLog:A,vertexShader:{log:B,prefix:u},fragmentShader:{log:C,prefix:v}};g.deleteShader(y);g.deleteShader(z);var F;this.getUniforms=function(){if(F===undefined)F=new cD(g,t,a);return F;};var G;this.getAttributes=function(){if(G===undefined)G=gG(g,t);return G;};this.destroy=function(){g.deleteProgram(t);this.program=undefined;};Object.defineProperties(this,{uniforms:{get:function(){console.warn('THREE.WebGLProgram: .uniforms is now .getUniforms().');return this.getUniforms();}},attributes:{get:function(){console.warn('THREE.WebGLProgram: .attributes is now .getAttributes().');return this.getAttributes();}}});this.id=gz++;this.code=c;this.usedTimes=1;this.program=t;this.vertexShader=y;this.fragmentShader=z;return this;}function gM(a,b,c){var d=[];var e={MeshDepthMaterial:'depth',MeshDistanceMaterial:'distanceRGBA',MeshNormalMaterial:'normal',MeshBasicMaterial:'basic',MeshLambertMaterial:'lambert',MeshPhongMaterial:'phong',MeshToonMaterial:'phong',MeshStandardMaterial:'physical',MeshPhysicalMaterial:'physical',LineBasicMaterial:'basic',LineDashedMaterial:'dashed',PointsMaterial:'points',ShadowMaterial:'shadow'};var f=["precision","supportsVertexTextures","map","mapEncoding","envMap","envMapMode","envMapEncoding","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","shadowMapEnabled","shadowMapType","toneMapping",'physicallyCorrectLights',"alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering"];function g(a){var b=a.skeleton;var d=b.bones;if(c.floatVertexTextures)return 1024;else{var e=c.maxVertexUniforms;var f=Math.floor((e-20)/4);var g=Math.min(f,d.length);if(g<d.length){console.warn('THREE.WebGLRenderer: Skeleton has '+d.length+' bones. This GPU supports '+g+'.');return 0;}return g;}}function h(a,b){var c;if(!a)c=bq;else if(a.isTexture)c=a.encoding;else if(a.isWebGLRenderTarget){console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.");c=a.texture.encoding;}if(c===bq&&b)c=bs;return c;}this.getParameters=function(b,d,f,i,j,k,l){var m=e[b.type];var n=l.isSkinnedMesh?g(l):0;var q=c.precision;if(b.precision!==null){q=c.getMaxPrecision(b.precision);if(q!==b.precision)console.warn('THREE.WebGLProgram.getParameters:',b.precision,'not supported, using',q,'instead.');}var r=a.getRenderTarget();var s={shaderID:m,precision:q,supportsVertexTextures:c.vertexTextures,outputEncoding:h((!r)?null:r.texture,a.gammaOutput),map:!!b.map,mapEncoding:h(b.map,a.gammaInput),envMap:!!b.envMap,envMapMode:b.envMap&&b.envMap.mapping,envMapEncoding:h(b.envMap,a.gammaInput),envMapCubeUV:(!!b.envMap)&&((b.envMap.mapping===ao)||(b.envMap.mapping===ap)),lightMap:!!b.lightMap,aoMap:!!b.aoMap,emissiveMap:!!b.emissiveMap,emissiveMapEncoding:h(b.emissiveMap,a.gammaInput),bumpMap:!!b.bumpMap,normalMap:!!b.normalMap,displacementMap:!!b.displacementMap,roughnessMap:!!b.roughnessMap,metalnessMap:!!b.metalnessMap,specularMap:!!b.specularMap,alphaMap:!!b.alphaMap,gradientMap:!!b.gradientMap,combine:b.combine,vertexColors:b.vertexColors,fog:!!i,useFog:b.fog,fogExp:(i&&i.isFogExp2),flatShading:b.flatShading,sizeAttenuation:b.sizeAttenuation,logarithmicDepthBuffer:c.logarithmicDepthBuffer,skinning:b.skinning&&n>0,maxBones:n,useVertexTexture:c.floatVertexTextures,morphTargets:b.morphTargets,morphNormals:b.morphNormals,maxMorphTargets:a.maxMorphTargets,maxMorphNormals:a.maxMorphNormals,numDirLights:d.directional.length,numPointLights:d.point.length,numSpotLights:d.spot.length,numRectAreaLights:d.rectArea.length,numHemiLights:d.hemi.length,numClippingPlanes:j,numClipIntersection:k,dithering:b.dithering,shadowMapEnabled:a.shadowMap.enabled&&l.receiveShadow&&f.length>0,shadowMapType:a.shadowMap.type,toneMapping:a.toneMapping,physicallyCorrectLights:a.physicallyCorrectLights,premultipliedAlpha:b.premultipliedAlpha,alphaTest:b.alphaTest,doubleSided:b.side===p,flipSided:b.side===o,depthPacking:(b.depthPacking!==undefined)?b.depthPacking:false};return s;};this.getProgramCode=function(b,c){var d=[];if(c.shaderID)d.push(c.shaderID);else{d.push(b.fragmentShader);d.push(b.vertexShader);}if(b.defines!==undefined)for(var e in b.defines){d.push(e);d.push(b.defines[e]);}for(var g=0;g<f.length;g++)d.push(c[f[g]]);d.push(b.onBeforeCompile.toString());d.push(a.gammaOutput);return d.join();};this.acquireProgram=function(c,e,f,g){var h;for(var i=0,j=d.length;i<j;i++){var k=d[i];if(k.code===g){h=k;++h.usedTimes;break;}}if(h===undefined){h=new gL(a,b,g,c,e,f);d.push(h);}return h;};this.releaseProgram=function(a){if(--a.usedTimes===0){var b=d.indexOf(a);d[b]=d[d.length-1];d.pop();a.destroy();}};this.programs=d;}function gN(a,b,c,d,e,f,g){var h=(typeof WebGL2RenderingContext!=='undefined'&&a instanceof WebGL2RenderingContext);function i(a,b){if(a.width>b||a.height>b){var c=b/Math.max(a.width,a.height);var d=document.createElementNS('http://www.w3.org/1999/xhtml','canvas');d.width=Math.floor(a.width*c);d.height=Math.floor(a.height*c);var e=d.getContext('2d');e.drawImage(a,0,0,a.width,a.height,0,0,d.width,d.height);console.warn('THREE.WebGLRenderer: image is too big ('+a.width+'x'+a.height+'). Resized to '+d.width+'x'+d.height,a);return d;}return a;}function j(a){return bA.isPowerOfTwo(a.width)&&bA.isPowerOfTwo(a.height);}function k(a){if(a instanceof HTMLImageElement||a instanceof HTMLCanvasElement){var b=document.createElementNS('http://www.w3.org/1999/xhtml','canvas');b.width=bA.nearestPowerOfTwo(a.width);b.height=bA.nearestPowerOfTwo(a.height);var c=b.getContext('2d');c.drawImage(a,0,0,b.width,b.height);console.warn('THREE.WebGLRenderer: image is not power of two ('+a.width+'x'+a.height+'). Resized to '+b.width+'x'+b.height,a);return b;}return a;}function l(a){return(a.wrapS!==ar||a.wrapT!==ar)||(a.minFilter!==at&&a.minFilter!==aw);}function m(a,b){return a.generateMipmaps&&b&&a.minFilter!==at&&a.minFilter!==aw;}function n(b){if(b===at||b===au||b===av)return a.NEAREST;return a.LINEAR;}function o(a){var b=a.target;b.removeEventListener('dispose',o);q(b);g.textures--;}function p(a){var b=a.target;b.removeEventListener('dispose',p);r(b);g.textures--;}function q(b){var c=d.get(b);if(b.image&&c.__image__webglTextureCube)a.deleteTexture(c.__image__webglTextureCube);else{if(c.__webglInit===undefined)return;a.deleteTexture(c.__webglTexture);}d.remove(b);}function r(b){var c=d.get(b);var e=d.get(b.texture);if(!b)return;if(e.__webglTexture!==undefined)a.deleteTexture(e.__webglTexture);if(b.depthTexture)b.depthTexture.dispose();if(b.isWebGLRenderTargetCube){for(var f=0;f<6;f++){a.deleteFramebuffer(c.__webglFramebuffer[f]);if(c.__webglDepthbuffer)a.deleteRenderbuffer(c.__webglDepthbuffer[f]);}}else{a.deleteFramebuffer(c.__webglFramebuffer);if(c.__webglDepthbuffer)a.deleteRenderbuffer(c.__webglDepthbuffer);}d.remove(b.texture);d.remove(b);}function s(b,e){var f=d.get(b);if(b.version>0&&f.__version!==b.version){var g=b.image;if(g===undefined)console.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined',b);else if(g.complete===false)console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete',b);else{w(f,b,e);return;}}c.activeTexture(a.TEXTURE0+e);c.bindTexture(a.TEXTURE_2D,f.__webglTexture);}function t(b,h){var k=d.get(b);if(b.image.length===6)if(b.version>0&&k.__version!==b.version){if(!k.__image__webglTextureCube){b.addEventListener('dispose',o);k.__image__webglTextureCube=a.createTexture();g.textures++;}c.activeTexture(a.TEXTURE0+h);c.bindTexture(a.TEXTURE_CUBE_MAP,k.__image__webglTextureCube);a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,b.flipY);var l=(b&&b.isCompressedTexture);var n=(b.image[0]&&b.image[0].isDataTexture);var p=[];for(var q=0;q<6;q++)if(!l&&!n)p[q]=i(b.image[q],e.maxCubemapSize);else p[q]=n?b.image[q].image:b.image[q];var r=p[0],s=j(r),t=f.convert(b.format),u=f.convert(b.type);v(a.TEXTURE_CUBE_MAP,b,s);for(var q=0;q<6;q++)if(!l)if(n)c.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+q,0,t,p[q].width,p[q].height,0,t,u,p[q].data);else c.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+q,0,t,t,u,p[q]);else{var w,x=p[q].mipmaps;for(var y=0,z=x.length;y<z;y++){w=x[y];if(b.format!==aN&&b.format!==aM)if(c.getCompressedTextureFormats().indexOf(t)>-1)c.compressedTexImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+q,y,t,w.width,w.height,0,w.data);else console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()');else c.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+q,y,t,w.width,w.height,0,t,u,w.data);}}if(m(b,s))a.generateMipmap(a.TEXTURE_CUBE_MAP);k.__version=b.version;if(b.onUpdate)b.onUpdate(b);}else{c.activeTexture(a.TEXTURE0+h);c.bindTexture(a.TEXTURE_CUBE_MAP,k.__image__webglTextureCube);}}function u(b,e){c.activeTexture(a.TEXTURE0+e);c.bindTexture(a.TEXTURE_CUBE_MAP,d.get(b).__webglTexture);}function v(c,g,h){var i;if(h){a.texParameteri(c,a.TEXTURE_WRAP_S,f.convert(g.wrapS));a.texParameteri(c,a.TEXTURE_WRAP_T,f.convert(g.wrapT));a.texParameteri(c,a.TEXTURE_MAG_FILTER,f.convert(g.magFilter));a.texParameteri(c,a.TEXTURE_MIN_FILTER,f.convert(g.minFilter));}else{a.texParameteri(c,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE);a.texParameteri(c,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE);if(g.wrapS!==ar||g.wrapT!==ar)console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.',g);a.texParameteri(c,a.TEXTURE_MAG_FILTER,n(g.magFilter));a.texParameteri(c,a.TEXTURE_MIN_FILTER,n(g.minFilter));if(g.minFilter!==at&&g.minFilter!==aw)console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.',g);}i=b.get('EXT_texture_filter_anisotropic');if(i){if(g.type===aF&&b.get('OES_texture_float_linear')===null)return;if(g.type===aG&&b.get('OES_texture_half_float_linear')===null)return;if(g.anisotropy>1||d.get(g).__currentAnisotropy){a.texParameterf(c,i.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(g.anisotropy,e.getMaxAnisotropy()));d.get(g).__currentAnisotropy=g.anisotropy;}}}function w(b,d,n){if(b.__webglInit===undefined){b.__webglInit=true;d.addEventListener('dispose',o);b.__webglTexture=a.createTexture();g.textures++;}c.activeTexture(a.TEXTURE0+n);c.bindTexture(a.TEXTURE_2D,b.__webglTexture);a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,d.flipY);a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,d.premultiplyAlpha);a.pixelStorei(a.UNPACK_ALIGNMENT,d.unpackAlignment);var p=i(d.image,e.maxTextureSize);if(l(d)&&j(p)===false)p=k(p);var q=j(p),r=f.convert(d.format),s=f.convert(d.type);v(a.TEXTURE_2D,d,q);var t,u=d.mipmaps;if(d.isDepthTexture){var w=a.DEPTH_COMPONENT;if(d.type===aF){if(!h)throw new Error('Float Depth Texture only supported in WebGL2.0');w=a.DEPTH_COMPONENT32F;}else if(h)w=a.DEPTH_COMPONENT16;if(d.format===aR&&w===a.DEPTH_COMPONENT)if(d.type!==aC&&d.type!==aE){console.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');d.type=aC;s=f.convert(d.type);}if(d.format===aS){w=a.DEPTH_STENCIL;if(d.type!==aK){console.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');d.type=aK;s=f.convert(d.type);}}c.texImage2D(a.TEXTURE_2D,0,w,p.width,p.height,0,r,s,null);}else if(d.isDataTexture)if(u.length>0&&q){for(var x=0,y=u.length;x<y;x++){t=u[x];c.texImage2D(a.TEXTURE_2D,x,r,t.width,t.height,0,r,s,t.data);}d.generateMipmaps=false;}else c.texImage2D(a.TEXTURE_2D,0,r,p.width,p.height,0,r,s,p.data);else if(d.isCompressedTexture)for(var x=0,y=u.length;x<y;x++){t=u[x];if(d.format!==aN&&d.format!==aM)if(c.getCompressedTextureFormats().indexOf(r)>-1)c.compressedTexImage2D(a.TEXTURE_2D,x,r,t.width,t.height,0,t.data);else console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()');else c.texImage2D(a.TEXTURE_2D,x,r,t.width,t.height,0,r,s,t.data);}else if(u.length>0&&q){for(var x=0,y=u.length;x<y;x++){t=u[x];c.texImage2D(a.TEXTURE_2D,x,r,r,s,t);}d.generateMipmaps=false;}else c.texImage2D(a.TEXTURE_2D,0,r,r,s,p);if(m(d,q))a.generateMipmap(a.TEXTURE_2D);b.__version=d.version;if(d.onUpdate)d.onUpdate(d);}function x(b,e,g,h){var i=f.convert(e.texture.format);var j=f.convert(e.texture.type);c.texImage2D(h,0,i,e.width,e.height,0,i,j,null);a.bindFramebuffer(a.FRAMEBUFFER,b);a.framebufferTexture2D(a.FRAMEBUFFER,g,h,d.get(e.texture).__webglTexture,0);a.bindFramebuffer(a.FRAMEBUFFER,null);}function y(b,c){a.bindRenderbuffer(a.RENDERBUFFER,b);if(c.depthBuffer&&!c.stencilBuffer){a.renderbufferStorage(a.RENDERBUFFER,a.DEPTH_COMPONENT16,c.width,c.height);a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.RENDERBUFFER,b);}else if(c.depthBuffer&&c.stencilBuffer){a.renderbufferStorage(a.RENDERBUFFER,a.DEPTH_STENCIL,c.width,c.height);a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.RENDERBUFFER,b);}else a.renderbufferStorage(a.RENDERBUFFER,a.RGBA4,c.width,c.height);a.bindRenderbuffer(a.RENDERBUFFER,null);}function z(b,c){var e=(c&&c.isWebGLRenderTargetCube);if(e)throw new Error('Depth Texture with cube render targets is not supported');a.bindFramebuffer(a.FRAMEBUFFER,b);if(!(c.depthTexture&&c.depthTexture.isDepthTexture))throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');if(!d.get(c.depthTexture).__webglTexture||c.depthTexture.image.width!==c.width||c.depthTexture.image.height!==c.height){c.depthTexture.image.width=c.width;c.depthTexture.image.height=c.height;c.depthTexture.needsUpdate=true;}s(c.depthTexture,0);var f=d.get(c.depthTexture).__webglTexture;if(c.depthTexture.format===aR)a.framebufferTexture2D(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.TEXTURE_2D,f,0);else if(c.depthTexture.format===aS)a.framebufferTexture2D(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.TEXTURE_2D,f,0);else throw new Error('Unknown depthTexture format');}function A(b){var c=d.get(b);var e=(b.isWebGLRenderTargetCube===true);if(b.depthTexture){if(e)throw new Error('target.depthTexture not supported in Cube render targets');z(c.__webglFramebuffer,b);}else if(e){c.__webglDepthbuffer=[];for(var f=0;f<6;f++){a.bindFramebuffer(a.FRAMEBUFFER,c.__webglFramebuffer[f]);c.__webglDepthbuffer[f]=a.createRenderbuffer();y(c.__webglDepthbuffer[f],b);}}else{a.bindFramebuffer(a.FRAMEBUFFER,c.__webglFramebuffer);c.__webglDepthbuffer=a.createRenderbuffer();y(c.__webglDepthbuffer,b);}a.bindFramebuffer(a.FRAMEBUFFER,null);}function B(b){var e=d.get(b);var f=d.get(b.texture);b.addEventListener('dispose',p);f.__webglTexture=a.createTexture();g.textures++;var h=(b.isWebGLRenderTargetCube===true);var i=j(b);if(h){e.__webglFramebuffer=[];for(var k=0;k<6;k++)e.__webglFramebuffer[k]=a.createFramebuffer();}else e.__webglFramebuffer=a.createFramebuffer();if(h){c.bindTexture(a.TEXTURE_CUBE_MAP,f.__webglTexture);v(a.TEXTURE_CUBE_MAP,b.texture,i);for(var k=0;k<6;k++)x(e.__webglFramebuffer[k],b,a.COLOR_ATTACHMENT0,a.TEXTURE_CUBE_MAP_POSITIVE_X+k);if(m(b.texture,i))a.generateMipmap(a.TEXTURE_CUBE_MAP);c.bindTexture(a.TEXTURE_CUBE_MAP,null);}else{c.bindTexture(a.TEXTURE_2D,f.__webglTexture);v(a.TEXTURE_2D,b.texture,i);x(e.__webglFramebuffer,b,a.COLOR_ATTACHMENT0,a.TEXTURE_2D);if(m(b.texture,i))a.generateMipmap(a.TEXTURE_2D);c.bindTexture(a.TEXTURE_2D,null);}if(b.depthBuffer)A(b);}function C(b){var e=b.texture;var f=j(b);if(m(e,f)){var g=b.isWebGLRenderTargetCube?a.TEXTURE_CUBE_MAP:a.TEXTURE_2D;var h=d.get(e).__webglTexture;c.bindTexture(g,h);a.generateMipmap(g);c.bindTexture(g,null);}}this.setTexture2D=s;this.setTextureCube=t;this.setTextureCubeDynamic=u;this.setupRenderTarget=B;this.updateRenderTargetMipmap=C;}function gO(){var a={};function b(b){var c=b.uuid;var d=a[c];if(d===undefined){d={};a[c]=d;}return d;}function c(b){delete a[b.uuid];}function d(){a={};}return{get:b,remove:c,clear:d};}function gP(a,b,c){function d(){var b=false;var c=new bE();var d=null;var e=new bE(0,0,0,0);return{setMask:function(c){if(d!==c&&!b){a.colorMask(c,c,c,c);d=c;}},setLocked:function(a){b=a;},setClear:function(b,d,f,g,h){if(h===true){b*=g;d*=g;f*=g;}c.set(b,d,f,g);if(e.equals(c)===false){a.clearColor(b,d,f,g);e.copy(c);}},reset:function(){b=false;d=null;e.set(-1,0,0,0);}};}function h(){var b=false;var c=null;var d=null;var e=null;return{setTest:function(b){if(b)ak(a.DEPTH_TEST);else al(a.DEPTH_TEST);},setMask:function(d){if(c!==d&&!b){a.depthMask(d);c=d;}},setFunc:function(b){if(d!==b){if(b)switch(b){case R:a.depthFunc(a.NEVER);break;case S:a.depthFunc(a.ALWAYS);break;case T:a.depthFunc(a.LESS);break;case U:a.depthFunc(a.LEQUAL);break;case V:a.depthFunc(a.EQUAL);break;case W:a.depthFunc(a.GEQUAL);break;case X:a.depthFunc(a.GREATER);break;case Y:a.depthFunc(a.NOTEQUAL);break;default:a.depthFunc(a.LEQUAL);}else a.depthFunc(a.LEQUAL);d=b;}},setLocked:function(a){b=a;},setClear:function(b){if(e!==b){a.clearDepth(b);e=b;}},reset:function(){b=false;c=null;d=null;e=null;}};}function i(){var b=false;var c=null;var d=null;var e=null;var f=null;var g=null;var h=null;var i=null;var j=null;return{setTest:function(b){if(b)ak(a.STENCIL_TEST);else al(a.STENCIL_TEST);},setMask:function(d){if(c!==d&&!b){a.stencilMask(d);c=d;}},setFunc:function(b,c,g){if(d!==b||e!==c||f!==g){a.stencilFunc(b,c,g);d=b;e=c;f=g;}},setOp:function(b,c,d){if(g!==b||h!==c||i!==d){a.stencilOp(b,c,d);g=b;h=c;i=d;}},setLocked:function(a){b=a;},setClear:function(b){if(j!==b){a.clearStencil(b);j=b;}},reset:function(){b=false;c=null;d=null;e=null;f=null;g=null;h=null;i=null;j=null;}};}var j=new d();var k=new h();var l=new i();var m=a.getParameter(a.MAX_VERTEX_ATTRIBS);var n=new Uint8Array(m);var q=new Uint8Array(m);var r=new Uint8Array(m);var s={};var t=null;var u=null;var B=null;var C=null;var D=null;var E=null;var F=null;var G=null;var H=null;var I=false;var J=null;var K=null;var L=null;var M=null;var N=null;var O=a.getParameter(a.MAX_COMBINED_TEXTURE_IMAGE_UNITS);var P=parseFloat(/^WebGL\ ([0-9])/.exec(a.getParameter(a.VERSION))[1]);var Q=parseFloat(P)>=1.0;var Z=null;var ab={};var ac=new bE();var ad=new bE();function ae(b,c,d){var e=new Uint8Array(4);var f=a.createTexture();a.bindTexture(b,f);a.texParameteri(b,a.TEXTURE_MIN_FILTER,a.NEAREST);a.texParameteri(b,a.TEXTURE_MAG_FILTER,a.NEAREST);for(var g=0;g<d;g++)a.texImage2D(c+g,0,a.RGBA,1,1,0,a.RGBA,a.UNSIGNED_BYTE,e);return f;}var af={};af[a.TEXTURE_2D]=ae(a.TEXTURE_2D,a.TEXTURE_2D,1);af[a.TEXTURE_CUBE_MAP]=ae(a.TEXTURE_CUBE_MAP,a.TEXTURE_CUBE_MAP_POSITIVE_X,6);j.setClear(0,0,0,1);k.setClear(1);l.setClear(0);ak(a.DEPTH_TEST);k.setFunc(U);aq(false);ar(f);ak(a.CULL_FACE);ak(a.BLEND);ao(w);function ag(){for(var a=0,b=n.length;a<b;a++)n[a]=0;}function ah(c){n[c]=1;if(q[c]===0){a.enableVertexAttribArray(c);q[c]=1;}if(r[c]!==0){var d=b.get('ANGLE_instanced_arrays');d.vertexAttribDivisorANGLE(c,0);r[c]=0;}}function ai(c,d){n[c]=1;if(q[c]===0){a.enableVertexAttribArray(c);q[c]=1;}if(r[c]!==d){var e=b.get('ANGLE_instanced_arrays');e.vertexAttribDivisorANGLE(c,d);r[c]=d;}}function aj(){for(var b=0,c=q.length;b!==c;++b)if(q[b]!==n[b]){a.disableVertexAttribArray(b);q[b]=0;}}function ak(b){if(s[b]!==true){a.enable(b);s[b]=true;}}function al(b){if(s[b]!==false){a.disable(b);s[b]=false;}}function am(){if(t===null){t=[];if(b.get('WEBGL_compressed_texture_pvrtc')||b.get('WEBGL_compressed_texture_s3tc')||b.get('WEBGL_compressed_texture_etc1')){var c=a.getParameter(a.COMPRESSED_TEXTURE_FORMATS);for(var d=0;d<c.length;d++)t.push(c[d]);}}return t;}function an(b){if(u!==b){a.useProgram(b);u=b;return true;}return false;}function ao(b,d,e,f,g,h,i,j){if(b!==v)ak(a.BLEND);else al(a.BLEND);if(b!==A){if(b!==B||j!==I)switch(b){case x:if(j){a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD);a.blendFuncSeparate(a.ONE,a.ONE,a.ONE,a.ONE);}else{a.blendEquation(a.FUNC_ADD);a.blendFunc(a.SRC_ALPHA,a.ONE);}break;case y:if(j){a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD);a.blendFuncSeparate(a.ZERO,a.ZERO,a.ONE_MINUS_SRC_COLOR,a.ONE_MINUS_SRC_ALPHA);}else{a.blendEquation(a.FUNC_ADD);a.blendFunc(a.ZERO,a.ONE_MINUS_SRC_COLOR);}break;case z:if(j){a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD);a.blendFuncSeparate(a.ZERO,a.SRC_COLOR,a.ZERO,a.SRC_ALPHA);}else{a.blendEquation(a.FUNC_ADD);a.blendFunc(a.ZERO,a.SRC_COLOR);}break;default:if(j){a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD);a.blendFuncSeparate(a.ONE,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA);}else{a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD);a.blendFuncSeparate(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA);}}C=null;D=null;E=null;F=null;G=null;H=null;}else{g=g||d;h=h||e;i=i||f;if(d!==C||g!==F){a.blendEquationSeparate(c.convert(d),c.convert(g));C=d;F=g;}if(e!==D||f!==E||h!==G||i!==H){a.blendFuncSeparate(c.convert(e),c.convert(f),c.convert(h),c.convert(i));D=e;E=f;G=h;H=i;}}B=b;I=j;}function ap(b){b.side===p?al(a.CULL_FACE):ak(a.CULL_FACE);aq(b.side===o);b.transparent===true?ao(b.blending,b.blendEquation,b.blendSrc,b.blendDst,b.blendEquationAlpha,b.blendSrcAlpha,b.blendDstAlpha,b.premultipliedAlpha):ao(v);k.setFunc(b.depthFunc);k.setTest(b.depthTest);k.setMask(b.depthWrite);j.setMask(b.colorWrite);at(b.polygonOffset,b.polygonOffsetFactor,b.polygonOffsetUnits);}function aq(b){if(J!==b){if(b)a.frontFace(a.CW);else a.frontFace(a.CCW);J=b;}}function ar(b){if(b!==e){ak(a.CULL_FACE);if(b!==K)if(b===f)a.cullFace(a.BACK);else if(b===g)a.cullFace(a.FRONT);else a.cullFace(a.FRONT_AND_BACK);}else al(a.CULL_FACE);K=b;}function as(b){if(b!==L){if(Q)a.lineWidth(b);L=b;}}function at(b,c,d){if(b){ak(a.POLYGON_OFFSET_FILL);if(M!==c||N!==d){a.polygonOffset(c,d);M=c;N=d;}}else al(a.POLYGON_OFFSET_FILL);}function au(b){if(b)ak(a.SCISSOR_TEST);else al(a.SCISSOR_TEST);}function av(b){if(b===undefined)b=a.TEXTURE0+O-1;if(Z!==b){a.activeTexture(b);Z=b;}}function aw(b,c){if(Z===null)av();var d=ab[Z];if(d===undefined){d={type:undefined,texture:undefined};ab[Z]=d;}if(d.type!==b||d.texture!==c){a.bindTexture(b,c||af[b]);d.type=b;d.texture=c;}}function ax(){try{a.compressedTexImage2D.apply(a,arguments);}catch(b){console.error('THREE.WebGLState:',b);}}function ay(){try{a.texImage2D.apply(a,arguments);}catch(b){console.error('THREE.WebGLState:',b);}}function az(b){if(ac.equals(b)===false){a.scissor(b.x,b.y,b.z,b.w);ac.copy(b);}}function aA(b){if(ad.equals(b)===false){a.viewport(b.x,b.y,b.z,b.w);ad.copy(b);}}function aB(){for(var b=0;b<q.length;b++)if(q[b]===1){a.disableVertexAttribArray(b);q[b]=0;}s={};t=null;Z=null;ab={};u=null;B=null;J=null;K=null;j.reset();k.reset();l.reset();}return{buffers:{color:j,depth:k,stencil:l},initAttributes:ag,enableAttribute:ah,enableAttributeAndDivisor:ai,disableUnusedAttributes:aj,enable:ak,disable:al,getCompressedTextureFormats:am,useProgram:an,setBlending:ao,setMaterial:ap,setFlipSided:aq,setCullFace:ar,setLineWidth:as,setPolygonOffset:at,setScissorTest:au,activeTexture:av,bindTexture:aw,compressedTexImage2D:ax,texImage2D:ay,scissor:az,viewport:aA,reset:aB};}function gQ(a,b,c){var d;function e(){if(d!==undefined)return d;var c=b.get('EXT_texture_filter_anisotropic');if(c!==null)d=a.getParameter(c.MAX_TEXTURE_MAX_ANISOTROPY_EXT);else d=0;return d;}function f(b){if(b==='highp'){if(a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.HIGH_FLOAT).precision>0&&a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.HIGH_FLOAT).precision>0)return 'highp';b='mediump';}if(b==='mediump')if(a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.MEDIUM_FLOAT).precision>0&&a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.MEDIUM_FLOAT).precision>0)return 'mediump';return 'lowp';}var g=c.precision!==undefined?c.precision:'highp';var h=f(g);if(h!==g){console.warn('THREE.WebGLRenderer:',g,'not supported, using',h,'instead.');g=h;}var i=c.logarithmicDepthBuffer===true&&!!b.get('EXT_frag_depth');var j=a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS);var k=a.getParameter(a.MAX_VERTEX_TEXTURE_IMAGE_UNITS);var l=a.getParameter(a.MAX_TEXTURE_SIZE);var m=a.getParameter(a.MAX_CUBE_MAP_TEXTURE_SIZE);var n=a.getParameter(a.MAX_VERTEX_ATTRIBS);var o=a.getParameter(a.MAX_VERTEX_UNIFORM_VECTORS);var p=a.getParameter(a.MAX_VARYING_VECTORS);var q=a.getParameter(a.MAX_FRAGMENT_UNIFORM_VECTORS);var r=k>0;var s=!!b.get('OES_texture_float');var t=r&&s;return{getMaxAnisotropy:e,getMaxPrecision:f,precision:g,logarithmicDepthBuffer:i,maxTextures:j,maxVertexTextures:k,maxTextureSize:l,maxCubemapSize:m,maxAttributes:n,maxVertexUniforms:o,maxVaryings:p,maxFragmentUniforms:q,vertexTextures:r,floatFragmentTextures:s,floatVertexTextures:t};}function gR(a){fC.call(this);this.cameras=a||[];}gR.prototype=Object.assign(Object.create(fC.prototype),{constructor:gR,isArrayCamera:true});function gS(a){var b=this;var c=null;var d=null;if('VRFrameData' in window)d=new window.VRFrameData();var e=new bJ();var f=new bJ();var g=new bJ();var h=new fC();h.bounds=new bE(0.0,0.0,0.5,1.0);h.layers.enable(1);var i=new fC();i.bounds=new bE(0.5,0.0,0.5,1.0);i.layers.enable(2);var j=new gR([h,i]);j.layers.enable(1);j.layers.enable(2);var k,l;function m(){if(c!==null&&c.isPresenting){var d=c.getEyeParameters('left');var e=d.renderWidth;var f=d.renderHeight;l=a.getPixelRatio();k=a.getSize();a.setDrawingBufferSize(e*2,f,1);}else if(b.enabled)a.setDrawingBufferSize(k.width,k.height,l);}window.addEventListener('vrdisplaypresentchange',m,false);this.enabled=false;this.standing=false;this.getDevice=function(){return c;};this.setDevice=function(a){if(a!==undefined)c=a;};this.getCamera=function(a){if(c===null)return a;c.depthNear=a.near;c.depthFar=a.far;c.getFrameData(d);var b=d.pose;if(b.position!==null)a.position.fromArray(b.position);else a.position.set(0,0,0);if(b.orientation!==null)a.quaternion.fromArray(b.orientation);a.updateMatrixWorld();var k=c.stageParameters;if(this.standing&&k){f.fromArray(k.sittingToStandingTransform);g.getInverse(f);a.matrixWorld.multiply(f);a.matrixWorldInverse.multiply(g);}if(c.isPresenting===false)return a;h.near=a.near;i.near=a.near;h.far=a.far;i.far=a.far;j.matrixWorld.copy(a.matrixWorld);j.matrixWorldInverse.copy(a.matrixWorldInverse);h.matrixWorldInverse.fromArray(d.leftViewMatrix);i.matrixWorldInverse.fromArray(d.rightViewMatrix);if(this.standing&&k){h.matrixWorldInverse.multiply(g);i.matrixWorldInverse.multiply(g);}var l=a.parent;if(l!==null){e.getInverse(l.matrixWorld);h.matrixWorldInverse.multiply(e);i.matrixWorldInverse.multiply(e);}h.matrixWorld.getInverse(h.matrixWorldInverse);i.matrixWorld.getInverse(i.matrixWorldInverse);h.projectionMatrix.fromArray(d.leftProjectionMatrix);i.projectionMatrix.fromArray(d.rightProjectionMatrix);j.projectionMatrix.copy(h.projectionMatrix);var m=c.getLayers();if(m.length){var n=m[0];if(n.leftBounds!==null&&n.leftBounds.length===4)h.bounds.fromArray(n.leftBounds);if(n.rightBounds!==null&&n.rightBounds.length===4)i.bounds.fromArray(n.rightBounds);}return j;};this.getStandingMatrix=function(){return f;};this.submitFrame=function(){if(c&&c.isPresenting)c.submitFrame();};this.dispose=function(){window.removeEventListener('vrdisplaypresentchange',m);};}function gT(a){var b={};return{get:function(c){if(b[c]!==undefined)return b[c];var d;switch(c){case 'WEBGL_depth_texture':d=a.getExtension('WEBGL_depth_texture')||a.getExtension('MOZ_WEBGL_depth_texture')||a.getExtension('WEBKIT_WEBGL_depth_texture');break;case 'EXT_texture_filter_anisotropic':d=a.getExtension('EXT_texture_filter_anisotropic')||a.getExtension('MOZ_EXT_texture_filter_anisotropic')||a.getExtension('WEBKIT_EXT_texture_filter_anisotropic');break;case 'WEBGL_compressed_texture_s3tc':d=a.getExtension('WEBGL_compressed_texture_s3tc')||a.getExtension('MOZ_WEBGL_compressed_texture_s3tc')||a.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');break;case 'WEBGL_compressed_texture_pvrtc':d=a.getExtension('WEBGL_compressed_texture_pvrtc')||a.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');break;case 'WEBGL_compressed_texture_etc1':d=a.getExtension('WEBGL_compressed_texture_etc1');break;default:d=a.getExtension(c);}if(d===null)console.warn('THREE.WebGLRenderer: '+c+' extension not supported.');b[c]=d;return d;}};}function gU(){var a=this,b=null,c=0,d=false,e=false,f=new fs(),g=new fr(),h={value:null,needsUpdate:false};this.uniform=h;this.numPlanes=0;this.numIntersection=0;this.init=function(a,e,f){var g=a.length!==0||e||c!==0||d;d=e;b=j(a,f,0);c=a.length;return g;};this.beginShadows=function(){e=true;j(null);};this.endShadows=function(){e=false;i();};this.setState=function(a,f,g,k,l,m){if(!d||a===null||a.length===0||e&&!g)if(e)j(null);else i();else{var n=e?0:c,o=n*4,p=l.clippingState||null;h.value=p;p=j(a,k,o,m);for(var q=0;q!==o;++q)p[q]=b[q];l.clippingState=p;this.numIntersection=f?this.numPlanes:0;this.numPlanes+=n;}};function i(){if(h.value!==b){h.value=b;h.needsUpdate=c>0;}a.numPlanes=c;a.numIntersection=0;}function j(b,c,d,e){var i=b!==null?b.length:0,j=null;if(i!==0){j=h.value;if(e!==true||j===null){var k=d+i*4,l=c.matrixWorldInverse;g.getNormalMatrix(l);if(j===null||j.length<k)j=new Float32Array(k);for(var m=0,n=d;m!==i;++m,n+=4){f.copy(b[m]).applyMatrix4(l,g);f.normal.toArray(j,n);j[n+3]=f.constant;}}h.value=j;h.needsUpdate=true;}a.numPlanes=i;return j;}}function gV(a,b){function c(c){var d;if(c===aq)return a.REPEAT;if(c===ar)return a.CLAMP_TO_EDGE;if(c===as)return a.MIRRORED_REPEAT;if(c===at)return a.NEAREST;if(c===au)return a.NEAREST_MIPMAP_NEAREST;if(c===av)return a.NEAREST_MIPMAP_LINEAR;if(c===aw)return a.LINEAR;if(c===ax)return a.LINEAR_MIPMAP_NEAREST;if(c===ay)return a.LINEAR_MIPMAP_LINEAR;if(c===az)return a.UNSIGNED_BYTE;if(c===aH)return a.UNSIGNED_SHORT_4_4_4_4;if(c===aI)return a.UNSIGNED_SHORT_5_5_5_1;if(c===aJ)return a.UNSIGNED_SHORT_5_6_5;if(c===aA)return a.BYTE;if(c===aB)return a.SHORT;if(c===aC)return a.UNSIGNED_SHORT;if(c===aD)return a.INT;if(c===aE)return a.UNSIGNED_INT;if(c===aF)return a.FLOAT;if(c===aG){d=b.get('OES_texture_half_float');if(d!==null)return d.HALF_FLOAT_OES;}if(c===aL)return a.ALPHA;if(c===aM)return a.RGB;if(c===aN)return a.RGBA;if(c===aO)return a.LUMINANCE;if(c===aP)return a.LUMINANCE_ALPHA;if(c===aR)return a.DEPTH_COMPONENT;if(c===aS)return a.DEPTH_STENCIL;if(c===B)return a.FUNC_ADD;if(c===C)return a.FUNC_SUBTRACT;if(c===D)return a.FUNC_REVERSE_SUBTRACT;if(c===G)return a.ZERO;if(c===H)return a.ONE;if(c===I)return a.SRC_COLOR;if(c===J)return a.ONE_MINUS_SRC_COLOR;if(c===K)return a.SRC_ALPHA;if(c===L)return a.ONE_MINUS_SRC_ALPHA;if(c===M)return a.DST_ALPHA;if(c===N)return a.ONE_MINUS_DST_ALPHA;if(c===O)return a.DST_COLOR;if(c===P)return a.ONE_MINUS_DST_COLOR;if(c===Q)return a.SRC_ALPHA_SATURATE;if(c===aT||c===aU||c===aV||c===aW){d=b.get('WEBGL_compressed_texture_s3tc');if(d!==null){if(c===aT)return d.COMPRESSED_RGB_S3TC_DXT1_EXT;if(c===aU)return d.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(c===aV)return d.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(c===aW)return d.COMPRESSED_RGBA_S3TC_DXT5_EXT;}}if(c===aX||c===aY||c===aZ||c===bc){d=b.get('WEBGL_compressed_texture_pvrtc');if(d!==null){if(c===aX)return d.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(c===aY)return d.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(c===aZ)return d.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(c===bc)return d.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;}}if(c===bd){d=b.get('WEBGL_compressed_texture_etc1');if(d!==null)return d.COMPRESSED_RGB_ETC1_WEBGL;}if(c===E||c===F){d=b.get('EXT_blend_minmax');if(d!==null){if(c===E)return d.MIN_EXT;if(c===F)return d.MAX_EXT;}}if(c===aK){d=b.get('WEBGL_depth_texture');if(d!==null)return d.UNSIGNED_INT_24_8_WEBGL;}return 0;}return{convert:c};}function gW(a){console.log('THREE.WebGLRenderer',c);a=a||{};var b=a.canvas!==undefined?a.canvas:document.createElementNS('http://www.w3.org/1999/xhtml','canvas'),d=a.context!==undefined?a.context:null,e=a.alpha!==undefined?a.alpha:false,f=a.depth!==undefined?a.depth:true,g=a.stencil!==undefined?a.stencil:true,h=a.antialias!==undefined?a.antialias:false,j=a.premultipliedAlpha!==undefined?a.premultipliedAlpha:true,k=a.preserveDrawingBuffer!==undefined?a.preserveDrawingBuffer:false;var l=[];var m=[];var n=null;var o=[];var p=[];this.domElement=b;this.context=null;this.autoClear=true;this.autoClearColor=true;this.autoClearDepth=true;this.autoClearStencil=true;this.sortObjects=true;this.clippingPlanes=[];this.localClippingEnabled=false;this.gammaFactor=2.0;this.gammaInput=false;this.gammaOutput=false;this.physicallyCorrectLights=false;this.toneMapping=ae;this.toneMappingExposure=1.0;this.toneMappingWhitePoint=1.0;this.maxMorphTargets=8;this.maxMorphNormals=4;var q=this,r=false,t=null,u=null,v=-1,w='',x=null,y=null,z=new bE(),A=new bE(),B=null,C=0,D=b.width,E=b.height,F=1,G=new bE(0,0,D,E),H=new bE(0,0,D,E),I=false,J=new ft(),K=new gU(),L=false,M=false,N=new bJ(),O=new bI(),P={geometries:0,textures:0},Q={frame:0,calls:0,vertices:0,faces:0,points:0};this.info={render:Q,memory:P,programs:null};function R(){return t===null?F:1;}var S;try{var T={alpha:e,depth:f,stencil:g,antialias:h,premultipliedAlpha:j,preserveDrawingBuffer:k};S=d||b.getContext('webgl',T)||b.getContext('experimental-webgl',T);if(S===null)if(b.getContext('webgl')!==null)throw 'Error creating WebGL context with your selected attributes.';else throw 'Error creating WebGL context.';if(S.getShaderPrecisionFormat===undefined)S.getShaderPrecisionFormat=function(){return{'rangeMin':1,'rangeMax':1,'precision':1};};b.addEventListener('webglcontextlost',as,false);b.addEventListener('webglcontextrestored',at,false);}catch(U){console.error('THREE.WebGLRenderer: '+U);}var V,W,X;var Y,Z,ab,ac,ad,af;var ag,ah;var ai,aj,ak,al;var am,an;var ao;function ap(){V=new gT(S);V.get('WEBGL_depth_texture');V.get('OES_texture_float');V.get('OES_texture_float_linear');V.get('OES_texture_half_float');V.get('OES_texture_half_float_linear');V.get('OES_standard_derivatives');V.get('ANGLE_instanced_arrays');if(V.get('OES_element_index_uint'))fT.MaxIndex=4294967296;ao=new gV(S,V);W=new gQ(S,V,a);X=new gP(S,V,ao);X.scissor(A.copy(H).multiplyScalar(F));X.viewport(z.copy(G).multiplyScalar(F));Y=new gO();Z=new gN(S,V,X,Y,W,ao,P);ab=new fv(S);ac=new gt(S,ab,P);ad=new gw(ac,Q);aj=new gq(S);ag=new gM(q,V,W);af=new gv();ah=new go();ai=new gk(q,X,ac,j);ak=new gs(S,V,Q);al=new gr(S,V,Q);am=new fh(q,S,X,Z,W);an=new fj(q,S,X,Z,W);q.info.programs=ag.programs;q.context=S;q.capabilities=W;q.extensions=V;q.properties=Y;q.renderLists=ah;q.state=X;}ap();var aq=new gS(q);this.vr=aq;var ar=new fu(q,ad,W.maxTextureSize);this.shadowMap=ar;this.getContext=function(){return S;};this.getContextAttributes=function(){return S.getContextAttributes();};this.forceContextLoss=function(){var a=V.get('WEBGL_lose_context');if(a)a.loseContext();};this.forceContextRestore=function(){var a=V.get('WEBGL_lose_context');if(a)a.restoreContext();};this.getPixelRatio=function(){return F;};this.setPixelRatio=function(a){if(a===undefined)return;F=a;this.setSize(D,E,false);};this.getSize=function(){return{width:D,height:E};};this.setSize=function(a,c,d){var e=aq.getDevice();if(e&&e.isPresenting){console.warn('THREE.WebGLRenderer: Can\'t change size while VR device is presenting.');return;}D=a;E=c;b.width=a*F;b.height=c*F;if(d!==false){b.style.width=a+'px';b.style.height=c+'px';}this.setViewport(0,0,a,c);};this.getDrawingBufferSize=function(){return{width:D*F,height:E*F};};this.setDrawingBufferSize=function(a,c,d){D=a;E=c;F=d;b.width=a*d;b.height=c*d;this.setViewport(0,0,a,c);};this.setViewport=function(a,b,c,d){G.set(a,E-b-d,c,d);X.viewport(z.copy(G).multiplyScalar(F));};this.setScissor=function(a,b,c,d){H.set(a,E-b-d,c,d);X.scissor(A.copy(H).multiplyScalar(F));};this.setScissorTest=function(a){X.setScissorTest(I=a);};this.getClearColor=ai.getClearColor;this.setClearColor=ai.setClearColor;this.getClearAlpha=ai.getClearAlpha;this.setClearAlpha=ai.setClearAlpha;this.clear=function(a,b,c){var d=0;if(a===undefined||a)d|=S.COLOR_BUFFER_BIT;if(b===undefined||b)d|=S.DEPTH_BUFFER_BIT;if(c===undefined||c)d|=S.STENCIL_BUFFER_BIT;S.clear(d);};this.clearColor=function(){this.clear(true,false,false);};this.clearDepth=function(){this.clear(false,true,false);};this.clearStencil=function(){this.clear(false,false,true);};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d);};this.dispose=function(){b.removeEventListener('webglcontextlost',as,false);b.removeEventListener('webglcontextrestored',at,false);ah.dispose();aq.dispose();};function as(a){a.preventDefault();console.log('THREE.WebGLRenderer: Context Lost.');r=true;}function at(a){console.log('THREE.WebGLRenderer: Context Restored.');r=false;ap();}function au(a){var b=a.target;b.removeEventListener('dispose',au);av(b);}function av(a){aw(a);Y.remove(a);}function aw(a){var b=Y.get(a).program;a.program=undefined;if(b!==undefined)ag.releaseProgram(b);}function ax(a,b,c){a.render(function(a){q.renderBufferImmediate(a,b,c);});}this.renderBufferImmediate=function(a,b,c){X.initAttributes();var d=Y.get(a);if(a.hasPositions&&!d.position)d.position=S.createBuffer();if(a.hasNormals&&!d.normal)d.normal=S.createBuffer();if(a.hasUvs&&!d.uv)d.uv=S.createBuffer();if(a.hasColors&&!d.color)d.color=S.createBuffer();var e=b.getAttributes();if(a.hasPositions){S.bindBuffer(S.ARRAY_BUFFER,d.position);S.bufferData(S.ARRAY_BUFFER,a.positionArray,S.DYNAMIC_DRAW);X.enableAttribute(e.position);S.vertexAttribPointer(e.position,3,S.FLOAT,false,0,0);}if(a.hasNormals){S.bindBuffer(S.ARRAY_BUFFER,d.normal);if(!c.isMeshPhongMaterial&&!c.isMeshStandardMaterial&&!c.isMeshNormalMaterial&&c.flatShading===true)for(var f=0,g=a.count*3;f<g;f+=9){var h=a.normalArray;var i=(h[f+0]+h[f+3]+h[f+6])/3;var j=(h[f+1]+h[f+4]+h[f+7])/3;var k=(h[f+2]+h[f+5]+h[f+8])/3;h[f+0]=i;h[f+1]=j;h[f+2]=k;h[f+3]=i;h[f+4]=j;h[f+5]=k;h[f+6]=i;h[f+7]=j;h[f+8]=k;}S.bufferData(S.ARRAY_BUFFER,a.normalArray,S.DYNAMIC_DRAW);X.enableAttribute(e.normal);S.vertexAttribPointer(e.normal,3,S.FLOAT,false,0,0);}if(a.hasUvs&&c.map){S.bindBuffer(S.ARRAY_BUFFER,d.uv);S.bufferData(S.ARRAY_BUFFER,a.uvArray,S.DYNAMIC_DRAW);X.enableAttribute(e.uv);S.vertexAttribPointer(e.uv,2,S.FLOAT,false,0,0);}if(a.hasColors&&c.vertexColors!==s){S.bindBuffer(S.ARRAY_BUFFER,d.color);S.bufferData(S.ARRAY_BUFFER,a.colorArray,S.DYNAMIC_DRAW);X.enableAttribute(e.color);S.vertexAttribPointer(e.color,3,S.FLOAT,false,0,0);}X.disableUnusedAttributes();S.drawArrays(S.TRIANGLES,0,a.count);a.count=0;};this.renderBufferDirect=function(a,b,c,d,e,f){X.setMaterial(d);var g=aK(a,b,d,e);var h=c.id+'_'+g.id+'_'+(d.wireframe===true);var i=false;if(h!==w){w=h;i=true;}if(e.morphTargetInfluences){aj.update(e,c,d,g);i=true;}var j=c.index;var k=c.attributes.position;var l=1;if(d.wireframe===true){j=ac.getWireframeAttribute(c);l=2;}var m;var n=ak;if(j!==null){m=ab.get(j);n=al;n.setIndex(m);}if(i){ay(d,g,c);if(j!==null)S.bindBuffer(S.ELEMENT_ARRAY_BUFFER,m.buffer);}var o=0;if(j!==null)o=j.count;else if(k!==undefined)o=k.count;var p=c.drawRange.start*l;var q=c.drawRange.count*l;var r=f!==null?f.start*l:0;var s=f!==null?f.count*l:Infinity;var t=Math.max(p,r);var u=Math.min(o,p+q,r+s)-1;var v=Math.max(0,u-t+1);if(v===0)return;if(e.isMesh)if(d.wireframe===true){X.setLineWidth(d.wireframeLinewidth*R());n.setMode(S.LINES);}else switch(e.drawMode){case bn:n.setMode(S.TRIANGLES);break;case bo:n.setMode(S.TRIANGLE_STRIP);break;case bp:n.setMode(S.TRIANGLE_FAN);break;}else if(e.isLine){var x=d.linewidth;if(x===undefined)x=1;X.setLineWidth(x*R());if(e.isLineSegments)n.setMode(S.LINES);else if(e.isLineLoop)n.setMode(S.LINE_LOOP);else n.setMode(S.LINE_STRIP);}else if(e.isPoints)n.setMode(S.POINTS);if(c&&c.isInstancedBufferGeometry){if(c.maxInstancedCount>0)n.renderInstances(c,t,v);}else n.render(t,v);};function ay(a,b,c,d){if(c&&c.isInstancedBufferGeometry)if(V.get('ANGLE_instanced_arrays')===null){console.error('THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');return;}if(d===undefined)d=0;X.initAttributes();var e=c.attributes;var f=b.getAttributes();var g=a.defaultAttributeValues;for(var h in f){var i=f[h];if(i>=0){var j=e[h];if(j!==undefined){var k=j.normalized;var l=j.itemSize;var m=ab.get(j);if(m===undefined)continue;var n=m.buffer;var o=m.type;var p=m.bytesPerElement;if(j.isInterleavedBufferAttribute){var q=j.data;var r=q.stride;var s=j.offset;if(q&&q.isInstancedInterleavedBuffer){X.enableAttributeAndDivisor(i,q.meshPerAttribute);if(c.maxInstancedCount===undefined)c.maxInstancedCount=q.meshPerAttribute*q.count;}else X.enableAttribute(i);S.bindBuffer(S.ARRAY_BUFFER,n);S.vertexAttribPointer(i,l,o,k,r*p,(d*r+s)*p);}else{if(j.isInstancedBufferAttribute){X.enableAttributeAndDivisor(i,j.meshPerAttribute);if(c.maxInstancedCount===undefined)c.maxInstancedCount=j.meshPerAttribute*j.count;}else X.enableAttribute(i);S.bindBuffer(S.ARRAY_BUFFER,n);S.vertexAttribPointer(i,l,o,k,0,d*l*p);}}else if(g!==undefined){var t=g[h];if(t!==undefined)switch(t.length){case 2:S.vertexAttrib2fv(i,t);break;case 3:S.vertexAttrib3fv(i,t);break;case 4:S.vertexAttrib4fv(i,t);break;default:S.vertexAttrib1fv(i,t);}}}}X.disableUnusedAttributes();}this.compile=function(a,b){l.length=0;m.length=0;a.traverse(function(a){if(a.isLight){l.push(a);if(a.castShadow)m.push(a);}});af.setup(l,m,b);a.traverse(function(b){if(b.material)if(Array.isArray(b.material))for(var c=0;c<b.material.length;c++)aJ(b.material[c],a.fog,b);else aJ(b.material,a.fog,b);});};var aA=false;var aB=null;function aC(){if(aA)return;(aq.getDevice()||window).requestAnimationFrame(aD);aA=true;}function aD(a){if(aB!==null)aB(a);(aq.getDevice()||window).requestAnimationFrame(aD);}this.animate=function(a){aB=a;aC();};this.render=function(a,b,c,d){if(!(b&&b.isCamera)){console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');return;}if(r)return;w='';v=-1;x=null;if(a.autoUpdate===true)a.updateMatrixWorld();if(b.parent===null)b.updateMatrixWorld();if(aq.enabled)b=aq.getCamera(b);N.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);J.setFromMatrix(N);l.length=0;m.length=0;o.length=0;p.length=0;M=this.localClippingEnabled;L=K.init(this.clippingPlanes,M,b);n=ah.get(a,b);n.init();aE(a,b,q.sortObjects);if(q.sortObjects===true)n.sort();if(L)K.beginShadows();ar.render(m,a,b);af.setup(l,m,b);if(L)K.endShadows();Q.frame++;Q.calls=0;Q.vertices=0;Q.faces=0;Q.points=0;if(c===undefined)c=null;this.setRenderTarget(c);ai.render(n,a,b,d);var e=n.opaque;var f=n.transparent;if(a.overrideMaterial){var g=a.overrideMaterial;if(e.length)aH(e,a,b,g);if(f.length)aH(f,a,b,g);}else{if(e.length)aH(e,a,b);if(f.length)aH(f,a,b);}an.render(o,a,b);am.render(p,a,b,z);if(c)Z.updateRenderTargetMipmap(c);X.buffers.depth.setTest(true);X.buffers.depth.setMask(true);X.buffers.color.setMask(true);X.setPolygonOffset(false);if(aq.enabled)aq.submitFrame();};function aE(a,b,c){if(!a.visible)return;var d=a.layers.test(b.layers);if(d)if(a.isLight){l.push(a);if(a.castShadow)m.push(a);}else if(a.isSprite){if(!a.frustumCulled||J.intersectsSprite(a))o.push(a);}else if(a.isLensFlare)p.push(a);else if(a.isImmediateRenderObject){if(c)O.setFromMatrixPosition(a.matrixWorld).applyMatrix4(N);n.push(a,null,a.material,O.z,null);}else if(a.isMesh||a.isLine||a.isPoints){if(a.isSkinnedMesh)a.skeleton.update();if(!a.frustumCulled||J.intersectsObject(a)){if(c)O.setFromMatrixPosition(a.matrixWorld).applyMatrix4(N);var e=ad.update(a);var f=a.material;if(Array.isArray(f)){var g=e.groups;for(var h=0,i=g.length;h<i;h++){var j=g[h];var k=f[j.materialIndex];if(k&&k.visible)n.push(a,e,k,O.z,j);}}else if(f.visible)n.push(a,e,f,O.z,null);}}var q=a.children;for(var h=0,i=q.length;h<i;h++)aE(q[h],b,c);}function aH(a,b,c,d){for(var e=0,f=a.length;e<f;e++){var g=a[e];var h=g.object;var i=g.geometry;var j=d===undefined?g.material:d;var k=g.group;if(c.isArrayCamera){y=c;var l=c.cameras;for(var m=0,n=l.length;m<n;m++){var o=l[m];if(h.layers.test(o.layers)){var p=o.bounds;var q=p.x*D;var r=p.y*E;var s=p.z*D;var t=p.w*E;X.viewport(z.set(q,r,s,t).multiplyScalar(F));aI(h,b,o,i,j,k);}}}else{y=null;aI(h,b,c,i,j,k);}}}function aI(a,b,c,d,e,f){a.onBeforeRender(q,b,c,d,e,f);a.modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,a.matrixWorld);a.normalMatrix.getNormalMatrix(a.modelViewMatrix);if(a.isImmediateRenderObject){X.setMaterial(e);var g=aK(c,b.fog,e,a);w='';ax(a,g,e);}else q.renderBufferDirect(c,b.fog,d,e,a,f);a.onAfterRender(q,b,c,d,e,f);}function aJ(a,b,c){var d=Y.get(a);var e=ag.getParameters(a,af.state,m,b,K.numPlanes,K.numIntersection,c);var f=ag.getProgramCode(a,e);var g=d.program;var h=true;if(g===undefined)a.addEventListener('dispose',au);else if(g.code!==f)aw(a);else if(e.shaderID!==undefined)return;else h=false;if(h){if(e.shaderID){var i=eZ[e.shaderID];d.shader={name:a.type,uniforms:cH.clone(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader};}else d.shader={name:a.type,uniforms:a.uniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader};a.onBeforeCompile(d.shader);g=ag.acquireProgram(a,d.shader,e,f);d.program=g;a.program=g;}var j=g.getAttributes();if(a.morphTargets){a.numSupportedMorphTargets=0;for(var k=0;k<q.maxMorphTargets;k++)if(j['morphTarget'+k]>=0)a.numSupportedMorphTargets++;}if(a.morphNormals){a.numSupportedMorphNormals=0;for(var k=0;k<q.maxMorphNormals;k++)if(j['morphNormal'+k]>=0)a.numSupportedMorphNormals++;}var l=d.shader.uniforms;if(!a.isShaderMaterial&&!a.isRawShaderMaterial||a.clipping===true){d.numClippingPlanes=K.numPlanes;d.numIntersection=K.numIntersection;l.clippingPlanes=K.uniform;}d.fog=b;d.lightsHash=af.state.hash;if(a.lights){l.ambientLightColor.value=af.state.ambient;l.directionalLights.value=af.state.directional;l.spotLights.value=af.state.spot;l.rectAreaLights.value=af.state.rectArea;l.pointLights.value=af.state.point;l.hemisphereLights.value=af.state.hemi;l.directionalShadowMap.value=af.state.directionalShadowMap;l.directionalShadowMatrix.value=af.state.directionalShadowMatrix;l.spotShadowMap.value=af.state.spotShadowMap;l.spotShadowMatrix.value=af.state.spotShadowMatrix;l.pointShadowMap.value=af.state.pointShadowMap;l.pointShadowMatrix.value=af.state.pointShadowMatrix;}var n=d.program.getUniforms(),o=cD.seqWithValue(n.seq,l);d.uniformsList=o;}function aK(a,b,c,d){C=0;var e=Y.get(c);if(L)if(M||a!==x){var f=a===x&&c.id===v;K.setState(c.clippingPlanes,c.clipIntersection,c.clipShadows,a,e,f);}if(c.needsUpdate===false)if(e.program===undefined)c.needsUpdate=true;else if(c.fog&&e.fog!==b)c.needsUpdate=true;else if(c.lights&&e.lightsHash!==af.state.hash)c.needsUpdate=true;else if(e.numClippingPlanes!==undefined&&(e.numClippingPlanes!==K.numPlanes||e.numIntersection!==K.numIntersection))c.needsUpdate=true;if(c.needsUpdate){aJ(c,b,d);c.needsUpdate=false;}var g=false;var h=false;var i=false;var j=e.program,k=j.getUniforms(),l=e.shader.uniforms;if(X.useProgram(j.program)){g=true;h=true;i=true;}if(c.id!==v){v=c.id;h=true;}if(g||a!==x){k.setValue(S,'projectionMatrix',a.projectionMatrix);if(W.logarithmicDepthBuffer)k.setValue(S,'logDepthBufFC',2.0/(Math.log(a.far+1.0)/Math.LN2));if(x!==(y||a)){x=(y||a);h=true;i=true;}if(c.isShaderMaterial||c.isMeshPhongMaterial||c.isMeshStandardMaterial||c.envMap){var m=k.map.cameraPosition;if(m!==undefined)m.setValue(S,O.setFromMatrixPosition(a.matrixWorld));}if(c.isMeshPhongMaterial||c.isMeshLambertMaterial||c.isMeshBasicMaterial||c.isMeshStandardMaterial||c.isShaderMaterial||c.skinning)k.setValue(S,'viewMatrix',a.matrixWorldInverse);}if(c.skinning){k.setOptional(S,d,'bindMatrix');k.setOptional(S,d,'bindMatrixInverse');var n=d.skeleton;if(n){var o=n.bones;if(W.floatVertexTextures){if(n.boneTexture===undefined){var p=Math.sqrt(o.length*4);p=bA.nextPowerOfTwo(Math.ceil(p));p=Math.max(p,4);var r=new Float32Array(p*p*4);r.set(n.boneMatrices);var s=new bK(r,p,p,aN,aF);n.boneMatrices=r;n.boneTexture=s;n.boneTextureSize=p;}k.setValue(S,'boneTexture',n.boneTexture);k.setValue(S,'boneTextureSize',n.boneTextureSize);}else k.setOptional(S,n,'boneMatrices');}}if(h){k.setValue(S,'toneMappingExposure',q.toneMappingExposure);k.setValue(S,'toneMappingWhitePoint',q.toneMappingWhitePoint);if(c.lights)aZ(l,i);if(b&&c.fog)aQ(l,b);if(c.isMeshBasicMaterial)aL(l,c);else if(c.isMeshLambertMaterial){aL(l,c);aR(l,c);}else if(c.isMeshPhongMaterial){aL(l,c);if(c.isMeshToonMaterial)aT(l,c);else aS(l,c);}else if(c.isMeshStandardMaterial){aL(l,c);if(c.isMeshPhysicalMaterial)aV(l,c);else aU(l,c);}else if(c.isMeshDepthMaterial){aL(l,c);aW(l,c);}else if(c.isMeshDistanceMaterial){aL(l,c);aX(l,c);}else if(c.isMeshNormalMaterial){aL(l,c);aY(l,c);}else if(c.isLineBasicMaterial){aM(l,c);if(c.isLineDashedMaterial)aO(l,c);}else if(c.isPointsMaterial)aP(l,c);else if(c.isShadowMaterial){l.color.value=c.color;l.opacity.value=c.opacity;}if(l.ltcMat!==undefined)l.ltcMat.value=cG.LTC_MAT_TEXTURE;if(l.ltcMag!==undefined)l.ltcMag.value=cG.LTC_MAG_TEXTURE;cD.upload(S,e.uniformsList,l,q);}k.setValue(S,'modelViewMatrix',d.modelViewMatrix);k.setValue(S,'normalMatrix',d.normalMatrix);k.setValue(S,'modelMatrix',d.matrixWorld);return j;}function aL(a,b){a.opacity.value=b.opacity;if(b.color)a.diffuse.value=b.color;if(b.emissive)a.emissive.value.copy(b.emissive).multiplyScalar(b.emissiveIntensity);if(b.map)a.map.value=b.map;if(b.alphaMap)a.alphaMap.value=b.alphaMap;if(b.specularMap)a.specularMap.value=b.specularMap;if(b.envMap){a.envMap.value=b.envMap;a.flipEnvMap.value=(!(b.envMap&&b.envMap.isCubeTexture))?1:-1;a.reflectivity.value=b.reflectivity;a.refractionRatio.value=b.refractionRatio;}if(b.lightMap){a.lightMap.value=b.lightMap;a.lightMapIntensity.value=b.lightMapIntensity;}if(b.aoMap){a.aoMap.value=b.aoMap;a.aoMapIntensity.value=b.aoMapIntensity;}var c;if(b.map)c=b.map;else if(b.specularMap)c=b.specularMap;else if(b.displacementMap)c=b.displacementMap;else if(b.normalMap)c=b.normalMap;else if(b.bumpMap)c=b.bumpMap;else if(b.roughnessMap)c=b.roughnessMap;else if(b.metalnessMap)c=b.metalnessMap;else if(b.alphaMap)c=b.alphaMap;else if(b.emissiveMap)c=b.emissiveMap;if(c!==undefined){if(c.isWebGLRenderTarget)c=c.texture;var d=c.offset;var e=c.repeat;a.offsetRepeat.value.set(d.x,d.y,e.x,e.y);}}function aM(a,b){a.diffuse.value=b.color;a.opacity.value=b.opacity;}function aO(a,b){a.dashSize.value=b.dashSize;a.totalSize.value=b.dashSize+b.gapSize;a.scale.value=b.scale;}function aP(a,b){a.diffuse.value=b.color;a.opacity.value=b.opacity;a.size.value=b.size*F;a.scale.value=E*0.5;a.map.value=b.map;if(b.map!==null){var c=b.map.offset;var d=b.map.repeat;a.offsetRepeat.value.set(c.x,c.y,d.x,d.y);}}function aQ(a,b){a.fogColor.value=b.color;if(b.isFog){a.fogNear.value=b.near;a.fogFar.value=b.far;}else if(b.isFogExp2)a.fogDensity.value=b.density;}function aR(a,b){if(b.emissiveMap)a.emissiveMap.value=b.emissiveMap;}function aS(a,b){a.specular.value=b.specular;a.shininess.value=Math.max(b.shininess,1e-4);if(b.emissiveMap)a.emissiveMap.value=b.emissiveMap;if(b.bumpMap){a.bumpMap.value=b.bumpMap;a.bumpScale.value=b.bumpScale;}if(b.normalMap){a.normalMap.value=b.normalMap;a.normalScale.value.copy(b.normalScale);}if(b.displacementMap){a.displacementMap.value=b.displacementMap;a.displacementScale.value=b.displacementScale;a.displacementBias.value=b.displacementBias;}}function aT(a,b){aS(a,b);if(b.gradientMap)a.gradientMap.value=b.gradientMap;}function aU(a,b){a.roughness.value=b.roughness;a.metalness.value=b.metalness;if(b.roughnessMap)a.roughnessMap.value=b.roughnessMap;if(b.metalnessMap)a.metalnessMap.value=b.metalnessMap;if(b.emissiveMap)a.emissiveMap.value=b.emissiveMap;if(b.bumpMap){a.bumpMap.value=b.bumpMap;a.bumpScale.value=b.bumpScale;}if(b.normalMap){a.normalMap.value=b.normalMap;a.normalScale.value.copy(b.normalScale);}if(b.displacementMap){a.displacementMap.value=b.displacementMap;a.displacementScale.value=b.displacementScale;a.displacementBias.value=b.displacementBias;}if(b.envMap)a.envMapIntensity.value=b.envMapIntensity;}function aV(a,b){a.clearCoat.value=b.clearCoat;a.clearCoatRoughness.value=b.clearCoatRoughness;aU(a,b);}function aW(a,b){if(b.displacementMap){a.displacementMap.value=b.displacementMap;a.displacementScale.value=b.displacementScale;a.displacementBias.value=b.displacementBias;}}function aX(a,b){if(b.displacementMap){a.displacementMap.value=b.displacementMap;a.displacementScale.value=b.displacementScale;a.displacementBias.value=b.displacementBias;}a.referencePosition.value.copy(b.referencePosition);a.nearDistance.value=b.nearDistance;a.farDistance.value=b.farDistance;}function aY(a,b){if(b.bumpMap){a.bumpMap.value=b.bumpMap;a.bumpScale.value=b.bumpScale;}if(b.normalMap){a.normalMap.value=b.normalMap;a.normalScale.value.copy(b.normalScale);}if(b.displacementMap){a.displacementMap.value=b.displacementMap;a.displacementScale.value=b.displacementScale;a.displacementBias.value=b.displacementBias;}}function aZ(a,b){a.ambientLightColor.needsUpdate=b;a.directionalLights.needsUpdate=b;a.pointLights.needsUpdate=b;a.spotLights.needsUpdate=b;a.rectAreaLights.needsUpdate=b;a.hemisphereLights.needsUpdate=b;}this.setFaceCulling=function(a,b){X.setCullFace(a);X.setFlipSided(b===i);};function bc(){var a=C;if(a>=W.maxTextures)console.warn('THREE.WebGLRenderer: Trying to use '+a+' texture units while this GPU supports only '+W.maxTextures);C+=1;return a;}this.allocTextureUnit=bc;this.setTexture2D=(function(){var a=false;return function b(b,c){if(b&&b.isWebGLRenderTarget){if(!a){console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.");a=true;}b=b.texture;}Z.setTexture2D(b,c);};}());this.setTexture=(function(){var a=false;return function b(b,c){if(!a){console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.");a=true;}Z.setTexture2D(b,c);};}());this.setTextureCube=(function(){var a=false;return function b(b,c){if(b&&b.isWebGLRenderTargetCube){if(!a){console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.");a=true;}b=b.texture;}if((b&&b.isCubeTexture)||(Array.isArray(b.image)&&b.image.length===6))Z.setTextureCube(b,c);else Z.setTextureCubeDynamic(b,c);};}());this.getRenderTarget=function(){return t;};this.setRenderTarget=function(a){t=a;if(a&&Y.get(a).__webglFramebuffer===undefined)Z.setupRenderTarget(a);var b=null;var c=false;if(a){var d=Y.get(a).__webglFramebuffer;if(a.isWebGLRenderTargetCube){b=d[a.activeCubeFace];c=true;}else b=d;z.copy(a.viewport);A.copy(a.scissor);B=a.scissorTest;}else{z.copy(G).multiplyScalar(F);A.copy(H).multiplyScalar(F);B=I;}if(u!==b){S.bindFramebuffer(S.FRAMEBUFFER,b);u=b;}X.viewport(z);X.scissor(A);X.setScissorTest(B);if(c){var e=Y.get(a.texture);S.framebufferTexture2D(S.FRAMEBUFFER,S.COLOR_ATTACHMENT0,S.TEXTURE_CUBE_MAP_POSITIVE_X+a.activeCubeFace,e.__webglTexture,a.activeMipMapLevel);}};this.readRenderTargetPixels=function(a,b,c,d,e,f){if(!(a&&a.isWebGLRenderTarget)){console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');return;}var g=Y.get(a).__webglFramebuffer;if(g){var h=false;if(g!==u){S.bindFramebuffer(S.FRAMEBUFFER,g);h=true;}try{var i=a.texture;var j=i.format;var k=i.type;if(j!==aN&&ao.convert(j)!==S.getParameter(S.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');return;}if(k!==az&&ao.convert(k)!==S.getParameter(S.IMPLEMENTATION_COLOR_READ_TYPE)&&!(k===aF&&(V.get('OES_texture_float')||V.get('WEBGL_color_buffer_float')))&&!(k===aG&&V.get('EXT_color_buffer_half_float'))){console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');return;}if(S.checkFramebufferStatus(S.FRAMEBUFFER)===S.FRAMEBUFFER_COMPLETE){if((b>=0&&b<=(a.width-d))&&(c>=0&&c<=(a.height-e)))S.readPixels(b,c,d,e,ao.convert(j),ao.convert(k),f);}else console.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');}finally{if(h)S.bindFramebuffer(S.FRAMEBUFFER,u);}}};}function gX(a,b){this.name='';this.color=new cF(a);this.density=(b!==undefined)?b:0.00025;}gX.prototype.isFogExp2=true;gX.prototype.clone=function(){return new gX(this.color.getHex(),this.density);};gX.prototype.toJSON=function(a){return{type:'FogExp2',color:this.color.getHex(),density:this.density};};function gY(a,b,c){this.name='';this.color=new cF(a);this.near=(b!==undefined)?b:1;this.far=(c!==undefined)?c:1000;}gY.prototype.isFog=true;gY.prototype.clone=function(){return new gY(this.color.getHex(),this.near,this.far);};gY.prototype.toJSON=function(a){return{type:'Fog',color:this.color.getHex(),near:this.near,far:this.far};};function gZ(){fz.call(this);this.type='Scene';this.background=null;this.fog=null;this.overrideMaterial=null;this.autoUpdate=true;}gZ.prototype=Object.assign(Object.create(fz.prototype),{constructor:gZ,copy:function(a,b){fz.prototype.copy.call(this,a,b);if(a.background!==null)this.background=a.background.clone();if(a.fog!==null)this.fog=a.fog.clone();if(a.overrideMaterial!==null)this.overrideMaterial=a.overrideMaterial.clone();this.autoUpdate=a.autoUpdate;this.matrixAutoUpdate=a.matrixAutoUpdate;return this;},toJSON:function(a){var b=fz.prototype.toJSON.call(this,a);if(this.background!==null)b.object.background=this.background.toJSON(a);if(this.fog!==null)b.object.fog=this.fog.toJSON();return b;}});function hi(a,b,c,d,e){fz.call(this);this.lensFlares=[];this.positionScreen=new bI();this.customUpdateCallback=undefined;if(a!==undefined)this.add(a,b,c,d,e);}hi.prototype=Object.assign(Object.create(fz.prototype),{constructor:hi,isLensFlare:true,copy:function(a){fz.prototype.copy.call(this,a);this.positionScreen.copy(a.positionScreen);this.customUpdateCallback=a.customUpdateCallback;for(var b=0,c=a.lensFlares.length;b<c;b++)this.lensFlares.push(a.lensFlares[b]);return this;},add:function(a,b,c,d,e,f){if(b===undefined)b=-1;if(c===undefined)c=0;if(f===undefined)f=1;if(e===undefined)e=new cF(0xffffff);if(d===undefined)d=w;c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:0,opacity:f,color:e,blending:d});},updateLensFlares:function(){var a,b=this.lensFlares.length;var c;var d=-this.positionScreen.x*2;var e=-this.positionScreen.y*2;for(a=0;a<b;a++){c=this.lensFlares[a];c.x=this.positionScreen.x+d*c.distance;c.y=this.positionScreen.y+e*c.distance;c.wantedRotation=c.x*Math.PI*0.25;c.rotation+=(c.wantedRotation-c.rotation)*0.25;}}});function hj(a){fl.call(this);this.type='SpriteMaterial';this.color=new cF(0xffffff);this.map=null;this.rotation=0;this.fog=false;this.lights=false;this.setValues(a);}hj.prototype=Object.create(fl.prototype);hj.prototype.constructor=hj;hj.prototype.isSpriteMaterial=true;hj.prototype.copy=function(a){fl.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.rotation=a.rotation;return this;};function hk(a){fz.call(this);this.type='Sprite';this.material=(a!==undefined)?a:new hj();}hk.prototype=Object.assign(Object.create(fz.prototype),{constructor:hk,isSprite:true,raycast:(function(){var a=new bI();var b=new bI();var c=new bI();return function d(d,e){b.setFromMatrixPosition(this.matrixWorld);d.ray.closestPointToPoint(b,a);c.setFromMatrixScale(this.matrixWorld);var f=c.x*c.y/4;if(b.distanceToSquared(a)>f)return;var g=d.ray.origin.distanceTo(a);if(g<d.near||g>d.far)return;e.push({distance:g,point:a.clone(),face:null,object:this});};}()),clone:function(){return new this.constructor(this.material).copy(this);}});function hl(){fz.call(this);this.type='LOD';Object.defineProperties(this,{levels:{enumerable:true,value:[]}});}hl.prototype=Object.assign(Object.create(fz.prototype),{constructor:hl,copy:function(a){fz.prototype.copy.call(this,a,false);var b=a.levels;for(var c=0,d=b.length;c<d;c++){var e=b[c];this.addLevel(e.object.clone(),e.distance);}return this;},addLevel:function(a,b){if(b===undefined)b=0;b=Math.abs(b);var c=this.levels;for(var d=0;d<c.length;d++)if(b<c[d].distance)break;c.splice(d,0,{distance:b,object:a});this.add(a);},getObjectForDistance:function(a){var b=this.levels;for(var c=1,d=b.length;c<d;c++)if(a<b[c].distance)break;return b[c-1].object;},raycast:(function(){var a=new bI();return function b(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=b.ray.origin.distanceTo(a);this.getObjectForDistance(d).raycast(b,c);};}()),update:function(){var a=new bI();var b=new bI();return function c(c){var d=this.levels;if(d.length>1){a.setFromMatrixPosition(c.matrixWorld);b.setFromMatrixPosition(this.matrixWorld);var e=a.distanceTo(b);d[0].object.visible=true;for(var f=1,g=d.length;f<g;f++)if(e>=d[f].distance){d[f-1].object.visible=false;d[f].object.visible=true;}else break;for(;f<g;f++)d[f].object.visible=false;}};}(),toJSON:function(a){var b=fz.prototype.toJSON.call(this,a);b.object.levels=[];var c=this.levels;for(var d=0,e=c.length;d<e;d++){var f=c[d];b.object.levels.push({object:f.object.uuid,distance:f.distance});}return b;}});function hm(a,b){a=a||[];this.bones=a.slice(0);this.boneMatrices=new Float32Array(this.bones.length*16);if(b===undefined)this.calculateInverses();else if(this.bones.length===b.length)this.boneInverses=b.slice(0);else{console.warn('THREE.Skeleton boneInverses is the wrong length.');this.boneInverses=[];for(var c=0,d=this.bones.length;c<d;c++)this.boneInverses.push(new bJ());}}Object.assign(hm.prototype,{calculateInverses:function(){this.boneInverses=[];for(var a=0,b=this.bones.length;a<b;a++){var c=new bJ();if(this.bones[a])c.getInverse(this.bones[a].matrixWorld);this.boneInverses.push(c);}},pose:function(){var a,b,c;for(b=0,c=this.bones.length;b<c;b++){a=this.bones[b];if(a)a.matrixWorld.getInverse(this.boneInverses[b]);}for(b=0,c=this.bones.length;b<c;b++){a=this.bones[b];if(a){if(a.parent&&a.parent.isBone){a.matrix.getInverse(a.parent.matrixWorld);a.matrix.multiply(a.matrixWorld);}else a.matrix.copy(a.matrixWorld);a.matrix.decompose(a.position,a.quaternion,a.scale);}}},update:(function(){var a=new bJ();var b=new bJ();return function c(){var c=this.bones;var d=this.boneInverses;var e=this.boneMatrices;var f=this.boneTexture;for(var g=0,h=c.length;g<h;g++){var i=c[g]?c[g].matrixWorld:b;a.multiplyMatrices(i,d[g]);a.toArray(e,g*16);}if(f!==undefined)f.needsUpdate=true;};})(),clone:function(){return new hm(this.bones,this.boneInverses);}});function hn(){fz.call(this);this.type='Bone';}hn.prototype=Object.assign(Object.create(fz.prototype),{constructor:hn,isBone:true});function ho(a,b){gj.call(this,a,b);this.type='SkinnedMesh';this.bindMode='attached';this.bindMatrix=new bJ();this.bindMatrixInverse=new bJ();var c=this.initBones();var d=new hm(c);this.bind(d,this.matrixWorld);this.normalizeSkinWeights();}ho.prototype=Object.assign(Object.create(gj.prototype),{constructor:ho,isSkinnedMesh:true,initBones:function(){var a=[],b,c;var d,e;if(this.geometry&&this.geometry.bones!==undefined){for(d=0,e=this.geometry.bones.length;d<e;d++){c=this.geometry.bones[d];b=new hn();a.push(b);b.name=c.name;b.position.fromArray(c.pos);b.quaternion.fromArray(c.rotq);if(c.scl!==undefined)b.scale.fromArray(c.scl);}for(d=0,e=this.geometry.bones.length;d<e;d++){c=this.geometry.bones[d];if((c.parent!==-1)&&(c.parent!==null)&&(a[c.parent]!==undefined))a[c.parent].add(a[d]);else this.add(a[d]);}}this.updateMatrixWorld(true);return a;},bind:function(a,b){this.skeleton=a;if(b===undefined){this.updateMatrixWorld(true);this.skeleton.calculateInverses();b=this.matrixWorld;}this.bindMatrix.copy(b);this.bindMatrixInverse.getInverse(b);},pose:function(){this.skeleton.pose();},normalizeSkinWeights:function(){var a,b;if(this.geometry&&this.geometry.isGeometry)for(b=0;b<this.geometry.skinWeights.length;b++){var c=this.geometry.skinWeights[b];a=1.0/c.lengthManhattan();if(a!==Infinity)c.multiplyScalar(a);else c.set(1,0,0,0);}else if(this.geometry&&this.geometry.isBufferGeometry){var d=new bE();var e=this.geometry.attributes.skinWeight;for(b=0;b<e.count;b++){d.x=e.getX(b);d.y=e.getY(b);d.z=e.getZ(b);d.w=e.getW(b);a=1.0/d.lengthManhattan();if(a!==Infinity)d.multiplyScalar(a);else d.set(1,0,0,0);e.setXYZW(b,d.x,d.y,d.z,d.w);}}},updateMatrixWorld:function(a){gj.prototype.updateMatrixWorld.call(this,a);if(this.bindMode==='attached')this.bindMatrixInverse.getInverse(this.matrixWorld);else if(this.bindMode==='detached')this.bindMatrixInverse.getInverse(this.bindMatrix);else console.warn('THREE.SkinnedMesh: Unrecognized bindMode: '+this.bindMode);},clone:function(){return new this.constructor(this.geometry,this.material).copy(this);}});function hp(a){fl.call(this);this.type='LineBasicMaterial';this.color=new cF(0xffffff);this.linewidth=1;this.linecap='round';this.linejoin='round';this.lights=false;this.setValues(a);}hp.prototype=Object.create(fl.prototype);hp.prototype.constructor=hp;hp.prototype.isLineBasicMaterial=true;hp.prototype.copy=function(a){fl.prototype.copy.call(this,a);this.color.copy(a.color);this.linewidth=a.linewidth;this.linecap=a.linecap;this.linejoin=a.linejoin;return this;};function hq(a,b,c){if(c===1){console.warn('THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.');return new hr(a,b);}fz.call(this);this.type='Line';this.geometry=a!==undefined?a:new fT();this.material=b!==undefined?b:new hp({color:Math.random()*0xffffff});}hq.prototype=Object.assign(Object.create(fz.prototype),{constructor:hq,isLine:true,raycast:(function(){var a=new bJ();var b=new fZ();var c=new fq();return function d(d,e){var f=d.linePrecision;var g=f*f;var h=this.geometry;var i=this.matrixWorld;if(h.boundingSphere===null)h.computeBoundingSphere();c.copy(h.boundingSphere);c.applyMatrix4(i);if(d.ray.intersectsSphere(c)===false)return;a.getInverse(i);b.copy(d.ray).applyMatrix4(a);var j=new bI();var k=new bI();var l=new bI();var m=new bI();var n=(this&&this.isLineSegments)?2:1;if(h.isBufferGeometry){var o=h.index;var p=h.attributes;var q=p.position.array;if(o!==null){var r=o.array;for(var s=0,t=r.length-1;s<t;s+=n){var u=r[s];var v=r[s+1];j.fromArray(q,u*3);k.fromArray(q,v*3);var w=b.distanceSqToSegment(j,k,m,l);if(w>g)continue;m.applyMatrix4(this.matrixWorld);var x=d.ray.origin.distanceTo(m);if(x<d.near||x>d.far)continue;e.push({distance:x,point:l.clone().applyMatrix4(this.matrixWorld),index:s,face:null,faceIndex:null,object:this});}}else for(var s=0,t=q.length/3-1;s<t;s+=n){j.fromArray(q,3*s);k.fromArray(q,3*s+3);var w=b.distanceSqToSegment(j,k,m,l);if(w>g)continue;m.applyMatrix4(this.matrixWorld);var x=d.ray.origin.distanceTo(m);if(x<d.near||x>d.far)continue;e.push({distance:x,point:l.clone().applyMatrix4(this.matrixWorld),index:s,face:null,faceIndex:null,object:this});}}else if(h.isGeometry){var y=h.vertices;var z=y.length;for(var s=0;s<z-1;s+=n){var w=b.distanceSqToSegment(y[s],y[s+1],m,l);if(w>g)continue;m.applyMatrix4(this.matrixWorld);var x=d.ray.origin.distanceTo(m);if(x<d.near||x>d.far)continue;e.push({distance:x,point:l.clone().applyMatrix4(this.matrixWorld),index:s,face:null,faceIndex:null,object:this});}}};}()),clone:function(){return new this.constructor(this.geometry,this.material).copy(this);}});function hr(a,b){hq.call(this,a,b);this.type='LineSegments';}hr.prototype=Object.assign(Object.create(hq.prototype),{constructor:hr,isLineSegments:true});function hs(a,b){hq.call(this,a,b);this.type='LineLoop';}hs.prototype=Object.assign(Object.create(hq.prototype),{constructor:hs,isLineLoop:true});function ht(a){fl.call(this);this.type='PointsMaterial';this.color=new cF(0xffffff);this.map=null;this.size=1;this.sizeAttenuation=true;this.lights=false;this.setValues(a);}ht.prototype=Object.create(fl.prototype);ht.prototype.constructor=ht;ht.prototype.isPointsMaterial=true;ht.prototype.copy=function(a){fl.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.size=a.size;this.sizeAttenuation=a.sizeAttenuation;return this;};function hu(a,b){fz.call(this);this.type='Points';this.geometry=a!==undefined?a:new fT();this.material=b!==undefined?b:new ht({color:Math.random()*0xffffff});}hu.prototype=Object.assign(Object.create(fz.prototype),{constructor:hu,isPoints:true,raycast:(function(){var a=new bJ();var b=new fZ();var c=new fq();return function d(d,e){var f=this;var g=this.geometry;var h=this.matrixWorld;var i=d.params.Points.threshold;if(g.boundingSphere===null)g.computeBoundingSphere();c.copy(g.boundingSphere);c.applyMatrix4(h);c.radius+=i;if(d.ray.intersectsSphere(c)===false)return;a.getInverse(h);b.copy(d.ray).applyMatrix4(a);var j=i/((this.scale.x+this.scale.y+this.scale.z)/3);var k=j*j;var l=new bI();function m(a,c){var g=b.distanceSqToPoint(a);if(g<k){var i=b.closestPointToPoint(a);i.applyMatrix4(h);var j=d.ray.origin.distanceTo(i);if(j<d.near||j>d.far)return;e.push({distance:j,distanceToRay:Math.sqrt(g),point:i.clone(),index:c,face:null,object:f});}}if(g.isBufferGeometry){var n=g.index;var o=g.attributes;var p=o.position.array;if(n!==null){var q=n.array;for(var r=0,s=q.length;r<s;r++){var t=q[r];l.fromArray(p,t*3);m(l,t);}}else for(var r=0,u=p.length/3;r<u;r++){l.fromArray(p,r*3);m(l,r);}}else{var v=g.vertices;for(var r=0,u=v.length;r<u;r++)m(v[r],r);}};}()),clone:function(){return new this.constructor(this.geometry,this.material).copy(this);}});function hv(){fz.call(this);this.type='Group';}hv.prototype=Object.assign(Object.create(fz.prototype),{constructor:hv});function hw(a,b,c,d,e,f,g,h,i){bD.call(this,a,b,c,d,e,f,g,h,i);this.generateMipmaps=false;var j=this;function k(){requestAnimationFrame(k);if(a.readyState>=a.HAVE_CURRENT_DATA)j.needsUpdate=true;}k();}hw.prototype=Object.create(bD.prototype);hw.prototype.constructor=hw;function hx(a,b,c,d,e,f,g,h,i,j,k,l){bD.call(this,null,f,g,h,i,j,d,e,k,l);this.image={width:b,height:c};this.mipmaps=a;this.flipY=false;this.generateMipmaps=false;}hx.prototype=Object.create(bD.prototype);hx.prototype.constructor=hx;hx.prototype.isCompressedTexture=true;function hy(a,b,c,d,e,f,g,h,i,j){j=j!==undefined?j:aR;if(j!==aR&&j!==aS)throw new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');if(c===undefined&&j===aR)c=aC;if(c===undefined&&j===aS)c=aK;bD.call(this,null,d,e,f,g,h,j,c,i);this.image={width:a,height:b};this.magFilter=g!==undefined?g:at;this.minFilter=h!==undefined?h:at;this.flipY=false;this.generateMipmaps=false;}hy.prototype=Object.create(bD.prototype);hy.prototype.constructor=hy;hy.prototype.isDepthTexture=true;function hz(a){fT.call(this);this.type='WireframeGeometry';var b=[];var c,d,e,f,g;var h=[0,0],i={},j,k,l;var m,n=['a','b','c'];var o;if(a&&a.isGeometry){var p=a.faces;for(c=0,e=p.length;c<e;c++){var q=p[c];for(d=0;d<3;d++){k=q[n[d]];l=q[n[(d+1)%3]];h[0]=Math.min(k,l);h[1]=Math.max(k,l);m=h[0]+','+h[1];if(i[m]===undefined)i[m]={index1:h[0],index2:h[1]};}}for(m in i){j=i[m];o=a.vertices[j.index1];b.push(o.x,o.y,o.z);o=a.vertices[j.index2];b.push(o.x,o.y,o.z);}}else if(a&&a.isBufferGeometry){var r,s,t;var u,v,w;var x,y;o=new bI();if(a.index!==null){r=a.attributes.position;s=a.index;t=a.groups;if(t.length===0)t=[{start:0,count:s.count,materialIndex:0}];for(f=0,g=t.length;f<g;++f){u=t[f];v=u.start;w=u.count;for(c=v,e=(v+w);c<e;c+=3)for(d=0;d<3;d++){k=s.getX(c+d);l=s.getX(c+(d+1)%3);h[0]=Math.min(k,l);h[1]=Math.max(k,l);m=h[0]+','+h[1];if(i[m]===undefined)i[m]={index1:h[0],index2:h[1]};}}for(m in i){j=i[m];o.fromBufferAttribute(r,j.index1);b.push(o.x,o.y,o.z);o.fromBufferAttribute(r,j.index2);b.push(o.x,o.y,o.z);}}else{r=a.attributes.position;for(c=0,e=(r.count/3);c<e;c++)for(d=0;d<3;d++){x=3*c+d;o.fromBufferAttribute(r,x);b.push(o.x,o.y,o.z);y=3*c+((d+1)%3);o.fromBufferAttribute(r,y);b.push(o.x,o.y,o.z);}}}this.addAttribute('position',new fP(b,3));}hz.prototype=Object.create(fT.prototype);hz.prototype.constructor=hz;function hA(a,b,c){fG.call(this);this.type='ParametricGeometry';this.parameters={func:a,slices:b,stacks:c};this.fromBufferGeometry(new hB(a,b,c));this.mergeVertices();}hA.prototype=Object.create(fG.prototype);hA.prototype.constructor=hA;function hB(a,b,c){fT.call(this);this.type='ParametricBufferGeometry';this.parameters={func:a,slices:b,stacks:c};var d=[];var e=[];var f=[];var g=[];var h=0.00001;var i=new bI();var j=new bI(),k=new bI();var l=new bI(),m=new bI();var n,o;var p=b+1;for(n=0;n<=c;n++){var q=n/c;for(o=0;o<=b;o++){var r=o/b;j=a(r,q,j);e.push(j.x,j.y,j.z);if(r-h>=0){k=a(r-h,q,k);l.subVectors(j,k);}else{k=a(r+h,q,k);l.subVectors(k,j);}if(q-h>=0){k=a(r,q-h,k);m.subVectors(j,k);}else{k=a(r,q+h,k);m.subVectors(k,j);}i.crossVectors(l,m).normalize();f.push(i.x,i.y,i.z);g.push(r,q);}}for(n=0;n<c;n++)for(o=0;o<b;o++){var s=n*p+o;var t=n*p+o+1;var u=(n+1)*p+o+1;var v=(n+1)*p+o;d.push(s,t,v);d.push(t,u,v);}this.setIndex(d);this.addAttribute('position',new fP(e,3));this.addAttribute('normal',new fP(f,3));this.addAttribute('uv',new fP(g,2));}hB.prototype=Object.create(fT.prototype);hB.prototype.constructor=hB;function hC(a,b,c,d){fG.call(this);this.type='PolyhedronGeometry';this.parameters={vertices:a,indices:b,radius:c,detail:d};this.fromBufferGeometry(new hD(a,b,c,d));this.mergeVertices();}hC.prototype=Object.create(fG.prototype);hC.prototype.constructor=hC;function hD(a,b,c,d){fT.call(this);this.type='PolyhedronBufferGeometry';this.parameters={vertices:a,indices:b,radius:c,detail:d};c=c||1;d=d||0;var e=[];var f=[];g(d);i(c);j();this.addAttribute('position',new fP(e,3));this.addAttribute('normal',new fP(e.slice(),3));this.addAttribute('uv',new fP(f,2));if(d===0)this.computeVertexNormals();else this.normalizeNormals();function g(a){var c=new bI();var d=new bI();var e=new bI();for(var f=0;f<b.length;f+=3){m(b[f+0],c);m(b[f+1],d);m(b[f+2],e);h(c,d,e,a);}}function h(a,b,c,d){var e=Math.pow(2,d);var f=[];var g,h;for(g=0;g<=e;g++){f[g]=[];var i=a.clone().lerp(c,g/e);var j=b.clone().lerp(c,g/e);var k=e-g;for(h=0;h<=k;h++)if(h===0&&g===e)f[g][h]=i;else f[g][h]=i.clone().lerp(j,h/k);}for(g=0;g<e;g++)for(h=0;h<2*(e-g)-1;h++){var m=Math.floor(h/2);if(h%2===0){l(f[g][m+1]);l(f[g+1][m]);l(f[g][m]);}else{l(f[g][m+1]);l(f[g+1][m+1]);l(f[g+1][m]);}}}function i(a){var b=new bI();for(var c=0;c<e.length;c+=3){b.x=e[c+0];b.y=e[c+1];b.z=e[c+2];b.normalize().multiplyScalar(a);e[c+0]=b.x;e[c+1]=b.y;e[c+2]=b.z;}}function j(){var a=new bI();for(var b=0;b<e.length;b+=3){a.x=e[b+0];a.y=e[b+1];a.z=e[b+2];var c=p(a)/2/Math.PI+0.5;var d=q(a)/Math.PI+0.5;f.push(c,1-d);}n();k();}function k(){for(var a=0;a<f.length;a+=6){var b=f[a+0];var c=f[a+2];var d=f[a+4];var e=Math.max(b,c,d);var g=Math.min(b,c,d);if(e>0.9&&g<0.1){if(b<0.2)f[a+0]+=1;if(c<0.2)f[a+2]+=1;if(d<0.2)f[a+4]+=1;}}}function l(a){e.push(a.x,a.y,a.z);}function m(b,c){var d=b*3;c.x=a[d+0];c.y=a[d+1];c.z=a[d+2];}function n(){var a=new bI();var b=new bI();var c=new bI();var d=new bI();var g=new bB();var h=new bB();var i=new bB();for(var j=0,k=0;j<e.length;j+=9,k+=6){a.set(e[j+0],e[j+1],e[j+2]);b.set(e[j+3],e[j+4],e[j+5]);c.set(e[j+6],e[j+7],e[j+8]);g.set(f[k+0],f[k+1]);h.set(f[k+2],f[k+3]);i.set(f[k+4],f[k+5]);d.copy(a).add(b).add(c).divideScalar(3);var l=p(d);o(g,k+0,a,l);o(h,k+2,b,l);o(i,k+4,c,l);}}function o(a,b,c,d){if((d<0)&&(a.x===1))f[b]=a.x-1;if((c.x===0)&&(c.z===0))f[b]=d/2/Math.PI+0.5;}function p(a){return Math.atan2(a.z,-a.x);}function q(a){return Math.atan2(-a.y,Math.sqrt((a.x*a.x)+(a.z*a.z)));}}hD.prototype=Object.create(fT.prototype);hD.prototype.constructor=hD;function hE(a,b){fG.call(this);this.type='TetrahedronGeometry';this.parameters={radius:a,detail:b};this.fromBufferGeometry(new hF(a,b));this.mergeVertices();}hE.prototype=Object.create(fG.prototype);hE.prototype.constructor=hE;function hF(a,b){var c=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1];var d=[2,1,0,0,3,2,1,3,0,2,3,1];hD.call(this,c,d,a,b);this.type='TetrahedronBufferGeometry';this.parameters={radius:a,detail:b};}hF.prototype=Object.create(hD.prototype);hF.prototype.constructor=hF;function hG(a,b){fG.call(this);this.type='OctahedronGeometry';this.parameters={radius:a,detail:b};this.fromBufferGeometry(new hH(a,b));this.mergeVertices();}hG.prototype=Object.create(fG.prototype);hG.prototype.constructor=hG;function hH(a,b){var c=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1];var d=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];hD.call(this,c,d,a,b);this.type='OctahedronBufferGeometry';this.parameters={radius:a,detail:b};}hH.prototype=Object.create(hD.prototype);hH.prototype.constructor=hH;function hI(a,b){fG.call(this);this.type='IcosahedronGeometry';this.parameters={radius:a,detail:b};this.fromBufferGeometry(new hJ(a,b));this.mergeVertices();}hI.prototype=Object.create(fG.prototype);hI.prototype.constructor=hI;function hJ(a,b){var c=(1+Math.sqrt(5))/2;var d=[-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1];var e=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];hD.call(this,d,e,a,b);this.type='IcosahedronBufferGeometry';this.parameters={radius:a,detail:b};}hJ.prototype=Object.create(hD.prototype);hJ.prototype.constructor=hJ;function hK(a,b){fG.call(this);this.type='DodecahedronGeometry';this.parameters={radius:a,detail:b};this.fromBufferGeometry(new hL(a,b));this.mergeVertices();}hK.prototype=Object.create(fG.prototype);hK.prototype.constructor=hK;function hL(a,b){var c=(1+Math.sqrt(5))/2;var d=1/c;var e=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-d,-c,0,-d,c,0,d,-c,0,d,c,-d,-c,0,-d,c,0,d,-c,0,d,c,0,-c,0,-d,c,0,-d,-c,0,d,c,0,d];var f=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];hD.call(this,e,f,a,b);this.type='DodecahedronBufferGeometry';this.parameters={radius:a,detail:b};}hL.prototype=Object.create(hD.prototype);hL.prototype.constructor=hL;function hM(a,b,c,d,e,f){fG.call(this);this.type='TubeGeometry';this.parameters={path:a,tubularSegments:b,radius:c,radialSegments:d,closed:e};if(f!==undefined)console.warn('THREE.TubeGeometry: taper has been removed.');var g=new hN(a,b,c,d,e);this.tangents=g.tangents;this.normals=g.normals;this.binormals=g.binormals;this.fromBufferGeometry(g);this.mergeVertices();}hM.prototype=Object.create(fG.prototype);hM.prototype.constructor=hM;function hN(a,b,c,d,e){fT.call(this);this.type='TubeBufferGeometry';this.parameters={path:a,tubularSegments:b,radius:c,radialSegments:d,closed:e};b=b||64;c=c||1;d=d||8;e=e||false;var f=a.computeFrenetFrames(b,e);this.tangents=f.tangents;this.normals=f.normals;this.binormals=f.binormals;var g=new bI();var h=new bI();var i=new bB();var j,k;var l=[];var m=[];var n=[];var o=[];p();this.setIndex(o);this.addAttribute('position',new fP(l,3));this.addAttribute('normal',new fP(m,3));this.addAttribute('uv',new fP(n,2));function p(){for(j=0;j<b;j++)q(j);q((e===false)?b:0);s();r();}function q(e){var i=a.getPointAt(e/b);var j=f.normals[e];var n=f.binormals[e];for(k=0;k<=d;k++){var o=k/d*Math.PI*2;var p=Math.sin(o);var q=-Math.cos(o);h.x=(q*j.x+p*n.x);h.y=(q*j.y+p*n.y);h.z=(q*j.z+p*n.z);h.normalize();m.push(h.x,h.y,h.z);g.x=i.x+c*h.x;g.y=i.y+c*h.y;g.z=i.z+c*h.z;l.push(g.x,g.y,g.z);}}function r(){for(k=1;k<=b;k++)for(j=1;j<=d;j++){var a=(d+1)*(k-1)+(j-1);var c=(d+1)*k+(j-1);var e=(d+1)*k+j;var f=(d+1)*(k-1)+j;o.push(a,c,f);o.push(c,e,f);}}function s(){for(j=0;j<=b;j++)for(k=0;k<=d;k++){i.x=j/b;i.y=k/d;n.push(i.x,i.y);}}}hN.prototype=Object.create(fT.prototype);hN.prototype.constructor=hN;function hO(a,b,c,d,e,f,g){fG.call(this);this.type='TorusKnotGeometry';this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f};if(g!==undefined)console.warn('THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.');this.fromBufferGeometry(new hP(a,b,c,d,e,f));this.mergeVertices();}hO.prototype=Object.create(fG.prototype);hO.prototype.constructor=hO;function hP(a,b,c,d,e,f){fT.call(this);this.type='TorusKnotBufferGeometry';this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f};a=a||100;b=b||40;c=Math.floor(c)||64;d=Math.floor(d)||8;e=e||2;f=f||3;var g=[];var h=[];var i=[];var j=[];var k,l;var m=new bI();var n=new bI();var o=new bI();var p=new bI();var q=new bI();var r=new bI();var s=new bI();for(k=0;k<=c;++k){var t=k/c*e*Math.PI*2;B(t,e,f,a,o);B(t+0.01,e,f,a,p);r.subVectors(p,o);s.addVectors(p,o);q.crossVectors(r,s);s.crossVectors(q,r);q.normalize();s.normalize();for(l=0;l<=d;++l){var u=l/d*Math.PI*2;var v=-b*Math.cos(u);var w=b*Math.sin(u);m.x=o.x+(v*s.x+w*q.x);m.y=o.y+(v*s.y+w*q.y);m.z=o.z+(v*s.z+w*q.z);h.push(m.x,m.y,m.z);n.subVectors(m,o).normalize();i.push(n.x,n.y,n.z);j.push(k/c);j.push(l/d);}}for(l=1;l<=c;l++)for(k=1;k<=d;k++){var x=(d+1)*(l-1)+(k-1);var y=(d+1)*l+(k-1);var z=(d+1)*l+k;var A=(d+1)*(l-1)+k;g.push(x,y,A);g.push(y,z,A);}this.setIndex(g);this.addAttribute('position',new fP(h,3));this.addAttribute('normal',new fP(i,3));this.addAttribute('uv',new fP(j,2));function B(a,b,c,d,e){var f=Math.cos(a);var g=Math.sin(a);var h=c/b*a;var i=Math.cos(h);e.x=d*(2+i)*0.5*f;e.y=d*(2+i)*g*0.5;e.z=d*Math.sin(h)*0.5;}}hP.prototype=Object.create(fT.prototype);hP.prototype.constructor=hP;function hQ(a,b,c,d,e){fG.call(this);this.type='TorusGeometry';this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};this.fromBufferGeometry(new hR(a,b,c,d,e));this.mergeVertices();}hQ.prototype=Object.create(fG.prototype);hQ.prototype.constructor=hQ;function hR(a,b,c,d,e){fT.call(this);this.type='TorusBufferGeometry';this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};a=a||100;b=b||40;c=Math.floor(c)||8;d=Math.floor(d)||6;e=e||Math.PI*2;var f=[];var g=[];var h=[];var i=[];var j=new bI();var k=new bI();var l=new bI();var m,n;for(m=0;m<=c;m++)for(n=0;n<=d;n++){var o=n/d*e;var p=m/c*Math.PI*2;k.x=(a+b*Math.cos(p))*Math.cos(o);k.y=(a+b*Math.cos(p))*Math.sin(o);k.z=b*Math.sin(p);g.push(k.x,k.y,k.z);j.x=a*Math.cos(o);j.y=a*Math.sin(o);l.subVectors(k,j).normalize();h.push(l.x,l.y,l.z);i.push(n/d);i.push(m/c);}for(m=1;m<=c;m++)for(n=1;n<=d;n++){var q=(d+1)*m+n-1;var r=(d+1)*(m-1)+n-1;var s=(d+1)*(m-1)+n;var t=(d+1)*m+n;f.push(q,r,t);f.push(r,s,t);}this.setIndex(f);this.addAttribute('position',new fP(g,3));this.addAttribute('normal',new fP(h,3));this.addAttribute('uv',new fP(i,2));}hR.prototype=Object.create(fT.prototype);hR.prototype.constructor=hR;var hS={area:function(a){var b=a.length;var c=0.0;for(var d=b-1,e=0;e<b;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;return c*0.5;},triangulate:(function(){function a(a,b,c,d,e,f){var g;var h,i,j,k;var l,m,n,o;h=a[f[b]].x;i=a[f[b]].y;j=a[f[c]].x;k=a[f[c]].y;l=a[f[d]].x;m=a[f[d]].y;if((j-h)*(m-i)-(k-i)*(l-h)<=0)return false;var p,q,r,s,t,u;var v,w,x,y,z,A;var B,C,D;p=l-j;q=m-k;r=h-l;s=i-m;t=j-h;u=k-i;for(g=0;g<e;g++){n=a[f[g]].x;o=a[f[g]].y;if(((n===h)&&(o===i))||((n===j)&&(o===k))||((n===l)&&(o===m)))continue;v=n-h;w=o-i;x=n-j;y=o-k;z=n-l;A=o-m;D=p*y-q*x;B=t*w-u*v;C=r*A-s*z;if((D>=-Number.EPSILON)&&(C>=-Number.EPSILON)&&(B>=-Number.EPSILON))return false;}return true;}return function b(b,c){var d=b.length;if(d<3)return null;var e=[],f=[],g=[];var h,i,j;if(hS.area(b)>0.0)for(i=0;i<d;i++)f[i]=i;else for(i=0;i<d;i++)f[i]=(d-1)-i;var k=d;var l=2*k;for(i=k-1;k>2;){if((l--)<=0){console.warn('THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()');if(c)return g;return e;}h=i;if(k<=h)h=0;i=h+1;if(k<=i)i=0;j=i+1;if(k<=j)j=0;if(a(b,h,i,j,k,f)){var m,n,o,p,q;m=f[h];n=f[i];o=f[j];e.push([b[m],b[n],b[o]]);g.push([f[h],f[i],f[j]]);for(p=i,q=i+1;q<k;p++,q++)f[p]=f[q];k--;l=2*k;}}if(c)return g;return e;};})(),triangulateShape:function(a,b){function c(a){var b=a.length;if(b>2&&a[b-1].equals(a[0]))a.pop();}c(a);b.forEach(c);function d(a,b,c){if(a.x!==b.x)if(a.x<b.x)return((a.x<=c.x)&&(c.x<=b.x));else return((b.x<=c.x)&&(c.x<=a.x));else if(a.y<b.y)return((a.y<=c.y)&&(c.y<=b.y));else return((b.y<=c.y)&&(c.y<=a.y));}function e(a,b,c,e,f){var g=b.x-a.x,h=b.y-a.y;var i=e.x-c.x,j=e.y-c.y;var k=a.x-c.x;var l=a.y-c.y;var m=h*i-g*j;var n=h*k-g*l;if(Math.abs(m)>Number.EPSILON){var o;if(m>0){if((n<0)||(n>m))return [];o=j*k-i*l;if((o<0)||(o>m))return [];}else{if((n>0)||(n<m))return [];o=j*k-i*l;if((o>0)||(o<m))return [];}if(o===0){if(f&&((n===0)||(n===m)))return [];return [a];}if(o===m){if(f&&((n===0)||(n===m)))return [];return [b];}if(n===0)return [c];if(n===m)return [e];var p=o/m;return [{x:a.x+p*g,y:a.y+p*h}];}else{if((n!==0)||(j*k!==i*l))return [];var q=((g===0)&&(h===0));var r=((i===0)&&(j===0));if(q&&r){if((a.x!==c.x)||(a.y!==c.y))return [];return [a];}if(q){if(!d(c,e,a))return [];return [a];}if(r){if(!d(a,b,c))return [];return [c];}var s,t,u,v;var w,x,y,z;if(g!==0){if(a.x<b.x){s=a;u=a.x;t=b;v=b.x;}else{s=b;u=b.x;t=a;v=a.x;}if(c.x<e.x){w=c;y=c.x;x=e;z=e.x;}else{w=e;y=e.x;x=c;z=c.x;}}else{if(a.y<b.y){s=a;u=a.y;t=b;v=b.y;}else{s=b;u=b.y;t=a;v=a.y;}if(c.y<e.y){w=c;y=c.y;x=e;z=e.y;}else{w=e;y=e.y;x=c;z=c.y;}}if(u<=y){if(v<y)return [];if(v===y){if(f)return [];return [w];}if(v<=z)return [w,t];return [w,x];}else{if(u>z)return [];if(u===z){if(f)return [];return [s];}if(v<=z)return [s,t];return [s,x];}}}function f(a,b,c,d){var e=b.x-a.x,f=b.y-a.y;var g=c.x-a.x,h=c.y-a.y;var i=d.x-a.x,j=d.y-a.y;var k=e*h-f*g;var l=e*j-f*i;if(Math.abs(k)>Number.EPSILON){var m=i*h-j*g;if(k>0)return((l>=0)&&(m>=0));else return((l>=0)||(m>=0));}else return(l>0);}function g(a,b){var c=a.concat();var d;function g(a,b){var e=c.length-1;var g=a-1;if(g<0)g=e;var h=a+1;if(h>e)h=0;var i=f(c[a],c[g],c[h],d[b]);if(!i)return false;var j=d.length-1;var k=b-1;if(k<0)k=j;var l=b+1;if(l>j)l=0;i=f(d[b],d[k],d[l],c[a]);if(!i)return false;return true;}function h(a,b){var d,f,g;for(d=0;d<c.length;d++){f=d+1;f%=c.length;g=e(a,b,c[d],c[f],true);if(g.length>0)return true;}return false;}var i=[];function j(a,c){var d,f,g,h,j;for(d=0;d<i.length;d++){f=b[i[d]];for(g=0;g<f.length;g++){h=g+1;h%=f.length;j=e(a,c,f[g],f[h],true);if(j.length>0)return true;}}return false;}var k,l,m,n,o,p,q=[],r,s,t,u;for(var v=0,w=b.length;v<w;v++)i.push(v);var x=0;var y=i.length*2;while(i.length>0){y--;if(y<0){console.log('THREE.ShapeUtils: Infinite Loop! Holes left:" + indepHoles.length + ", Probably Hole outside Shape!');break;}for(l=x;l<c.length;l++){m=c[l];k=-1;for(var v=0;v<i.length;v++){o=i[v];p=m.x+':'+m.y+':'+o;if(q[p]!==undefined)continue;d=b[o];for(var z=0;z<d.length;z++){n=d[z];if(!g(l,z))continue;if(h(m,n))continue;if(j(m,n))continue;k=z;i.splice(v,1);r=c.slice(0,l+1);s=c.slice(l);t=d.slice(k);u=d.slice(0,k+1);c=r.concat(t).concat(u).concat(s);x=l;break;}if(k>=0)break;q[p]=true;}if(k>=0)break;}}return c;}var h,i,j,k,l,m,n={};var o=a.concat();for(var p=0,q=b.length;p<q;p++)Array.prototype.push.apply(o,b[p]);for(h=0,i=o.length;h<i;h++){l=o[h].x+':'+o[h].y;if(n[l]!==undefined)console.warn('THREE.ShapeUtils: Duplicate point',l,h);n[l]=h;}var r=g(a,b);var s=hS.triangulate(r,false);for(h=0,i=s.length;h<i;h++){k=s[h];for(j=0;j<3;j++){l=k[j].x+':'+k[j].y;m=n[l];if(m!==undefined)k[j]=m;}}return s.concat();},isClockWise:function(a){return hS.area(a)<0;}};function hT(a,b){fG.call(this);this.type='ExtrudeGeometry';this.parameters={shapes:a,options:b};this.fromBufferGeometry(new hU(a,b));this.mergeVertices();}hT.prototype=Object.create(fG.prototype);hT.prototype.constructor=hT;function hU(a,b){if(typeof a==="undefined")return;fT.call(this);this.type='ExtrudeBufferGeometry';a=Array.isArray(a)?a:[a];this.addShapeList(a,b);this.computeVertexNormals();}hU.prototype=Object.create(fT.prototype);hU.prototype.constructor=hU;hU.prototype.getArrays=function(){var a=this.getAttribute("position");var b=a?Array.prototype.slice.call(a.array):[];var c=this.getAttribute("uv");var d=c?Array.prototype.slice.call(c.array):[];var e=this.index;var f=e?Array.prototype.slice.call(e.array):[];return{position:b,uv:d,index:f};};hU.prototype.addShapeList=function(a,b){var c=a.length;b.arrays=this.getArrays();for(var d=0;d<c;d++){var e=a[d];this.addShape(e,b);}this.setIndex(b.arrays.index);this.addAttribute('position',new fP(b.arrays.position,3));this.addAttribute('uv',new fP(b.arrays.uv,2));};hU.prototype.addShape=function(a,b){var c=b.arrays?b.arrays:this.getArrays();var d=c.position;var e=c.index;var f=c.uv;var g=[];var h=b.amount!==undefined?b.amount:100;var i=b.bevelThickness!==undefined?b.bevelThickness:6;var j=b.bevelSize!==undefined?b.bevelSize:i-2;var k=b.bevelSegments!==undefined?b.bevelSegments:3;var l=b.bevelEnabled!==undefined?b.bevelEnabled:true;var m=b.curveSegments!==undefined?b.curveSegments:12;var n=b.steps!==undefined?b.steps:1;var o=b.extrudePath;var p,q=false;var r=b.UVGenerator!==undefined?b.UVGenerator:hT.WorldUVGenerator;var s,t,u,v;if(o){p=o.getSpacedPoints(n);q=true;l=false;s=b.frames!==undefined?b.frames:o.computeFrenetFrames(n,false);t=new bI();u=new bI();v=new bI();}if(!l){k=0;i=0;j=0;}var w,x,y;var z=this;var A=a.extractPoints(m);var B=A.shape;var C=A.holes;var D=!hS.isClockWise(B);if(D){B=B.reverse();for(x=0,y=C.length;x<y;x++){w=C[x];if(hS.isClockWise(w))C[x]=w.reverse();}}var E=hS.triangulateShape(B,C);var F=B;for(x=0,y=C.length;x<y;x++){w=C[x];B=B.concat(w);}function G(a,b,c){if(!b)console.error("THREE.ExtrudeGeometry: vec does not exist");return b.clone().multiplyScalar(c).add(a);}var H,I,J,K,L,M=B.length,N,O=E.length;function P(a,b,c){var d,e,f;var g=a.x-b.x,h=a.y-b.y;var i=c.x-a.x,j=c.y-a.y;var k=(g*g+h*h);var l=(g*j-h*i);if(Math.abs(l)>Number.EPSILON){var m=Math.sqrt(k);var n=Math.sqrt(i*i+j*j);var o=(b.x-h/m);var p=(b.y+g/m);var q=(c.x-j/n);var r=(c.y+i/n);var s=((q-o)*j-(r-p)*i)/(g*j-h*i);d=(o+g*s-a.x);e=(p+h*s-a.y);var t=(d*d+e*e);if(t<=2)return new bB(d,e);else f=Math.sqrt(t/2);}else{var u=false;if(g>Number.EPSILON){if(i>Number.EPSILON)u=true;}else if(g<-Number.EPSILON){if(i<-Number.EPSILON)u=true;}else if(Math.sign(h)===Math.sign(j))u=true;if(u){d=-h;e=g;f=Math.sqrt(k);}else{d=g;e=h;f=Math.sqrt(k/2);}}return new bB(d/f,e/f);}var Q=[];for(var R=0,S=F.length,T=S-1,U=R+1;R<S;R++,T++,U++){if(T===S)T=0;if(U===S)U=0;Q[R]=P(F[R],F[T],F[U]);}var V=[],W,X=Q.concat();for(x=0,y=C.length;x<y;x++){w=C[x];W=[];for(R=0,S=w.length,T=S-1,U=R+1;R<S;R++,T++,U++){if(T===S)T=0;if(U===S)U=0;W[R]=P(w[R],w[T],w[U]);}V.push(W);X=X.concat(W);}for(H=0;H<k;H++){J=H/k;K=i*Math.cos(J*Math.PI/2);I=j*Math.sin(J*Math.PI/2);for(R=0,S=F.length;R<S;R++){L=G(F[R],Q[R],I);ad(L.x,L.y,-K);}for(x=0,y=C.length;x<y;x++){w=C[x];W=V[x];for(R=0,S=w.length;R<S;R++){L=G(w[R],W[R],I);ad(L.x,L.y,-K);}}}I=j;for(R=0;R<M;R++){L=l?G(B[R],X[R],I):B[R];if(!q)ad(L.x,L.y,0);else{u.copy(s.normals[0]).multiplyScalar(L.x);t.copy(s.binormals[0]).multiplyScalar(L.y);v.copy(p[0]).add(u).add(t);ad(v.x,v.y,v.z);}}var Y;for(Y=1;Y<=n;Y++)for(R=0;R<M;R++){L=l?G(B[R],X[R],I):B[R];if(!q)ad(L.x,L.y,h/n*Y);else{u.copy(s.normals[Y]).multiplyScalar(L.x);t.copy(s.binormals[Y]).multiplyScalar(L.y);v.copy(p[Y]).add(u).add(t);ad(v.x,v.y,v.z);}}for(H=k-1;H>=0;H--){J=H/k;K=i*Math.cos(J*Math.PI/2);I=j*Math.sin(J*Math.PI/2);for(R=0,S=F.length;R<S;R++){L=G(F[R],Q[R],I);ad(L.x,L.y,h+K);}for(x=0,y=C.length;x<y;x++){w=C[x];W=V[x];for(R=0,S=w.length;R<S;R++){L=G(w[R],W[R],I);if(!q)ad(L.x,L.y,h+K);else ad(L.x,L.y+p[n-1].y,p[n-1].x+K);}}}Z();ab();function Z(){var a=d.length/3;if(l){var c=0;var e=M*c;for(R=0;R<O;R++){N=E[R];ae(N[2]+e,N[1]+e,N[0]+e);}c=n+k*2;e=M*c;for(R=0;R<O;R++){N=E[R];ae(N[0]+e,N[1]+e,N[2]+e);}}else{for(R=0;R<O;R++){N=E[R];ae(N[2],N[1],N[0]);}for(R=0;R<O;R++){N=E[R];ae(N[0]+M*n,N[1]+M*n,N[2]+M*n);}}z.addGroup(a,d.length/3-a,b.material!==undefined?b.material:0);}function ab(){var a=d.length/3;var c=0;ac(F,c);c+=F.length;for(x=0,y=C.length;x<y;x++){w=C[x];ac(w,c);c+=w.length;}z.addGroup(a,d.length/3-a,b.extrudeMaterial!==undefined?b.extrudeMaterial:1);}function ac(a,b){var c,d;R=a.length;while(--R>=0){c=R;d=R-1;if(d<0)d=a.length-1;var e=0,f=n+k*2;for(e=0;e<f;e++){var g=M*e;var h=M*(e+1);var i=b+c+g,j=b+d+g,l=b+d+h,m=b+c+h;af(i,j,l,m,a,e,f,c,d);}}}function ad(a,b,c){g.push(a);g.push(b);g.push(c);}function ae(a,b,c){ag(a);ag(b);ag(c);var e=d.length/3;var f=r.generateTopUV(z,d,e-3,e-2,e-1);ah(f[0]);ah(f[1]);ah(f[2]);}function af(a,b,c,e,f,g,h,i,j){ag(a);ag(b);ag(e);ag(b);ag(c);ag(e);var k=d.length/3;var l=r.generateSideWallUV(z,d,k-6,k-3,k-2,k-1);ah(l[0]);ah(l[1]);ah(l[3]);ah(l[1]);ah(l[2]);ah(l[3]);}function ag(a){e.push(d.length/3);d.push(g[a*3+0]);d.push(g[a*3+1]);d.push(g[a*3+2]);}function ah(a){f.push(a.x);f.push(a.y);}if(!b.arrays){this.setIndex(e);this.addAttribute('position',new fP(d,3));this.addAttribute('uv',new fP(b.arrays.uv,2));}};hT.WorldUVGenerator={generateTopUV:function(a,b,c,d,e){var f=b[c*3];var g=b[c*3+1];var h=b[d*3];var i=b[d*3+1];var j=b[e*3];var k=b[e*3+1];return [new bB(f,g),new bB(h,i),new bB(j,k)];},generateSideWallUV:function(a,b,c,d,e,f){var g=b[c*3];var h=b[c*3+1];var i=b[c*3+2];var j=b[d*3];var k=b[d*3+1];var l=b[d*3+2];var m=b[e*3];var n=b[e*3+1];var o=b[e*3+2];var p=b[f*3];var q=b[f*3+1];var r=b[f*3+2];if(Math.abs(h-k)<0.01)return [new bB(g,1-i),new bB(j,1-l),new bB(m,1-o),new bB(p,1-r)];else return [new bB(h,1-i),new bB(k,1-l),new bB(n,1-o),new bB(q,1-r)];}};function hV(a,b){fG.call(this);this.type='TextGeometry';this.parameters={text:a,parameters:b};this.fromBufferGeometry(new hW(a,b));this.mergeVertices();}hV.prototype=Object.create(fG.prototype);hV.prototype.constructor=hV;function hW(a,b){b=b||{};var c=b.font;if(!(c&&c.isFont)){console.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.');return new fG();}var d=c.generateShapes(a,b.size,b.curveSegments);b.amount=b.height!==undefined?b.height:50;if(b.bevelThickness===undefined)b.bevelThickness=10;if(b.bevelSize===undefined)b.bevelSize=8;if(b.bevelEnabled===undefined)b.bevelEnabled=false;hU.call(this,d,b);this.type='TextBufferGeometry';}hW.prototype=Object.create(hU.prototype);hW.prototype.constructor=hW;function hX(a,b,c,d,e,f,g){fG.call(this);this.type='SphereGeometry';this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};this.fromBufferGeometry(new hY(a,b,c,d,e,f,g));this.mergeVertices();}hX.prototype=Object.create(fG.prototype);hX.prototype.constructor=hX;function hY(a,b,c,d,e,f,g){fT.call(this);this.type='SphereBufferGeometry';this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};a=a||50;b=Math.max(3,Math.floor(b)||8);c=Math.max(2,Math.floor(c)||6);d=d!==undefined?d:0;e=e!==undefined?e:Math.PI*2;f=f!==undefined?f:0;g=g!==undefined?g:Math.PI;var h=f+g;var i,j;var k=0;var l=[];var m=new bI();var n=new bI();var o=[];var p=[];var q=[];var r=[];for(j=0;j<=c;j++){var s=[];var t=j/c;for(i=0;i<=b;i++){var u=i/b;m.x=-a*Math.cos(d+u*e)*Math.sin(f+t*g);m.y=a*Math.cos(f+t*g);m.z=a*Math.sin(d+u*e)*Math.sin(f+t*g);p.push(m.x,m.y,m.z);n.set(m.x,m.y,m.z).normalize();q.push(n.x,n.y,n.z);r.push(u,1-t);s.push(k++);}l.push(s);}for(j=0;j<c;j++)for(i=0;i<b;i++){var v=l[j][i+1];var w=l[j][i];var x=l[j+1][i];var y=l[j+1][i+1];if(j!==0||f>0)o.push(v,w,y);if(j!==c-1||h<Math.PI)o.push(w,x,y);}this.setIndex(o);this.addAttribute('position',new fP(p,3));this.addAttribute('normal',new fP(q,3));this.addAttribute('uv',new fP(r,2));}hY.prototype=Object.create(fT.prototype);hY.prototype.constructor=hY;function hZ(a,b,c,d,e,f){fG.call(this);this.type='RingGeometry';this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};this.fromBufferGeometry(new ij(a,b,c,d,e,f));this.mergeVertices();}hZ.prototype=Object.create(fG.prototype);hZ.prototype.constructor=hZ;function ij(a,b,c,d,e,f){fT.call(this);this.type='RingBufferGeometry';this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};a=a||20;b=b||50;e=e!==undefined?e:0;f=f!==undefined?f:Math.PI*2;c=c!==undefined?Math.max(3,c):8;d=d!==undefined?Math.max(1,d):1;var g=[];var h=[];var i=[];var j=[];var k;var l=a;var m=((b-a)/d);var n=new bI();var o=new bB();var p,q;for(p=0;p<=d;p++){for(q=0;q<=c;q++){k=e+q/c*f;n.x=l*Math.cos(k);n.y=l*Math.sin(k);h.push(n.x,n.y,n.z);i.push(0,0,1);o.x=(n.x/b+1)/2;o.y=(n.y/b+1)/2;j.push(o.x,o.y);}l+=m;}for(p=0;p<d;p++){var r=p*(c+1);for(q=0;q<c;q++){k=q+r;var s=k;var t=k+c+1;var u=k+c+2;var v=k+1;g.push(s,t,v);g.push(t,u,v);}}this.setIndex(g);this.addAttribute('position',new fP(h,3));this.addAttribute('normal',new fP(i,3));this.addAttribute('uv',new fP(j,2));}ij.prototype=Object.create(fT.prototype);ij.prototype.constructor=ij;function ik(a,b,c,d){fG.call(this);this.type='LatheGeometry';this.parameters={points:a,segments:b,phiStart:c,phiLength:d};this.fromBufferGeometry(new il(a,b,c,d));this.mergeVertices();}ik.prototype=Object.create(fG.prototype);ik.prototype.constructor=ik;function il(a,b,c,d){fT.call(this);this.type='LatheBufferGeometry';this.parameters={points:a,segments:b,phiStart:c,phiLength:d};b=Math.floor(b)||12;c=c||0;d=d||Math.PI*2;d=bA.clamp(d,0,Math.PI*2);var e=[];var f=[];var g=[];var h;var i=1.0/b;var j=new bI();var k=new bB();var l,m;for(l=0;l<=b;l++){var n=c+l*i*d;var o=Math.sin(n);var p=Math.cos(n);for(m=0;m<=(a.length-1);m++){j.x=a[m].x*o;j.y=a[m].y;j.z=a[m].x*p;f.push(j.x,j.y,j.z);k.x=l/b;k.y=m/(a.length-1);g.push(k.x,k.y);}}for(l=0;l<b;l++)for(m=0;m<(a.length-1);m++){h=m+l*a.length;var q=h;var r=h+a.length;var s=h+a.length+1;var t=h+1;e.push(q,r,t);e.push(r,s,t);}this.setIndex(e);this.addAttribute('position',new fP(f,3));this.addAttribute('uv',new fP(g,2));this.computeVertexNormals();if(d===Math.PI*2){var u=this.attributes.normal.array;var v=new bI();var w=new bI();var x=new bI();h=b*a.length*3;for(l=0,m=0;l<a.length;l++,m+=3){v.x=u[m+0];v.y=u[m+1];v.z=u[m+2];w.x=u[h+m+0];w.y=u[h+m+1];w.z=u[h+m+2];x.addVectors(v,w).normalize();u[m+0]=u[h+m+0]=x.x;u[m+1]=u[h+m+1]=x.y;u[m+2]=u[h+m+2]=x.z;}}}il.prototype=Object.create(fT.prototype);il.prototype.constructor=il;function im(a,b){fG.call(this);this.type='ShapeGeometry';if(typeof b==='object'){console.warn('THREE.ShapeGeometry: Options parameter has been removed.');b=b.curveSegments;}this.parameters={shapes:a,curveSegments:b};this.fromBufferGeometry(new io(a,b));this.mergeVertices();}im.prototype=Object.create(fG.prototype);im.prototype.constructor=im;function io(a,b){fT.call(this);this.type='ShapeBufferGeometry';this.parameters={shapes:a,curveSegments:b};b=b||12;var c=[];var d=[];var e=[];var f=[];var g=0;var h=0;if(Array.isArray(a)===false)j(a);else for(var i=0;i<a.length;i++){j(a[i]);this.addGroup(g,h,i);g+=h;h=0;}this.setIndex(c);this.addAttribute('position',new fP(d,3));this.addAttribute('normal',new fP(e,3));this.addAttribute('uv',new fP(f,2));function j(a){var g,i,j;var k=d.length/3;var l=a.extractPoints(b);var m=l.shape;var n=l.holes;if(hS.isClockWise(m)===false){m=m.reverse();for(g=0,i=n.length;g<i;g++){j=n[g];if(hS.isClockWise(j)===true)n[g]=j.reverse();}}var o=hS.triangulateShape(m,n);for(g=0,i=n.length;g<i;g++){j=n[g];m=m.concat(j);}for(g=0,i=m.length;g<i;g++){var p=m[g];d.push(p.x,p.y,0);e.push(0,0,1);f.push(p.x,p.y);}for(g=0,i=o.length;g<i;g++){var q=o[g];var r=q[0]+k;var s=q[1]+k;var t=q[2]+k;c.push(r,s,t);h+=3;}}}io.prototype=Object.create(fT.prototype);io.prototype.constructor=io;function ip(a,b){fT.call(this);this.type='EdgesGeometry';this.parameters={thresholdAngle:b};b=(b!==undefined)?b:1;var c=[];var d=Math.cos(bA.DEG2RAD*b);var e=[0,0],f={},g,h;var i,j=['a','b','c'];var k;if(a.isBufferGeometry){k=new fG();k.fromBufferGeometry(a);}else k=a.clone();k.mergeVertices();k.computeFaceNormals();var l=k.vertices;var m=k.faces;for(var n=0,o=m.length;n<o;n++){var p=m[n];for(var q=0;q<3;q++){g=p[j[q]];h=p[j[(q+1)%3]];e[0]=Math.min(g,h);e[1]=Math.max(g,h);i=e[0]+','+e[1];if(f[i]===undefined)f[i]={index1:e[0],index2:e[1],face1:n,face2:undefined};else f[i].face2=n;}}for(i in f){var r=f[i];if(r.face2===undefined||m[r.face1].normal.dot(m[r.face2].normal)<=d){var s=l[r.index1];c.push(s.x,s.y,s.z);s=l[r.index2];c.push(s.x,s.y,s.z);}}this.addAttribute('position',new fP(c,3));}ip.prototype=Object.create(fT.prototype);ip.prototype.constructor=ip;function iq(a,b,c,d,e,f,g,h){fG.call(this);this.type='CylinderGeometry';this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};this.fromBufferGeometry(new ir(a,b,c,d,e,f,g,h));this.mergeVertices();}iq.prototype=Object.create(fG.prototype);iq.prototype.constructor=iq;function ir(a,b,c,d,e,f,g,h){fT.call(this);this.type='CylinderBufferGeometry';this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};var i=this;a=a!==undefined?a:20;b=b!==undefined?b:20;c=c!==undefined?c:100;d=Math.floor(d)||8;e=Math.floor(e)||1;f=f!==undefined?f:false;g=g!==undefined?g:0.0;h=h!==undefined?h:2.0*Math.PI;var j=[];var k=[];var l=[];var m=[];var n=0;var o=[];var p=c/2;var q=0;r();if(f===false){if(a>0)s(true);if(b>0)s(false);}this.setIndex(j);this.addAttribute('position',new fP(k,3));this.addAttribute('normal',new fP(l,3));this.addAttribute('uv',new fP(m,2));function r(){var f,r;var s=new bI();var t=new bI();var u=0;var v=(b-a)/c;for(r=0;r<=e;r++){var w=[];var x=r/e;var y=x*(b-a)+a;for(f=0;f<=d;f++){var z=f/d;var A=z*h+g;var B=Math.sin(A);var C=Math.cos(A);t.x=y*B;t.y=-x*c+p;t.z=y*C;k.push(t.x,t.y,t.z);s.set(B,v,C).normalize();l.push(s.x,s.y,s.z);m.push(z,1-x);w.push(n++);}o.push(w);}for(f=0;f<d;f++)for(r=0;r<e;r++){var D=o[r][f];var E=o[r+1][f];var F=o[r+1][f+1];var G=o[r][f+1];j.push(D,E,G);j.push(E,F,G);u+=6;}i.addGroup(q,u,0);q+=u;}function s(c){var e,f,o;var r=new bB();var s=new bI();var t=0;var u=(c===true)?a:b;var v=(c===true)?1:-1;f=n;for(e=1;e<=d;e++){k.push(0,p*v,0);l.push(0,v,0);m.push(0.5,0.5);n++;}o=n;for(e=0;e<=d;e++){var w=e/d;var x=w*h+g;var y=Math.cos(x);var z=Math.sin(x);s.x=u*z;s.y=p*v;s.z=u*y;k.push(s.x,s.y,s.z);l.push(0,v,0);r.x=(y*0.5)+0.5;r.y=(z*0.5*v)+0.5;m.push(r.x,r.y);n++;}for(e=0;e<d;e++){var A=f+e;var B=o+e;if(c===true)j.push(B,B+1,A);else j.push(B+1,B,A);t+=3;}i.addGroup(q,t,c===true?1:2);q+=t;}}ir.prototype=Object.create(fT.prototype);ir.prototype.constructor=ir;function is(a,b,c,d,e,f,g){iq.call(this,0,a,b,c,d,e,f,g);this.type='ConeGeometry';this.parameters={radius:a,height:b,radialSegments:c,heightSegments:d,openEnded:e,thetaStart:f,thetaLength:g};}is.prototype=Object.create(iq.prototype);is.prototype.constructor=is;function it(a,b,c,d,e,f,g){ir.call(this,0,a,b,c,d,e,f,g);this.type='ConeBufferGeometry';this.parameters={radius:a,height:b,radialSegments:c,heightSegments:d,openEnded:e,thetaStart:f,thetaLength:g};}it.prototype=Object.create(ir.prototype);it.prototype.constructor=it;function iu(a,b,c,d){fG.call(this);this.type='CircleGeometry';this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};this.fromBufferGeometry(new iv(a,b,c,d));this.mergeVertices();}iu.prototype=Object.create(fG.prototype);iu.prototype.constructor=iu;function iv(a,b,c,d){fT.call(this);this.type='CircleBufferGeometry';this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};a=a||50;b=b!==undefined?Math.max(3,b):8;c=c!==undefined?c:0;d=d!==undefined?d:Math.PI*2;var e=[];var f=[];var g=[];var h=[];var i,j;var k=new bI();var l=new bB();f.push(0,0,0);g.push(0,0,1);h.push(0.5,0.5);for(j=0,i=3;j<=b;j++,i+=3){var m=c+j/b*d;k.x=a*Math.cos(m);k.y=a*Math.sin(m);f.push(k.x,k.y,k.z);g.push(0,0,1);l.x=(f[i]/a+1)/2;l.y=(f[i+1]/a+1)/2;h.push(l.x,l.y);}for(i=1;i<=b;i++)e.push(i,i+1,0);this.setIndex(e);this.addAttribute('position',new fP(f,3));this.addAttribute('normal',new fP(g,3));this.addAttribute('uv',new fP(h,2));}iv.prototype=Object.create(fT.prototype);iv.prototype.constructor=iv;var iw=Object.freeze({WireframeGeometry:hz,ParametricGeometry:hA,ParametricBufferGeometry:hB,TetrahedronGeometry:hE,TetrahedronBufferGeometry:hF,OctahedronGeometry:hG,OctahedronBufferGeometry:hH,IcosahedronGeometry:hI,IcosahedronBufferGeometry:hJ,DodecahedronGeometry:hK,DodecahedronBufferGeometry:hL,PolyhedronGeometry:hC,PolyhedronBufferGeometry:hD,TubeGeometry:hM,TubeBufferGeometry:hN,TorusKnotGeometry:hO,TorusKnotBufferGeometry:hP,TorusGeometry:hQ,TorusBufferGeometry:hR,TextGeometry:hV,TextBufferGeometry:hW,SphereGeometry:hX,SphereBufferGeometry:hY,RingGeometry:hZ,RingBufferGeometry:ij,PlaneGeometry:fW,PlaneBufferGeometry:fX,LatheGeometry:ik,LatheBufferGeometry:il,ShapeGeometry:im,ShapeBufferGeometry:io,ExtrudeGeometry:hT,ExtrudeBufferGeometry:hU,EdgesGeometry:ip,ConeGeometry:is,ConeBufferGeometry:it,CylinderGeometry:iq,CylinderBufferGeometry:ir,CircleGeometry:iu,CircleBufferGeometry:iv,BoxGeometry:fU,BoxBufferGeometry:fV});function ix(a){fl.call(this);this.type='ShadowMaterial';this.color=new cF(0x000000);this.opacity=1.0;this.lights=true;this.transparent=true;this.setValues(a);}ix.prototype=Object.create(fl.prototype);ix.prototype.constructor=ix;ix.prototype.isShadowMaterial=true;function iy(a){fm.call(this,a);this.type='RawShaderMaterial';}iy.prototype=Object.create(fm.prototype);iy.prototype.constructor=iy;iy.prototype.isRawShaderMaterial=true;function iz(a){fl.call(this);this.defines={'STANDARD':''};this.type='MeshStandardMaterial';this.color=new cF(0xffffff);this.roughness=0.5;this.metalness=0.5;this.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new cF(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new bB(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.roughnessMap=null;this.metalnessMap=null;this.alphaMap=null;this.envMap=null;this.envMapIntensity=1.0;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(a);}iz.prototype=Object.create(fl.prototype);iz.prototype.constructor=iz;iz.prototype.isMeshStandardMaterial=true;iz.prototype.copy=function(a){fl.prototype.copy.call(this,a);this.defines={'STANDARD':''};this.color.copy(a.color);this.roughness=a.roughness;this.metalness=a.metalness;this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=a.emissiveIntensity;this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=a.normalMap;this.normalScale.copy(a.normalScale);this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.roughnessMap=a.roughnessMap;this.metalnessMap=a.metalnessMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.envMapIntensity=a.envMapIntensity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this;};function iA(a){iz.call(this);this.defines={'PHYSICAL':''};this.type='MeshPhysicalMaterial';this.reflectivity=0.5;this.clearCoat=0.0;this.clearCoatRoughness=0.0;this.setValues(a);}iA.prototype=Object.create(iz.prototype);iA.prototype.constructor=iA;iA.prototype.isMeshPhysicalMaterial=true;iA.prototype.copy=function(a){iz.prototype.copy.call(this,a);this.defines={'PHYSICAL':''};this.reflectivity=a.reflectivity;this.clearCoat=a.clearCoat;this.clearCoatRoughness=a.clearCoatRoughness;return this;};function iB(a){fl.call(this);this.type='MeshPhongMaterial';this.color=new cF(0xffffff);this.specular=new cF(0x111111);this.shininess=30;this.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new cF(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new bB(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=Z;this.reflectivity=1;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(a);}iB.prototype=Object.create(fl.prototype);iB.prototype.constructor=iB;iB.prototype.isMeshPhongMaterial=true;iB.prototype.copy=function(a){fl.prototype.copy.call(this,a);this.color.copy(a.color);this.specular.copy(a.specular);this.shininess=a.shininess;this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=a.emissiveIntensity;this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=a.normalMap;this.normalScale.copy(a.normalScale);this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this;};function iC(a){iB.call(this);this.defines={'TOON':''};this.type='MeshToonMaterial';this.gradientMap=null;this.setValues(a);}iC.prototype=Object.create(iB.prototype);iC.prototype.constructor=iC;iC.prototype.isMeshToonMaterial=true;iC.prototype.copy=function(a){iB.prototype.copy.call(this,a);this.gradientMap=a.gradientMap;return this;};function iD(a){fl.call(this);this.type='MeshNormalMaterial';this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new bB(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.lights=false;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(a);}iD.prototype=Object.create(fl.prototype);iD.prototype.constructor=iD;iD.prototype.isMeshNormalMaterial=true;iD.prototype.copy=function(a){fl.prototype.copy.call(this,a);this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=a.normalMap;this.normalScale.copy(a.normalScale);this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this;};function iE(a){fl.call(this);this.type='MeshLambertMaterial';this.color=new cF(0xffffff);this.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new cF(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=Z;this.reflectivity=1;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(a);}iE.prototype=Object.create(fl.prototype);iE.prototype.constructor=iE;iE.prototype.isMeshLambertMaterial=true;iE.prototype.copy=function(a){fl.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=a.emissiveIntensity;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this;};function iG(a){hp.call(this);this.type='LineDashedMaterial';this.scale=1;this.dashSize=3;this.gapSize=1;this.setValues(a);}iG.prototype=Object.create(hp.prototype);iG.prototype.constructor=iG;iG.prototype.isLineDashedMaterial=true;iG.prototype.copy=function(a){hp.prototype.copy.call(this,a);this.scale=a.scale;this.dashSize=a.dashSize;this.gapSize=a.gapSize;return this;};var iH=Object.freeze({ShadowMaterial:ix,SpriteMaterial:hj,RawShaderMaterial:iy,ShaderMaterial:fm,PointsMaterial:ht,MeshPhysicalMaterial:iA,MeshStandardMaterial:iz,MeshPhongMaterial:iB,MeshToonMaterial:iC,MeshNormalMaterial:iD,MeshLambertMaterial:iE,MeshDepthMaterial:fn,MeshDistanceMaterial:fo,MeshBasicMaterial:fY,LineDashedMaterial:iG,LineBasicMaterial:hp,Material:fl});var iI={enabled:false,files:{},add:function(a,b){if(this.enabled===false)return;this.files[a]=b;},get:function(a){if(this.enabled===false)return;return this.files[a];},remove:function(a){delete this.files[a];},clear:function(){this.files={};}};function iJ(a,b,c){var d=this;var e=false,f=0,g=0;this.onStart=undefined;this.onLoad=a;this.onProgress=b;this.onError=c;this.itemStart=function(a){g++;if(e===false)if(d.onStart!==undefined)d.onStart(a,f,g);e=true;};this.itemEnd=function(a){f++;if(d.onProgress!==undefined)d.onProgress(a,f,g);if(f===g){e=false;if(d.onLoad!==undefined)d.onLoad();}};this.itemError=function(a){if(d.onError!==undefined)d.onError(a);};}var iK=new iJ();function iL(a){this.manager=(a!==undefined)?a:iK;}Object.assign(iL.prototype,{load:function(a,b,c,d){if(a===undefined)a='';if(this.path!==undefined)a=this.path+a;var e=this;var f=iI.get(a);if(f!==undefined){e.manager.itemStart(a);setTimeout(function(){if(b)b(f);e.manager.itemEnd(a);},0);return f;}var g=/^data:(.*?)(;base64)?,(.*)$/;var h=a.match(g);if(h){var i=h[1];var j=!!h[2];var k=h[3];k=window.decodeURIComponent(k);if(j)k=window.atob(k);try{var l;var m=(this.responseType||'').toLowerCase();switch(m){case 'arraybuffer':case 'blob':l=new ArrayBuffer(k.length);var n=new Uint8Array(l);for(var o=0;o<k.length;o++)n[o]=k.charCodeAt(o);if(m==='blob')l=new Blob([l],{type:i});break;case 'document':var p=new DOMParser();l=p.parseFromString(k,i);break;case 'json':l=JSON.parse(k);break;default:l=k;break;}window.setTimeout(function(){if(b)b(l);e.manager.itemEnd(a);},0);}catch(q){window.setTimeout(function(){if(d)d(q);e.manager.itemEnd(a);e.manager.itemError(a);},0);}}else{var r=new XMLHttpRequest();r.open('GET',a,true);r.addEventListener('load',function(c){var f=c.target.response;iI.add(a,f);if(this.status===200){if(b)b(f);e.manager.itemEnd(a);}else if(this.status===0){console.warn('THREE.FileLoader: HTTP Status 0 received.');if(b)b(f);e.manager.itemEnd(a);}else{if(d)d(c);e.manager.itemEnd(a);e.manager.itemError(a);}},false);if(c!==undefined)r.addEventListener('progress',function(a){c(a);},false);r.addEventListener('error',function(b){if(d)d(b);e.manager.itemEnd(a);e.manager.itemError(a);},false);if(this.responseType!==undefined)r.responseType=this.responseType;if(this.withCredentials!==undefined)r.withCredentials=this.withCredentials;if(r.overrideMimeType)r.overrideMimeType(this.mimeType!==undefined?this.mimeType:'text/plain');for(var s in this.requestHeader)r.setRequestHeader(s,this.requestHeader[s]);r.send(null);}e.manager.itemStart(a);return r;},setPath:function(a){this.path=a;return this;},setResponseType:function(a){this.responseType=a;return this;},setWithCredentials:function(a){this.withCredentials=a;return this;},setMimeType:function(a){this.mimeType=a;return this;},setRequestHeader:function(a){this.requestHeader=a;return this;}});function iM(a){this.manager=(a!==undefined)?a:iK;this._parser=null;}Object.assign(iM.prototype,{load:function(a,b,c,d){var e=this;var f=[];var g=new hx();g.image=f;var h=new iL(this.manager);h.setPath(this.path);h.setResponseType('arraybuffer');function i(i){h.load(a[i],function(a){var c=e._parser(a,true);f[i]={width:c.width,height:c.height,format:c.format,mipmaps:c.mipmaps};j+=1;if(j===6){if(c.mipmapCount===1)g.minFilter=aw;g.format=c.format;g.needsUpdate=true;if(b)b(g);}},c,d);}if(Array.isArray(a)){var j=0;for(var k=0,l=a.length;k<l;++k)i(k);}else h.load(a,function(a){var c=e._parser(a,true);if(c.isCubemap){var d=c.mipmaps.length/c.mipmapCount;for(var h=0;h<d;h++){f[h]={mipmaps:[]};for(var i=0;i<c.mipmapCount;i++){f[h].mipmaps.push(c.mipmaps[h*c.mipmapCount+i]);f[h].format=c.format;f[h].width=c.width;f[h].height=c.height;}}}else{g.image.width=c.width;g.image.height=c.height;g.mipmaps=c.mipmaps;}if(c.mipmapCount===1)g.minFilter=aw;g.format=c.format;g.needsUpdate=true;if(b)b(g);},c,d);return g;},setPath:function(a){this.path=a;return this;}});function iO(a){this.manager=(a!==undefined)?a:iK;this._parser=null;}Object.assign(iO.prototype,{load:function(a,b,c,d){var e=this;var f=new bK();var g=new iL(this.manager);g.setResponseType('arraybuffer');g.load(a,function(a){var c=e._parser(a);if(!c)return;if(undefined!==c.image)f.image=c.image;else if(undefined!==c.data){f.image.width=c.width;f.image.height=c.height;f.image.data=c.data;}f.wrapS=undefined!==c.wrapS?c.wrapS:ar;f.wrapT=undefined!==c.wrapT?c.wrapT:ar;f.magFilter=undefined!==c.magFilter?c.magFilter:aw;f.minFilter=undefined!==c.minFilter?c.minFilter:ay;f.anisotropy=undefined!==c.anisotropy?c.anisotropy:1;if(undefined!==c.format)f.format=c.format;if(undefined!==c.type)f.type=c.type;if(undefined!==c.mipmaps)f.mipmaps=c.mipmaps;if(1===c.mipmapCount)f.minFilter=aw;f.needsUpdate=true;if(b)b(f,c);},c,d);return f;}});function iP(a){this.manager=(a!==undefined)?a:iK;}Object.assign(iP.prototype,{crossOrigin:'Anonymous',load:function(a,b,c,d){if(a===undefined)a='';if(this.path!==undefined)a=this.path+a;var e=this;var f=iI.get(a);if(f!==undefined){e.manager.itemStart(a);setTimeout(function(){if(b)b(f);e.manager.itemEnd(a);},0);return f;}var g=document.createElementNS('http://www.w3.org/1999/xhtml','img');g.addEventListener('load',function(){iI.add(a,this);if(b)b(this);e.manager.itemEnd(a);},false);g.addEventListener('error',function(b){if(d)d(b);e.manager.itemEnd(a);e.manager.itemError(a);},false);if(a.substr(0,5)!=='data:')if(this.crossOrigin!==undefined)g.crossOrigin=this.crossOrigin;e.manager.itemStart(a);g.src=a;return g;},setCrossOrigin:function(a){this.crossOrigin=a;return this;},setPath:function(a){this.path=a;return this;}});function iQ(a){this.manager=(a!==undefined)?a:iK;}Object.assign(iQ.prototype,{crossOrigin:'Anonymous',load:function(a,b,c,d){var e=new bL();var f=new iP(this.manager);f.setCrossOrigin(this.crossOrigin);f.setPath(this.path);var g=0;function h(c){f.load(a[c],function(a){e.images[c]=a;g++;if(g===6){e.needsUpdate=true;if(b)b(e);}},undefined,d);}for(var i=0;i<a.length;++i)h(i);return e;},setCrossOrigin:function(a){this.crossOrigin=a;return this;},setPath:function(a){this.path=a;return this;}});function iR(a){this.manager=(a!==undefined)?a:iK;}Object.assign(iR.prototype,{crossOrigin:'Anonymous',load:function(a,b,c,d){var e=new iP(this.manager);e.setCrossOrigin(this.crossOrigin);e.setPath(this.path);var f=new bD();f.image=e.load(a,function(){var c=a.search(/\.(jpg|jpeg)$/)>0||a.search(/^data\:image\/jpeg/)===0;f.format=c?aM:aN;f.needsUpdate=true;if(b!==undefined)b(f);},c,d);return f;},setCrossOrigin:function(a){this.crossOrigin=a;return this;},setPath:function(a){this.path=a;return this;}});function iS(a,b){fz.call(this);this.type='Light';this.color=new cF(a);this.intensity=b!==undefined?b:1;this.receiveShadow=undefined;}iS.prototype=Object.assign(Object.create(fz.prototype),{constructor:iS,isLight:true,copy:function(a){fz.prototype.copy.call(this,a);this.color.copy(a.color);this.intensity=a.intensity;return this;},toJSON:function(a){var b=fz.prototype.toJSON.call(this,a);b.object.color=this.color.getHex();b.object.intensity=this.intensity;if(this.groundColor!==undefined)b.object.groundColor=this.groundColor.getHex();if(this.distance!==undefined)b.object.distance=this.distance;if(this.angle!==undefined)b.object.angle=this.angle;if(this.decay!==undefined)b.object.decay=this.decay;if(this.penumbra!==undefined)b.object.penumbra=this.penumbra;if(this.shadow!==undefined)b.object.shadow=this.shadow.toJSON();return b;}});function iT(a,b,c){iS.call(this,a,c);this.type='HemisphereLight';this.castShadow=undefined;this.position.copy(fz.DefaultUp);this.updateMatrix();this.groundColor=new cF(b);}iT.prototype=Object.assign(Object.create(iS.prototype),{constructor:iT,isHemisphereLight:true,copy:function(a){iS.prototype.copy.call(this,a);this.groundColor.copy(a.groundColor);return this;}});function iU(a){this.camera=a;this.bias=0;this.radius=1;this.mapSize=new bB(512,512);this.map=null;this.matrix=new bJ();}Object.assign(iU.prototype,{copy:function(a){this.camera=a.camera.clone();this.bias=a.bias;this.radius=a.radius;this.mapSize.copy(a.mapSize);return this;},clone:function(){return new this.constructor().copy(this);},toJSON:function(){var a={};if(this.bias!==0)a.bias=this.bias;if(this.radius!==1)a.radius=this.radius;if(this.mapSize.x!==512||this.mapSize.y!==512)a.mapSize=this.mapSize.toArray();a.camera=this.camera.toJSON(false).object;delete a.camera.matrix;return a;}});function iV(){iU.call(this,new fC(50,1,0.5,500));}iV.prototype=Object.assign(Object.create(iU.prototype),{constructor:iV,isSpotLightShadow:true,update:function(a){var b=this.camera;var c=bA.RAD2DEG*2*a.angle;var d=this.mapSize.width/this.mapSize.height;var e=a.distance||b.far;if(c!==b.fov||d!==b.aspect||e!==b.far){b.fov=c;b.aspect=d;b.far=e;b.updateProjectionMatrix();}}});function iW(a,b,c,d,e,f){iS.call(this,a,b);this.type='SpotLight';this.position.copy(fz.DefaultUp);this.updateMatrix();this.target=new fz();Object.defineProperty(this,'power',{get:function(){return this.intensity*Math.PI;},set:function(a){this.intensity=a/Math.PI;}});this.distance=(c!==undefined)?c:0;this.angle=(d!==undefined)?d:Math.PI/3;this.penumbra=(e!==undefined)?e:0;this.decay=(f!==undefined)?f:1;this.shadow=new iV();}iW.prototype=Object.assign(Object.create(iS.prototype),{constructor:iW,isSpotLight:true,copy:function(a){iS.prototype.copy.call(this,a);this.distance=a.distance;this.angle=a.angle;this.penumbra=a.penumbra;this.decay=a.decay;this.target=a.target.clone();this.shadow=a.shadow.clone();return this;}});function iX(a,b,c,d){iS.call(this,a,b);this.type='PointLight';Object.defineProperty(this,'power',{get:function(){return this.intensity*4*Math.PI;},set:function(a){this.intensity=a/(4*Math.PI);}});this.distance=(c!==undefined)?c:0;this.decay=(d!==undefined)?d:1;this.shadow=new iU(new fC(90,1,0.5,500));}iX.prototype=Object.assign(Object.create(iS.prototype),{constructor:iX,isPointLight:true,copy:function(a){iS.prototype.copy.call(this,a);this.distance=a.distance;this.decay=a.decay;this.shadow=a.shadow.clone();return this;}});function iY(){iU.call(this,new fB(-5,5,5,-5,0.5,500));}iY.prototype=Object.assign(Object.create(iU.prototype),{constructor:iY});function iZ(a,b){iS.call(this,a,b);this.type='DirectionalLight';this.position.copy(fz.DefaultUp);this.updateMatrix();this.target=new fz();this.shadow=new iY();}iZ.prototype=Object.assign(Object.create(iS.prototype),{constructor:iZ,isDirectionalLight:true,copy:function(a){iS.prototype.copy.call(this,a);this.target=a.target.clone();this.shadow=a.shadow.clone();return this;}});function jk(a,b){iS.call(this,a,b);this.type='AmbientLight';this.castShadow=undefined;}jk.prototype=Object.assign(Object.create(iS.prototype),{constructor:jk,isAmbientLight:true});function jl(a,b,c,d){iS.call(this,a,b);this.type='RectAreaLight';this.position.set(0,1,0);this.updateMatrix();this.width=(c!==undefined)?c:10;this.height=(d!==undefined)?d:10;}jl.prototype=Object.assign(Object.create(iS.prototype),{constructor:jl,isRectAreaLight:true,copy:function(a){iS.prototype.copy.call(this,a);this.width=a.width;this.height=a.height;return this;},toJSON:function(a){var b=iS.prototype.toJSON.call(this,a);b.object.width=this.width;b.object.height=this.height;return b;}});var jm={arraySlice:function(a,b,c){if(jm.isTypedArray(a))return new a.constructor(a.subarray(b,c!==undefined?c:a.length));return a.slice(b,c);},convertArray:function(a,b,c){if(!a||!c&&a.constructor===b)return a;if(typeof b.BYTES_PER_ELEMENT==='number')return new b(a);return Array.prototype.slice.call(a);},isTypedArray:function(a){return ArrayBuffer.isView(a)&&!(a instanceof DataView);},getKeyframeOrder:function(a){function b(b,c){return a[b]-a[c];}var c=a.length;var d=new Array(c);for(var e=0;e!==c;++e)d[e]=e;d.sort(b);return d;},sortedArray:function(a,b,c){var d=a.length;var e=new a.constructor(d);for(var f=0,g=0;g!==d;++f){var h=c[f]*b;for(var i=0;i!==b;++i)e[g++]=a[h+i];}return e;},flattenJSON:function(a,b,c,d){var e=1,f=a[0];while(f!==undefined&&f[d]===undefined)f=a[e++];if(f===undefined)return;var g=f[d];if(g===undefined)return;if(Array.isArray(g)){do{g=f[d];if(g!==undefined){b.push(f.time);c.push.apply(c,g);}f=a[e++];}while(f!==undefined);}else if(g.toArray!==undefined){do{g=f[d];if(g!==undefined){b.push(f.time);g.toArray(c,c.length);}f=a[e++];}while(f!==undefined);}else do{g=f[d];if(g!==undefined){b.push(f.time);c.push(g);}f=a[e++];}while(f!==undefined);}};function jn(a,b,c,d){this.parameterPositions=a;this._cachedIndex=0;this.resultBuffer=d!==undefined?d:new b.constructor(c);this.sampleValues=b;this.valueSize=c;}Object.assign(jn.prototype,{evaluate:function(a){var b=this.parameterPositions,c=this._cachedIndex,d=b[c],e=b[c-1];validate_interval:{seek:{var f;linear_scan:{forward_scan:if(!(a<d)){for(var g=c+2;;){if(d===undefined){if(a<e)break forward_scan;c=b.length;this._cachedIndex=c;return this.afterEnd_(c-1,a,e);}if(c===g)break;e=d;d=b[++c];if(a<d)break seek;}f=b.length;break linear_scan;}if(!(a>=e)){var h=b[1];if(a<h){c=2;e=h;}for(var g=c-2;;){if(e===undefined){this._cachedIndex=0;return this.beforeStart_(0,a,d);}if(c===g)break;d=e;e=b[--c-1];if(a>=e)break seek;}f=c;c=0;break linear_scan;}break validate_interval;}while(c<f){var i=(c+f)>>>1;if(a<b[i])f=i;else c=i+1;}d=b[c];e=b[c-1];if(e===undefined){this._cachedIndex=0;return this.beforeStart_(0,a,d);}if(d===undefined){c=b.length;this._cachedIndex=c;return this.afterEnd_(c-1,e,a);}}this._cachedIndex=c;this.intervalChanged_(c,e,d);}return this.interpolate_(c,e,a,d);},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_;},copySampleValue_:function(a){var b=this.resultBuffer,c=this.sampleValues,d=this.valueSize,e=a*d;for(var f=0;f!==d;++f)b[f]=c[e+f];return b;},interpolate_:function(a,b,c,d){throw new Error("call to abstract method");},intervalChanged_:function(a,b,c){}});Object.assign(jn.prototype,{beforeStart_:jn.prototype.copySampleValue_,afterEnd_:jn.prototype.copySampleValue_});function jo(a,b,c,d){jn.call(this,a,b,c,d);this._weightPrev=-0;this._offsetPrev=-0;this._weightNext=-0;this._offsetNext=-0;}jo.prototype=Object.assign(Object.create(jn.prototype),{constructor:jo,DefaultSettings_:{endingStart:bk,endingEnd:bk},intervalChanged_:function(a,b,c){var d=this.parameterPositions,e=a-2,f=a+1,g=d[e],h=d[f];if(g===undefined)switch(this.getSettings_().endingStart){case bl:e=a;g=2*b-c;break;case bm:e=d.length-2;g=b+d[e]-d[e+1];break;default:e=a;g=c;}if(h===undefined)switch(this.getSettings_().endingEnd){case bl:f=a;h=2*c-b;break;case bm:f=1;h=c+d[1]-d[0];break;default:f=a-1;h=b;}var i=(c-b)*0.5,j=this.valueSize;this._weightPrev=i/(b-g);this._weightNext=i/(h-c);this._offsetPrev=e*j;this._offsetNext=f*j;},interpolate_:function(a,b,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize,h=a*g,i=h-g,j=this._offsetPrev,k=this._offsetNext,l=this._weightPrev,m=this._weightNext,n=(c-b)/(d-b),o=n*n,p=o*n;var q=-l*p+2*l*o-l*n;var r=(1+l)*p+(-1.5-2*l)*o+(-0.5+l)*n+1;var s=(-1-m)*p+(1.5+m)*o+0.5*n;var t=m*p-m*o;for(var u=0;u!==g;++u)e[u]=q*f[j+u]+r*f[i+u]+s*f[h+u]+t*f[k+u];return e;}});function jp(a,b,c,d){jn.call(this,a,b,c,d);}jp.prototype=Object.assign(Object.create(jn.prototype),{constructor:jp,interpolate_:function(a,b,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize,h=a*g,i=h-g,j=(c-b)/(d-b),k=1-j;for(var l=0;l!==g;++l)e[l]=f[i+l]*k+f[h+l]*j;return e;}});function jq(a,b,c,d){jn.call(this,a,b,c,d);}jq.prototype=Object.assign(Object.create(jn.prototype),{constructor:jq,interpolate_:function(a,b,c,d){return this.copySampleValue_(a-1);}});var jr;jr={TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:bi,InterpolantFactoryMethodDiscrete:function(a){return new jq(this.times,this.values,this.getValueSize(),a);},InterpolantFactoryMethodLinear:function(a){return new jp(this.times,this.values,this.getValueSize(),a);},InterpolantFactoryMethodSmooth:function(a){return new jo(this.times,this.values,this.getValueSize(),a);},setInterpolation:function(a){var b;switch(a){case bh:b=this.InterpolantFactoryMethodDiscrete;break;case bi:b=this.InterpolantFactoryMethodLinear;break;case bj:b=this.InterpolantFactoryMethodSmooth;break;}if(b===undefined){var c="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===undefined)if(a!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(c);console.warn('THREE.KeyframeTrackPrototype:',c);return;}this.createInterpolant=b;},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return bh;case this.InterpolantFactoryMethodLinear:return bi;case this.InterpolantFactoryMethodSmooth:return bj;}},getValueSize:function(){return this.values.length/this.times.length;},shift:function(a){if(a!==0.0){var b=this.times;for(var c=0,d=b.length;c!==d;++c)b[c]+=a;}return this;},scale:function(a){if(a!==1.0){var b=this.times;for(var c=0,d=b.length;c!==d;++c)b[c]*=a;}return this;},trim:function(a,b){var c=this.times,d=c.length,e=0,f=d-1;while(e!==d&&c[e]<a)++e;while(f!==-1&&c[f]>b)--f;++f;if(e!==0||f!==d){if(e>=f)f=Math.max(f,1),e=f-1;var g=this.getValueSize();this.times=jm.arraySlice(c,e,f);this.values=jm.arraySlice(this.values,e*g,f*g);}return this;},validate:function(){var a=true;var b=this.getValueSize();if(b-Math.floor(b)!==0){console.error('THREE.KeyframeTrackPrototype: Invalid value size in track.',this);a=false;}var c=this.times,d=this.values,e=c.length;if(e===0){console.error('THREE.KeyframeTrackPrototype: Track is empty.',this);a=false;}var f=null;for(var g=0;g!==e;g++){var h=c[g];if(typeof h==='number'&&isNaN(h)){console.error('THREE.KeyframeTrackPrototype: Time is not a valid number.',this,g,h);a=false;break;}if(f!==null&&f>h){console.error('THREE.KeyframeTrackPrototype: Out of order keys.',this,g,h,f);a=false;break;}f=h;}if(d!==undefined)if(jm.isTypedArray(d))for(var g=0,i=d.length;g!==i;++g){var j=d[g];if(isNaN(j)){console.error('THREE.KeyframeTrackPrototype: Value is not a valid number.',this,g,j);a=false;break;}}return a;},optimize:function(){var a=this.times,b=this.values,c=this.getValueSize(),d=this.getInterpolation()===bj,e=1,f=a.length-1;for(var g=1;g<f;++g){var h=false;var i=a[g];var j=a[g+1];if(i!==j&&(g!==1||i!==i[0]))if(!d){var k=g*c,l=k-c,m=k+c;for(var n=0;n!==c;++n){var o=b[k+n];if(o!==b[l+n]||o!==b[m+n]){h=true;break;}}}else h=true;if(h){if(g!==e){a[e]=a[g];var p=g*c,q=e*c;for(var n=0;n!==c;++n)b[q+n]=b[p+n];}++e;}}if(f>0){a[e]=a[f];for(var p=f*c,q=e*c,n=0;n!==c;++n)b[q+n]=b[p+n];++e;}if(e!==a.length){this.times=jm.arraySlice(a,0,e);this.values=jm.arraySlice(b,0,e*c);}return this;}};function js(a,b,c,d){if(a===undefined)throw new Error("track name is undefined");if(b===undefined||b.length===0)throw new Error("no keyframes in track named "+a);this.name=a;this.times=jm.convertArray(b,this.TimeBufferType);this.values=jm.convertArray(c,this.ValueBufferType);this.setInterpolation(d||this.DefaultInterpolation);this.validate();this.optimize();}function jt(a,b,c,d){js.call(this,a,b,c,d);}jt.prototype=Object.assign(Object.create(jr),{constructor:jt,ValueTypeName:'vector'});function ju(a,b,c,d){jn.call(this,a,b,c,d);}ju.prototype=Object.assign(Object.create(jn.prototype),{constructor:ju,interpolate_:function(a,b,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize,h=a*g,i=(c-b)/(d-b);for(var j=h+g;h!==j;h+=4)bH.slerpFlat(e,0,f,h-g,f,h,i);return e;}});function jv(a,b,c,d){js.call(this,a,b,c,d);}jv.prototype=Object.assign(Object.create(jr),{constructor:jv,ValueTypeName:'quaternion',DefaultInterpolation:bi,InterpolantFactoryMethodLinear:function(a){return new ju(this.times,this.values,this.getValueSize(),a);},InterpolantFactoryMethodSmooth:undefined});function jw(a,b,c,d){js.call(this,a,b,c,d);}jw.prototype=Object.assign(Object.create(jr),{constructor:jw,ValueTypeName:'number'});function jx(a,b,c,d){js.call(this,a,b,c,d);}jx.prototype=Object.assign(Object.create(jr),{constructor:jx,ValueTypeName:'string',ValueBufferType:Array,DefaultInterpolation:bh,InterpolantFactoryMethodLinear:undefined,InterpolantFactoryMethodSmooth:undefined});function jy(a,b,c){js.call(this,a,b,c);}jy.prototype=Object.assign(Object.create(jr),{constructor:jy,ValueTypeName:'bool',ValueBufferType:Array,DefaultInterpolation:bh,InterpolantFactoryMethodLinear:undefined,InterpolantFactoryMethodSmooth:undefined});function jz(a,b,c,d){js.call(this,a,b,c,d);}jz.prototype=Object.assign(Object.create(jr),{constructor:jz,ValueTypeName:'color'});function jA(a,b,c,d){js.apply(this,arguments);}jA.prototype=jr;jr.constructor=jA;Object.assign(jA,{parse:function(a){if(a.type===undefined)throw new Error("track type undefined, can not parse");var b=jA._getTrackTypeForValueTypeName(a.type);if(a.times===undefined){var c=[],d=[];jm.flattenJSON(a.keys,c,d,'value');a.times=c;a.values=d;}if(b.parse!==undefined)return b.parse(a);else return new b(a.name,a.times,a.values,a.interpolation);},toJSON:function(a){var b=a.constructor;var c;if(b.toJSON!==undefined)c=b.toJSON(a);else{c={'name':a.name,'times':jm.convertArray(a.times,Array),'values':jm.convertArray(a.values,Array)};var d=a.getInterpolation();if(d!==a.DefaultInterpolation)c.interpolation=d;}c.type=a.ValueTypeName;return c;},_getTrackTypeForValueTypeName:function(a){switch(a.toLowerCase()){case "scalar":case "double":case "float":case "number":case "integer":return jw;case "vector":case "vector2":case "vector3":case "vector4":return jt;case "color":return jz;case "quaternion":return jv;case "bool":case "boolean":return jy;case "string":return jx;}throw new Error("Unsupported typeName: "+a);}});function jB(a,b,c){this.name=a;this.tracks=c;this.duration=(b!==undefined)?b:-1;this.uuid=bA.generateUUID();if(this.duration<0)this.resetDuration();this.optimize();}Object.assign(jB,{parse:function(a){var b=[],c=a.tracks,d=1.0/(a.fps||1.0);for(var e=0,f=c.length;e!==f;++e)b.push(jA.parse(c[e]).scale(d));return new jB(a.name,a.duration,b);},toJSON:function(a){var b=[],c=a.tracks;var d={'name':a.name,'duration':a.duration,'tracks':b};for(var e=0,f=c.length;e!==f;++e)b.push(jA.toJSON(c[e]));return d;},CreateFromMorphTargetSequence:function(a,b,c,d){var e=b.length;var f=[];for(var g=0;g<e;g++){var h=[];var i=[];h.push((g+e-1)%e,g,(g+1)%e);i.push(0,1,0);var j=jm.getKeyframeOrder(h);h=jm.sortedArray(h,1,j);i=jm.sortedArray(i,1,j);if(!d&&h[0]===0){h.push(e);i.push(i[0]);}f.push(new jw('.morphTargetInfluences['+b[g].name+']',h,i).scale(1.0/c));}return new jB(a,-1,f);},findByName:function(a,b){var c=a;if(!Array.isArray(a)){var d=a;c=d.geometry&&d.geometry.animations||d.animations;}for(var e=0;e<c.length;e++)if(c[e].name===b)return c[e];return null;},CreateClipsFromMorphTargetSequences:function(a,b,c){var d={};var e=/^([\w-]*?)([\d]+)$/;for(var f=0,g=a.length;f<g;f++){var h=a[f];var i=h.name.match(e);if(i&&i.length>1){var j=i[1];var k=d[j];if(!k)d[j]=k=[];k.push(h);}}var l=[];for(var j in d)l.push(jB.CreateFromMorphTargetSequence(j,d[j],b,c));return l;},parseAnimation:function(a,b){if(!a){console.error('THREE.AnimationClip: No animation in JSONLoader data.');return null;}var c=function(a,b,c,d,e){if(c.length!==0){var f=[];var g=[];jm.flattenJSON(c,f,g,d);if(f.length!==0)e.push(new a(b,f,g));}};var d=[];var e=a.name||'default';var f=a.length||-1;var g=a.fps||30;var h=a.hierarchy||[];for(var i=0;i<h.length;i++){var j=h[i].keys;if(!j||j.length===0)continue;if(j[0].morphTargets){var k={};for(var l=0;l<j.length;l++)if(j[l].morphTargets)for(var m=0;m<j[l].morphTargets.length;m++)k[j[l].morphTargets[m]]=-1;for(var n in k){var o=[];var p=[];for(var m=0;m!==j[l].morphTargets.length;++m){var q=j[l];o.push(q.time);p.push((q.morphTarget===n)?1:0);}d.push(new jw('.morphTargetInfluence['+n+']',o,p));}f=k.length*(g||1.0);}else{var r='.bones['+b[i].name+']';c(jt,r+'.position',j,'pos',d);c(jv,r+'.quaternion',j,'rot',d);c(jt,r+'.scale',j,'scl',d);}}if(d.length===0)return null;var s=new jB(e,f,d);return s;}});Object.assign(jB.prototype,{resetDuration:function(){var a=this.tracks,b=0;for(var c=0,d=a.length;c!==d;++c){var e=this.tracks[c];b=Math.max(b,e.times[e.times.length-1]);}this.duration=b;},trim:function(){for(var a=0;a<this.tracks.length;a++)this.tracks[a].trim(0,this.duration);return this;},optimize:function(){for(var a=0;a<this.tracks.length;a++)this.tracks[a].optimize();return this;}});function jC(a){this.manager=(a!==undefined)?a:iK;this.textures={};}Object.assign(jC.prototype,{load:function(a,b,c,d){var e=this;var f=new iL(e.manager);f.load(a,function(a){b(e.parse(JSON.parse(a)));},c,d);},setTextures:function(a){this.textures=a;},parse:function(a){var b=this.textures;function c(a){if(b[a]===undefined)console.warn('THREE.MaterialLoader: Undefined texture',a);return b[a];}var d=new iH[a.type]();if(a.uuid!==undefined)d.uuid=a.uuid;if(a.name!==undefined)d.name=a.name;if(a.color!==undefined)d.color.setHex(a.color);if(a.roughness!==undefined)d.roughness=a.roughness;if(a.metalness!==undefined)d.metalness=a.metalness;if(a.emissive!==undefined)d.emissive.setHex(a.emissive);if(a.specular!==undefined)d.specular.setHex(a.specular);if(a.shininess!==undefined)d.shininess=a.shininess;if(a.clearCoat!==undefined)d.clearCoat=a.clearCoat;if(a.clearCoatRoughness!==undefined)d.clearCoatRoughness=a.clearCoatRoughness;if(a.uniforms!==undefined)d.uniforms=a.uniforms;if(a.vertexShader!==undefined)d.vertexShader=a.vertexShader;if(a.fragmentShader!==undefined)d.fragmentShader=a.fragmentShader;if(a.vertexColors!==undefined)d.vertexColors=a.vertexColors;if(a.fog!==undefined)d.fog=a.fog;if(a.flatShading!==undefined)d.flatShading=a.flatShading;if(a.blending!==undefined)d.blending=a.blending;if(a.side!==undefined)d.side=a.side;if(a.opacity!==undefined)d.opacity=a.opacity;if(a.transparent!==undefined)d.transparent=a.transparent;if(a.alphaTest!==undefined)d.alphaTest=a.alphaTest;if(a.depthTest!==undefined)d.depthTest=a.depthTest;if(a.depthWrite!==undefined)d.depthWrite=a.depthWrite;if(a.colorWrite!==undefined)d.colorWrite=a.colorWrite;if(a.wireframe!==undefined)d.wireframe=a.wireframe;if(a.wireframeLinewidth!==undefined)d.wireframeLinewidth=a.wireframeLinewidth;if(a.wireframeLinecap!==undefined)d.wireframeLinecap=a.wireframeLinecap;if(a.wireframeLinejoin!==undefined)d.wireframeLinejoin=a.wireframeLinejoin;if(a.skinning!==undefined)d.skinning=a.skinning;if(a.morphTargets!==undefined)d.morphTargets=a.morphTargets;if(a.dithering!==undefined)d.dithering=a.dithering;if(a.visible!==undefined)d.visible=a.visible;if(a.userData!==undefined)d.userData=a.userData;if(a.shading!==undefined)d.flatShading=a.shading===1;if(a.size!==undefined)d.size=a.size;if(a.sizeAttenuation!==undefined)d.sizeAttenuation=a.sizeAttenuation;if(a.map!==undefined)d.map=c(a.map);if(a.alphaMap!==undefined){d.alphaMap=c(a.alphaMap);d.transparent=true;}if(a.bumpMap!==undefined)d.bumpMap=c(a.bumpMap);if(a.bumpScale!==undefined)d.bumpScale=a.bumpScale;if(a.normalMap!==undefined)d.normalMap=c(a.normalMap);if(a.normalScale!==undefined){var e=a.normalScale;if(Array.isArray(e)===false)e=[e,e];d.normalScale=new bB().fromArray(e);}if(a.displacementMap!==undefined)d.displacementMap=c(a.displacementMap);if(a.displacementScale!==undefined)d.displacementScale=a.displacementScale;if(a.displacementBias!==undefined)d.displacementBias=a.displacementBias;if(a.roughnessMap!==undefined)d.roughnessMap=c(a.roughnessMap);if(a.metalnessMap!==undefined)d.metalnessMap=c(a.metalnessMap);if(a.emissiveMap!==undefined)d.emissiveMap=c(a.emissiveMap);if(a.emissiveIntensity!==undefined)d.emissiveIntensity=a.emissiveIntensity;if(a.specularMap!==undefined)d.specularMap=c(a.specularMap);if(a.envMap!==undefined)d.envMap=c(a.envMap);if(a.reflectivity!==undefined)d.reflectivity=a.reflectivity;if(a.lightMap!==undefined)d.lightMap=c(a.lightMap);if(a.lightMapIntensity!==undefined)d.lightMapIntensity=a.lightMapIntensity;if(a.aoMap!==undefined)d.aoMap=c(a.aoMap);if(a.aoMapIntensity!==undefined)d.aoMapIntensity=a.aoMapIntensity;if(a.gradientMap!==undefined)d.gradientMap=c(a.gradientMap);return d;}});function jD(a){this.manager=(a!==undefined)?a:iK;}Object.assign(jD.prototype,{load:function(a,b,c,d){var e=this;var f=new iL(e.manager);f.load(a,function(a){b(e.parse(JSON.parse(a)));},c,d);},parse:function(a){var b=new fT();var c=a.data.index;if(c!==undefined){var d=new jE[c.type](c.array);b.setIndex(new fH(d,1));}var e=a.data.attributes;for(var f in e){var g=e[f];var d=new jE[g.type](g.array);b.addAttribute(f,new fH(d,g.itemSize,g.normalized));}var h=a.data.groups||a.data.drawcalls||a.data.offsets;if(h!==undefined)for(var i=0,j=h.length;i!==j;++i){var k=h[i];b.addGroup(k.start,k.count,k.materialIndex);}var l=a.data.boundingSphere;if(l!==undefined){var m=new bI();if(l.center!==undefined)m.fromArray(l.center);b.boundingSphere=new fq(m,l.radius);}return b;}});var jE={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:typeof Uint8ClampedArray!=='undefined'?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function jF(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};}jF.Handlers={handlers:[],add:function(a,b){this.handlers.push(a,b);},get:function(a){var b=this.handlers;for(var c=0,d=b.length;c<d;c+=2){var e=b[c];var f=b[c+1];if(e.test(a))return f;}return null;}};Object.assign(jF.prototype,{crossOrigin:undefined,extractUrlBase:function(a){var b=a.split('/');if(b.length===1)return './';b.pop();return b.join('/')+'/';},initMaterials:function(a,b,c){var d=[];for(var e=0;e<a.length;++e)d[e]=this.createMaterial(a[e],b,c);return d;},createMaterial:(function(){var a={NoBlending:v,NormalBlending:w,AdditiveBlending:x,SubtractiveBlending:y,MultiplyBlending:z,CustomBlending:A};var b=new cF();var c=new iR();var d=new jC();return function e(e,f,g){var h={};function i(a,b,d,e,i){var j=f+a;var k=jF.Handlers.get(j);var l;if(k!==null)l=k.load(j);else{c.setCrossOrigin(g);l=c.load(j);}if(b!==undefined){l.repeat.fromArray(b);if(b[0]!==1)l.wrapS=aq;if(b[1]!==1)l.wrapT=aq;}if(d!==undefined)l.offset.fromArray(d);if(e!==undefined){if(e[0]==='repeat')l.wrapS=aq;if(e[0]==='mirror')l.wrapS=as;if(e[1]==='repeat')l.wrapT=aq;if(e[1]==='mirror')l.wrapT=as;}if(i!==undefined)l.anisotropy=i;var m=bA.generateUUID();h[m]=l;return m;}var j={uuid:bA.generateUUID(),type:'MeshLambertMaterial'};for(var k in e){var l=e[k];switch(k){case 'DbgColor':case 'DbgIndex':case 'opticalDensity':case 'illumination':break;case 'DbgName':j.name=l;break;case 'blending':j.blending=a[l];break;case 'colorAmbient':case 'mapAmbient':console.warn('THREE.Loader.createMaterial:',k,'is no longer supported.');break;case 'colorDiffuse':j.color=b.fromArray(l).getHex();break;case 'colorSpecular':j.specular=b.fromArray(l).getHex();break;case 'colorEmissive':j.emissive=b.fromArray(l).getHex();break;case 'specularCoef':j.shininess=l;break;case 'shading':if(l.toLowerCase()==='basic')j.type='MeshBasicMaterial';if(l.toLowerCase()==='phong')j.type='MeshPhongMaterial';if(l.toLowerCase()==='standard')j.type='MeshStandardMaterial';break;case 'mapDiffuse':j.map=i(l,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy);break;case 'mapDiffuseRepeat':case 'mapDiffuseOffset':case 'mapDiffuseWrap':case 'mapDiffuseAnisotropy':break;case 'mapEmissive':j.emissiveMap=i(l,e.mapEmissiveRepeat,e.mapEmissiveOffset,e.mapEmissiveWrap,e.mapEmissiveAnisotropy);break;case 'mapEmissiveRepeat':case 'mapEmissiveOffset':case 'mapEmissiveWrap':case 'mapEmissiveAnisotropy':break;case 'mapLight':j.lightMap=i(l,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy);break;case 'mapLightRepeat':case 'mapLightOffset':case 'mapLightWrap':case 'mapLightAnisotropy':break;case 'mapAO':j.aoMap=i(l,e.mapAORepeat,e.mapAOOffset,e.mapAOWrap,e.mapAOAnisotropy);break;case 'mapAORepeat':case 'mapAOOffset':case 'mapAOWrap':case 'mapAOAnisotropy':break;case 'mapBump':j.bumpMap=i(l,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy);break;case 'mapBumpScale':j.bumpScale=l;break;case 'mapBumpRepeat':case 'mapBumpOffset':case 'mapBumpWrap':case 'mapBumpAnisotropy':break;case 'mapNormal':j.normalMap=i(l,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy);break;case 'mapNormalFactor':j.normalScale=[l,l];break;case 'mapNormalRepeat':case 'mapNormalOffset':case 'mapNormalWrap':case 'mapNormalAnisotropy':break;case 'mapSpecular':j.specularMap=i(l,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy);break;case 'mapSpecularRepeat':case 'mapSpecularOffset':case 'mapSpecularWrap':case 'mapSpecularAnisotropy':break;case 'mapMetalness':j.metalnessMap=i(l,e.mapMetalnessRepeat,e.mapMetalnessOffset,e.mapMetalnessWrap,e.mapMetalnessAnisotropy);break;case 'mapMetalnessRepeat':case 'mapMetalnessOffset':case 'mapMetalnessWrap':case 'mapMetalnessAnisotropy':break;case 'mapRoughness':j.roughnessMap=i(l,e.mapRoughnessRepeat,e.mapRoughnessOffset,e.mapRoughnessWrap,e.mapRoughnessAnisotropy);break;case 'mapRoughnessRepeat':case 'mapRoughnessOffset':case 'mapRoughnessWrap':case 'mapRoughnessAnisotropy':break;case 'mapAlpha':j.alphaMap=i(l,e.mapAlphaRepeat,e.mapAlphaOffset,e.mapAlphaWrap,e.mapAlphaAnisotropy);break;case 'mapAlphaRepeat':case 'mapAlphaOffset':case 'mapAlphaWrap':case 'mapAlphaAnisotropy':break;case 'flipSided':j.side=o;break;case 'doubleSided':j.side=p;break;case 'transparency':console.warn('THREE.Loader.createMaterial: transparency has been renamed to opacity');j.opacity=l;break;case 'depthTest':case 'depthWrite':case 'colorWrite':case 'opacity':case 'reflectivity':case 'transparent':case 'visible':case 'wireframe':j[k]=l;break;case 'vertexColors':if(l===true)j.vertexColors=u;if(l==='face')j.vertexColors=t;break;default:console.error('THREE.Loader.createMaterial: Unsupported',k,l);break;}}if(j.type==='MeshBasicMaterial')delete j.emissive;if(j.type!=='MeshPhongMaterial')delete j.specular;if(j.opacity<1)j.transparent=true;d.setTextures(h);return d.parse(j);};})()});function jG(a){if(typeof a==='boolean'){console.warn('THREE.JSONLoader: showStatus parameter has been removed from constructor.');a=undefined;}this.manager=(a!==undefined)?a:iK;this.withCredentials=false;}Object.assign(jG.prototype,{load:function(a,b,c,d){var e=this;var f=this.texturePath&&(typeof this.texturePath==="string")?this.texturePath:jF.prototype.extractUrlBase(a);var g=new iL(this.manager);g.setWithCredentials(this.withCredentials);g.load(a,function(c){var d=JSON.parse(c);var g=d.metadata;if(g!==undefined){var h=g.type;if(h!==undefined){if(h.toLowerCase()==='object'){console.error('THREE.JSONLoader: '+a+' should be loaded with THREE.ObjectLoader instead.');return;}if(h.toLowerCase()==='scene'){console.error('THREE.JSONLoader: '+a+' should be loaded with THREE.SceneLoader instead.');return;}}}var i=e.parse(d,f);b(i.geometry,i.materials);},c,d);},setTexturePath:function(a){this.texturePath=a;},parse:(function(){function a(a,b){function c(a,b){return a&(1<<b);}var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E=a.faces,F=a.vertices,G=a.normals,H=a.colors,I=a.scale,J=0;if(a.uvs!==undefined){for(d=0;d<a.uvs.length;d++)if(a.uvs[d].length)J++;for(d=0;d<J;d++)b.faceVertexUvs[d]=[];}g=0;h=F.length;while(g<h){u=new bI();u.x=F[g++]*I;u.y=F[g++]*I;u.z=F[g++]*I;b.vertices.push(u);}g=0;h=E.length;while(g<h){m=E[g++];n=c(m,0);o=c(m,1);p=c(m,3);q=c(m,4);r=c(m,5);s=c(m,6);t=c(m,7);if(n){w=new fD();w.a=E[g];w.b=E[g+1];w.c=E[g+3];x=new fD();x.a=E[g+1];x.b=E[g+2];x.c=E[g+3];g+=4;if(o){l=E[g++];w.materialIndex=l;x.materialIndex=l;}f=b.faces.length;if(p)for(d=0;d<J;d++){A=a.uvs[d];b.faceVertexUvs[d][f]=[];b.faceVertexUvs[d][f+1]=[];for(e=0;e<4;e++){k=E[g++];C=A[k*2];D=A[k*2+1];B=new bB(C,D);if(e!==2)b.faceVertexUvs[d][f].push(B);if(e!==0)b.faceVertexUvs[d][f+1].push(B);}}if(q){j=E[g++]*3;w.normal.set(G[j++],G[j++],G[j]);x.normal.copy(w.normal);}if(r)for(d=0;d<4;d++){j=E[g++]*3;z=new bI(G[j++],G[j++],G[j]);if(d!==2)w.vertexNormals.push(z);if(d!==0)x.vertexNormals.push(z);}if(s){i=E[g++];y=H[i];w.color.setHex(y);x.color.setHex(y);}if(t)for(d=0;d<4;d++){i=E[g++];y=H[i];if(d!==2)w.vertexColors.push(new cF(y));if(d!==0)x.vertexColors.push(new cF(y));}b.faces.push(w);b.faces.push(x);}else{v=new fD();v.a=E[g++];v.b=E[g++];v.c=E[g++];if(o){l=E[g++];v.materialIndex=l;}f=b.faces.length;if(p)for(d=0;d<J;d++){A=a.uvs[d];b.faceVertexUvs[d][f]=[];for(e=0;e<3;e++){k=E[g++];C=A[k*2];D=A[k*2+1];B=new bB(C,D);b.faceVertexUvs[d][f].push(B);}}if(q){j=E[g++]*3;v.normal.set(G[j++],G[j++],G[j]);}if(r)for(d=0;d<3;d++){j=E[g++]*3;z=new bI(G[j++],G[j++],G[j]);v.vertexNormals.push(z);}if(s){i=E[g++];v.color.setHex(H[i]);}if(t)for(d=0;d<3;d++){i=E[g++];v.vertexColors.push(new cF(H[i]));}b.faces.push(v);}}}function b(a,b){var c=(a.influencesPerVertex!==undefined)?a.influencesPerVertex:2;if(a.skinWeights)for(var d=0,e=a.skinWeights.length;d<e;d+=c){var f=a.skinWeights[d];var g=(c>1)?a.skinWeights[d+1]:0;var h=(c>2)?a.skinWeights[d+2]:0;var i=(c>3)?a.skinWeights[d+3]:0;b.skinWeights.push(new bE(f,g,h,i));}if(a.skinIndices)for(var d=0,e=a.skinIndices.length;d<e;d+=c){var j=a.skinIndices[d];var k=(c>1)?a.skinIndices[d+1]:0;var l=(c>2)?a.skinIndices[d+2]:0;var m=(c>3)?a.skinIndices[d+3]:0;b.skinIndices.push(new bE(j,k,l,m));}b.bones=a.bones;if(b.bones&&b.bones.length>0&&(b.skinWeights.length!==b.skinIndices.length||b.skinIndices.length!==b.vertices.length))console.warn('When skinning, number of vertices ('+b.vertices.length+'), skinIndices ('+b.skinIndices.length+'), and skinWeights ('+b.skinWeights.length+') should match.');}function c(a,b){var c=a.scale;if(a.morphTargets!==undefined)for(var d=0,e=a.morphTargets.length;d<e;d++){b.morphTargets[d]={};b.morphTargets[d].name=a.morphTargets[d].name;b.morphTargets[d].vertices=[];var f=b.morphTargets[d].vertices;var g=a.morphTargets[d].vertices;for(var h=0,i=g.length;h<i;h+=3){var j=new bI();j.x=g[h]*c;j.y=g[h+1]*c;j.z=g[h+2]*c;f.push(j);}}if(a.morphColors!==undefined&&a.morphColors.length>0){console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');var k=b.faces;var l=a.morphColors[0].colors;for(var d=0,e=k.length;d<e;d++)k[d].color.fromArray(l,d*3);}}function d(a,b){var c=[];var d=[];if(a.animation!==undefined)d.push(a.animation);if(a.animations!==undefined)if(a.animations.length)d=d.concat(a.animations);else d.push(a.animations);for(var e=0;e<d.length;e++){var f=jB.parseAnimation(d[e],b.bones);if(f)c.push(f);}if(b.morphTargets){var g=jB.CreateClipsFromMorphTargetSequences(b.morphTargets,10);c=c.concat(g);}if(c.length>0)b.animations=c;}return function(e,f){if(e.data!==undefined)e=e.data;if(e.scale!==undefined)e.scale=1.0/e.scale;else e.scale=1.0;var g=new fG();a(e,g);b(e,g);c(e,g);d(e,g);g.computeFaceNormals();g.computeBoundingSphere();if(e.materials===undefined||e.materials.length===0)return{geometry:g};else{var h=jF.prototype.initMaterials(e.materials,f,this.crossOrigin);return{geometry:g,materials:h};}};})()});function jH(a){this.manager=(a!==undefined)?a:iK;this.texturePath='';}Object.assign(jH.prototype,{load:function(a,b,c,d){if(this.texturePath==='')this.texturePath=a.substring(0,a.lastIndexOf('/')+1);var e=this;var f=new iL(e.manager);f.load(a,function(c){var f=null;try{f=JSON.parse(c);}catch(g){if(d!==undefined)d(g);console.error('THREE:ObjectLoader: Can\'t parse '+a+'.',g.message);return;}var h=f.metadata;if(h===undefined||h.type===undefined||h.type.toLowerCase()==='geometry'){console.error('THREE.ObjectLoader: Can\'t load '+a+'. Use THREE.JSONLoader instead.');return;}e.parse(f,b);},c,d);},setTexturePath:function(a){this.texturePath=a;},setCrossOrigin:function(a){this.crossOrigin=a;},parse:function(a,b){var c=this.parseGeometries(a.geometries);var d=this.parseImages(a.images,function(){if(b!==undefined)b(g);});var e=this.parseTextures(a.textures,d);var f=this.parseMaterials(a.materials,e);var g=this.parseObject(a.object,c,f);if(a.animations)g.animations=this.parseAnimations(a.animations);if(a.images===undefined||a.images.length===0)if(b!==undefined)b(g);return g;},parseGeometries:function(a){var b={};if(a!==undefined){var c=new jG();var d=new jD();for(var e=0,f=a.length;e<f;e++){var g;var h=a[e];switch(h.type){case 'PlaneGeometry':case 'PlaneBufferGeometry':g=new iw[h.type](h.width,h.height,h.widthSegments,h.heightSegments);break;case 'BoxGeometry':case 'BoxBufferGeometry':case 'CubeGeometry':g=new iw[h.type](h.width,h.height,h.depth,h.widthSegments,h.heightSegments,h.depthSegments);break;case 'CircleGeometry':case 'CircleBufferGeometry':g=new iw[h.type](h.radius,h.segments,h.thetaStart,h.thetaLength);break;case 'CylinderGeometry':case 'CylinderBufferGeometry':g=new iw[h.type](h.radiusTop,h.radiusBottom,h.height,h.radialSegments,h.heightSegments,h.openEnded,h.thetaStart,h.thetaLength);break;case 'ConeGeometry':case 'ConeBufferGeometry':g=new iw[h.type](h.radius,h.height,h.radialSegments,h.heightSegments,h.openEnded,h.thetaStart,h.thetaLength);break;case 'SphereGeometry':case 'SphereBufferGeometry':g=new iw[h.type](h.radius,h.widthSegments,h.heightSegments,h.phiStart,h.phiLength,h.thetaStart,h.thetaLength);break;case 'DodecahedronGeometry':case 'IcosahedronGeometry':case 'OctahedronGeometry':case 'TetrahedronGeometry':g=new iw[h.type](h.radius,h.detail);break;case 'RingGeometry':case 'RingBufferGeometry':g=new iw[h.type](h.innerRadius,h.outerRadius,h.thetaSegments,h.phiSegments,h.thetaStart,h.thetaLength);break;case 'TorusGeometry':case 'TorusBufferGeometry':g=new iw[h.type](h.radius,h.tube,h.radialSegments,h.tubularSegments,h.arc);break;case 'TorusKnotGeometry':case 'TorusKnotBufferGeometry':g=new iw[h.type](h.radius,h.tube,h.tubularSegments,h.radialSegments,h.p,h.q);break;case 'LatheGeometry':case 'LatheBufferGeometry':g=new iw[h.type](h.points,h.segments,h.phiStart,h.phiLength);break;case 'BufferGeometry':g=d.parse(h);break;case 'Geometry':g=c.parse(h,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+h.type+'"');continue;}g.uuid=h.uuid;if(h.name!==undefined)g.name=h.name;b[h.uuid]=g;}}return b;},parseMaterials:function(a,b){var c={};if(a!==undefined){var d=new jC();d.setTextures(b);for(var e=0,f=a.length;e<f;e++){var g=a[e];if(g.type==='MultiMaterial'){var h=[];for(var i=0;i<g.materials.length;i++)h.push(d.parse(g.materials[i]));c[g.uuid]=h;}else c[g.uuid]=d.parse(g);}}return c;},parseAnimations:function(a){var b=[];for(var c=0;c<a.length;c++){var d=jB.parse(a[c]);b.push(d);}return b;},parseImages:function(a,b){var c=this;var d={};function e(a){c.manager.itemStart(a);return g.load(a,function(){c.manager.itemEnd(a);},undefined,function(){c.manager.itemEnd(a);c.manager.itemError(a);});}if(a!==undefined&&a.length>0){var f=new iJ(b);var g=new iP(f);g.setCrossOrigin(this.crossOrigin);for(var h=0,i=a.length;h<i;h++){var j=a[h];var k=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(j.url)?j.url:c.texturePath+j.url;d[j.uuid]=e(k);}}return d;},parseTextures:function(a,b){function c(a,b){if(typeof a==='number')return a;console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.',a);return b[a];}var d={};if(a!==undefined)for(var e=0,f=a.length;e<f;e++){var g=a[e];if(g.image===undefined)console.warn('THREE.ObjectLoader: No "image" specified for',g.uuid);if(b[g.image]===undefined)console.warn('THREE.ObjectLoader: Undefined image',g.image);var h=new bD(b[g.image]);h.needsUpdate=true;h.uuid=g.uuid;if(g.name!==undefined)h.name=g.name;if(g.mapping!==undefined)h.mapping=c(g.mapping,jI);if(g.offset!==undefined)h.offset.fromArray(g.offset);if(g.repeat!==undefined)h.repeat.fromArray(g.repeat);if(g.wrap!==undefined){h.wrapS=c(g.wrap[0],jJ);h.wrapT=c(g.wrap[1],jJ);}if(g.minFilter!==undefined)h.minFilter=c(g.minFilter,jK);if(g.magFilter!==undefined)h.magFilter=c(g.magFilter,jK);if(g.anisotropy!==undefined)h.anisotropy=g.anisotropy;if(g.flipY!==undefined)h.flipY=g.flipY;d[g.uuid]=h;}return d;},parseObject:function(){var a=new bJ();return function b(b,c,d){var e;function f(a){if(c[a]===undefined)console.warn('THREE.ObjectLoader: Undefined geometry',a);return c[a];}function g(a){if(a===undefined)return undefined;if(Array.isArray(a)){var b=[];for(var c=0,e=a.length;c<e;c++){var f=a[c];if(d[f]===undefined)console.warn('THREE.ObjectLoader: Undefined material',f);b.push(d[f]);}return b;}if(d[a]===undefined)console.warn('THREE.ObjectLoader: Undefined material',a);return d[a];}switch(b.type){case 'Scene':e=new gZ();if(b.background!==undefined)if(Number.isInteger(b.background))e.background=new cF(b.background);if(b.fog!==undefined)if(b.fog.type==='Fog')e.fog=new gY(b.fog.color,b.fog.near,b.fog.far);else if(b.fog.type==='FogExp2')e.fog=new gX(b.fog.color,b.fog.density);break;case 'PerspectiveCamera':e=new fC(b.fov,b.aspect,b.near,b.far);if(b.focus!==undefined)e.focus=b.focus;if(b.zoom!==undefined)e.zoom=b.zoom;if(b.filmGauge!==undefined)e.filmGauge=b.filmGauge;if(b.filmOffset!==undefined)e.filmOffset=b.filmOffset;if(b.view!==undefined)e.view=Object.assign({},b.view);break;case 'OrthographicCamera':e=new fB(b.left,b.right,b.top,b.bottom,b.near,b.far);break;case 'AmbientLight':e=new jk(b.color,b.intensity);break;case 'DirectionalLight':e=new iZ(b.color,b.intensity);break;case 'PointLight':e=new iX(b.color,b.intensity,b.distance,b.decay);break;case 'RectAreaLight':e=new jl(b.color,b.intensity,b.width,b.height);break;case 'SpotLight':e=new iW(b.color,b.intensity,b.distance,b.angle,b.penumbra,b.decay);break;case 'HemisphereLight':e=new iT(b.color,b.groundColor,b.intensity);break;case 'SkinnedMesh':console.warn('THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.');case 'Mesh':var h=f(b.geometry);var i=g(b.material);if(h.bones&&h.bones.length>0)e=new ho(h,i);else e=new gj(h,i);break;case 'LOD':e=new hl();break;case 'Line':e=new hq(f(b.geometry),g(b.material),b.mode);break;case 'LineLoop':e=new hs(f(b.geometry),g(b.material));break;case 'LineSegments':e=new hr(f(b.geometry),g(b.material));break;case 'PointCloud':case 'Points':e=new hu(f(b.geometry),g(b.material));break;case 'Sprite':e=new hk(g(b.material));break;case 'Group':e=new hv();break;default:e=new fz();}e.uuid=b.uuid;if(b.name!==undefined)e.name=b.name;if(b.matrix!==undefined){a.fromArray(b.matrix);a.decompose(e.position,e.quaternion,e.scale);}else{if(b.position!==undefined)e.position.fromArray(b.position);if(b.rotation!==undefined)e.rotation.fromArray(b.rotation);if(b.quaternion!==undefined)e.quaternion.fromArray(b.quaternion);if(b.scale!==undefined)e.scale.fromArray(b.scale);}if(b.castShadow!==undefined)e.castShadow=b.castShadow;if(b.receiveShadow!==undefined)e.receiveShadow=b.receiveShadow;if(b.shadow){if(b.shadow.bias!==undefined)e.shadow.bias=b.shadow.bias;if(b.shadow.radius!==undefined)e.shadow.radius=b.shadow.radius;if(b.shadow.mapSize!==undefined)e.shadow.mapSize.fromArray(b.shadow.mapSize);if(b.shadow.camera!==undefined)e.shadow.camera=this.parseObject(b.shadow.camera);}if(b.visible!==undefined)e.visible=b.visible;if(b.userData!==undefined)e.userData=b.userData;if(b.children!==undefined){var j=b.children;for(var k=0;k<j.length;k++)e.add(this.parseObject(j[k],c,d));}if(b.type==='LOD'){var l=b.levels;for(var m=0;m<l.length;m++){var n=l[m];var o=e.getObjectByProperty('uuid',n.object);if(o!==undefined)e.addLevel(o,n.distance);}}return e;};}()});var jI={UVMapping:ai,CubeReflectionMapping:aj,CubeRefractionMapping:ak,EquirectangularReflectionMapping:al,EquirectangularRefractionMapping:am,SphericalReflectionMapping:an,CubeUVReflectionMapping:ao,CubeUVRefractionMapping:ap};var jJ={RepeatWrapping:aq,ClampToEdgeWrapping:ar,MirroredRepeatWrapping:as};var jK={NearestFilter:at,NearestMipMapNearestFilter:au,NearestMipMapLinearFilter:av,LinearFilter:aw,LinearMipMapNearestFilter:ax,LinearMipMapLinearFilter:ay};function jL(a,b,c,d,e){var f=(d-b)*0.5;var g=(e-c)*0.5;var h=a*a;var i=a*h;return(2*c-2*d+f+g)*i+(-3*c+3*d-2*f-g)*h+f*a+c;}function jM(a,b){var c=1-a;return c*c*b;}function jN(a,b){return 2*(1-a)*a*b;}function jO(a,b){return a*a*b;}function jP(a,b,c,d){return jM(a,b)+jN(a,c)+jO(a,d);}function jQ(a,b){var c=1-a;return c*c*c*b;}function jR(a,b){var c=1-a;return 3*c*c*a*b;}function jS(a,b){return 3*(1-a)*a*a*b;}function jT(a,b){return a*a*a*b;}function jU(a,b,c,d,e){return jQ(a,b)+jR(a,c)+jS(a,d)+jT(a,e);}function jV(){this.arcLengthDivisions=200;}Object.assign(jV.prototype,{getPoint:function(){console.warn('THREE.Curve: .getPoint() not implemented.');return null;},getPointAt:function(a){var b=this.getUtoTmapping(a);return this.getPoint(b);},getPoints:function(a){if(a===undefined)a=5;var b=[];for(var c=0;c<=a;c++)b.push(this.getPoint(c/a));return b;},getSpacedPoints:function(a){if(a===undefined)a=5;var b=[];for(var c=0;c<=a;c++)b.push(this.getPointAt(c/a));return b;},getLength:function(){var a=this.getLengths();return a[a.length-1];},getLengths:function(a){if(a===undefined)a=this.arcLengthDivisions;if(this.cacheArcLengths&&(this.cacheArcLengths.length===a+1)&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=false;var b=[];var c,d=this.getPoint(0);var e,f=0;b.push(0);for(e=1;e<=a;e++){c=this.getPoint(e/a);f+=c.distanceTo(d);b.push(f);d=c;}this.cacheArcLengths=b;return b;},updateArcLengths:function(){this.needsUpdate=true;this.getLengths();},getUtoTmapping:function(a,b){var c=this.getLengths();var d=0,e=c.length;var f;if(b)f=b;else f=a*c[e-1];var g=0,h=e-1,i;while(g<=h){d=Math.floor(g+(h-g)/2);i=c[d]-f;if(i<0)g=d+1;else if(i>0)h=d-1;else{h=d;break;}}d=h;if(c[d]===f)return d/(e-1);var j=c[d];var k=c[d+1];var l=k-j;var m=(f-j)/l;var n=(d+m)/(e-1);return n;},getTangent:function(a){var b=0.0001;var c=a-b;var d=a+b;if(c<0)c=0;if(d>1)d=1;var e=this.getPoint(c);var f=this.getPoint(d);var g=f.clone().sub(e);return g.normalize();},getTangentAt:function(a){var b=this.getUtoTmapping(a);return this.getTangent(b);},computeFrenetFrames:function(a,b){var c=new bI();var d=[];var e=[];var f=[];var g=new bI();var h=new bJ();var i,j,k;for(i=0;i<=a;i++){j=i/a;d[i]=this.getTangentAt(j);d[i].normalize();}e[0]=new bI();f[0]=new bI();var l=Number.MAX_VALUE;var m=Math.abs(d[0].x);var n=Math.abs(d[0].y);var o=Math.abs(d[0].z);if(m<=l){l=m;c.set(1,0,0);}if(n<=l){l=n;c.set(0,1,0);}if(o<=l)c.set(0,0,1);g.crossVectors(d[0],c).normalize();e[0].crossVectors(d[0],g);f[0].crossVectors(d[0],e[0]);for(i=1;i<=a;i++){e[i]=e[i-1].clone();f[i]=f[i-1].clone();g.crossVectors(d[i-1],d[i]);if(g.length()>Number.EPSILON){g.normalize();k=Math.acos(bA.clamp(d[i-1].dot(d[i]),-1,1));e[i].applyMatrix4(h.makeRotationAxis(g,k));}f[i].crossVectors(d[i],e[i]);}if(b===true){k=Math.acos(bA.clamp(e[0].dot(e[a]),-1,1));k/=a;if(d[0].dot(g.crossVectors(e[0],e[a]))>0)k=-k;for(i=1;i<=a;i++){e[i].applyMatrix4(h.makeRotationAxis(d[i],k*i));f[i].crossVectors(d[i],e[i]);}}return{tangents:d,normals:e,binormals:f};}});function jW(a,b){jV.call(this);this.v1=a;this.v2=b;}jW.prototype=Object.create(jV.prototype);jW.prototype.constructor=jW;jW.prototype.isLineCurve=true;jW.prototype.getPoint=function(a){if(a===1)return this.v2.clone();var b=this.v2.clone().sub(this.v1);b.multiplyScalar(a).add(this.v1);return b;};jW.prototype.getPointAt=function(a){return this.getPoint(a);};jW.prototype.getTangent=function(a){var b=this.v2.clone().sub(this.v1);return b.normalize();};function jX(){jV.call(this);this.curves=[];this.autoClose=false;}jX.prototype=Object.assign(Object.create(jV.prototype),{constructor:jX,add:function(a){this.curves.push(a);},closePath:function(){var a=this.curves[0].getPoint(0);var b=this.curves[this.curves.length-1].getPoint(1);if(!a.equals(b))this.curves.push(new jW(b,a));},getPoint:function(a){var b=a*this.getLength();var c=this.getCurveLengths();var d=0;while(d<c.length){if(c[d]>=b){var e=c[d]-b;var f=this.curves[d];var g=f.getLength();var h=g===0?0:1-e/g;return f.getPointAt(h);}d++;}return null;},getLength:function(){var a=this.getCurveLengths();return a[a.length-1];},updateArcLengths:function(){this.needsUpdate=true;this.cacheLengths=null;this.getCurveLengths();},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;var a=[],b=0;for(var c=0,d=this.curves.length;c<d;c++){b+=this.curves[c].getLength();a.push(b);}this.cacheLengths=a;return a;},getSpacedPoints:function(a){if(a===undefined)a=40;var b=[];for(var c=0;c<=a;c++)b.push(this.getPoint(c/a));if(this.autoClose)b.push(b[0]);return b;},getPoints:function(a){a=a||12;var b=[],c;for(var d=0,e=this.curves;d<e.length;d++){var f=e[d];var g=(f&&f.isEllipseCurve)?a*2:(f&&f.isLineCurve)?1:(f&&f.isSplineCurve)?a*f.points.length:a;var h=f.getPoints(g);for(var i=0;i<h.length;i++){var j=h[i];if(c&&c.equals(j))continue;b.push(j);c=j;}}if(this.autoClose&&b.length>1&&!b[b.length-1].equals(b[0]))b.push(b[0]);return b;},createPointsGeometry:function(a){var b=this.getPoints(a);return this.createGeometry(b);},createSpacedPointsGeometry:function(a){var b=this.getSpacedPoints(a);return this.createGeometry(b);},createGeometry:function(a){var b=new fG();for(var c=0,d=a.length;c<d;c++){var e=a[c];b.vertices.push(new bI(e.x,e.y,e.z||0));}return b;}});function jY(a,b,c,d,e,f,g,h){jV.call(this);this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=f;this.aClockwise=g;this.aRotation=h||0;}jY.prototype=Object.create(jV.prototype);jY.prototype.constructor=jY;jY.prototype.isEllipseCurve=true;jY.prototype.getPoint=function(a){var b=Math.PI*2;var c=this.aEndAngle-this.aStartAngle;var d=Math.abs(c)<Number.EPSILON;while(c<0)c+=b;while(c>b)c-=b;if(c<Number.EPSILON)if(d)c=0;else c=b;if(this.aClockwise===true&&!d)if(c===b)c=-b;else c=c-b;var e=this.aStartAngle+a*c;var f=this.aX+this.xRadius*Math.cos(e);var g=this.aY+this.yRadius*Math.sin(e);if(this.aRotation!==0){var h=Math.cos(this.aRotation);var i=Math.sin(this.aRotation);var j=f-this.aX;var k=g-this.aY;f=j*h-k*i+this.aX;g=j*i+k*h+this.aY;}return new bB(f,g);};function jZ(a){jV.call(this);this.points=(a===undefined)?[]:a;}jZ.prototype=Object.create(jV.prototype);jZ.prototype.constructor=jZ;jZ.prototype.isSplineCurve=true;jZ.prototype.getPoint=function(a){var b=this.points;var c=(b.length-1)*a;var d=Math.floor(c);var e=c-d;var f=b[d===0?d:d-1];var g=b[d];var h=b[d>b.length-2?b.length-1:d+1];var i=b[d>b.length-3?b.length-1:d+2];return new bB(jL(e,f.x,g.x,h.x,i.x),jL(e,f.y,g.y,h.y,i.y));};function kl(a,b,c,d){jV.call(this);this.v0=a;this.v1=b;this.v2=c;this.v3=d;}kl.prototype=Object.create(jV.prototype);kl.prototype.constructor=kl;kl.prototype.getPoint=function(a){var b=this.v0,c=this.v1,d=this.v2,e=this.v3;return new bB(jU(a,b.x,c.x,d.x,e.x),jU(a,b.y,c.y,d.y,e.y));};function km(a,b,c){jV.call(this);this.v0=a;this.v1=b;this.v2=c;}km.prototype=Object.create(jV.prototype);km.prototype.constructor=km;km.prototype.getPoint=function(a){var b=this.v0,c=this.v1,d=this.v2;return new bB(jP(a,b.x,c.x,d.x),jP(a,b.y,c.y,d.y));};var kn=Object.assign(Object.create(jX.prototype),{fromPoints:function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y);},moveTo:function(a,b){this.currentPoint.set(a,b);},lineTo:function(a,b){var c=new jW(this.currentPoint.clone(),new bB(a,b));this.curves.push(c);this.currentPoint.set(a,b);},quadraticCurveTo:function(a,b,c,d){var e=new km(this.currentPoint.clone(),new bB(a,b),new bB(c,d));this.curves.push(e);this.currentPoint.set(c,d);},bezierCurveTo:function(a,b,c,d,e,f){var g=new kl(this.currentPoint.clone(),new bB(a,b),new bB(c,d),new bB(e,f));this.curves.push(g);this.currentPoint.set(e,f);},splineThru:function(a){var b=[this.currentPoint.clone()].concat(a);var c=new jZ(b);this.curves.push(c);this.currentPoint.copy(a[a.length-1]);},arc:function(a,b,c,d,e,f){var g=this.currentPoint.x;var h=this.currentPoint.y;this.absarc(a+g,b+h,c,d,e,f);},absarc:function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f);},ellipse:function(a,b,c,d,e,f,g,h){var i=this.currentPoint.x;var j=this.currentPoint.y;this.absellipse(a+i,b+j,c,d,e,f,g,h);},absellipse:function(a,b,c,d,e,f,g,h){var i=new jY(a,b,c,d,e,f,g,h);if(this.curves.length>0){var j=i.getPoint(0);if(!j.equals(this.currentPoint))this.lineTo(j.x,j.y);}this.curves.push(i);var k=i.getPoint(1);this.currentPoint.copy(k);}});function ko(a){jX.call(this);this.currentPoint=new bB();if(a)this.fromPoints(a);}ko.prototype=kn;kn.constructor=ko;function kp(){ko.apply(this,arguments);this.holes=[];}kp.prototype=Object.assign(Object.create(kn),{constructor:kp,getPointsHoles:function(a){var b=[];for(var c=0,d=this.holes.length;c<d;c++)b[c]=this.holes[c].getPoints(a);return b;},extractAllPoints:function(a){return{shape:this.getPoints(a),holes:this.getPointsHoles(a)};},extractPoints:function(a){return this.extractAllPoints(a);}});function kq(){this.subPaths=[];this.currentPath=null;}Object.assign(kq.prototype,{moveTo:function(a,b){this.currentPath=new ko();this.subPaths.push(this.currentPath);this.currentPath.moveTo(a,b);},lineTo:function(a,b){this.currentPath.lineTo(a,b);},quadraticCurveTo:function(a,b,c,d){this.currentPath.quadraticCurveTo(a,b,c,d);},bezierCurveTo:function(a,b,c,d,e,f){this.currentPath.bezierCurveTo(a,b,c,d,e,f);},splineThru:function(a){this.currentPath.splineThru(a);},toShapes:function(a,b){function c(a){var b=[];for(var c=0,d=a.length;c<d;c++){var e=a[c];var f=new kp();f.curves=e.curves;b.push(f);}return b;}function d(a,b){var c=b.length;var d=false;for(var e=c-1,f=0;f<c;e=f++){var g=b[e];var h=b[f];var i=h.x-g.x;var j=h.y-g.y;if(Math.abs(j)>Number.EPSILON){if(j<0){g=b[f];i=-i;h=b[e];j=-j;}if((a.y<g.y)||(a.y>h.y))continue;if(a.y===g.y){if(a.x===g.x)return true;}else{var k=j*(a.x-g.x)-i*(a.y-g.y);if(k===0)return true;if(k<0)continue;d=!d;}}else{if(a.y!==g.y)continue;if(((h.x<=a.x)&&(a.x<=g.x))||((g.x<=a.x)&&(a.x<=h.x)))return true;}}return d;}var e=hS.isClockWise;var f=this.subPaths;if(f.length===0)return [];if(b===true)return c(f);var g,h,i,j=[];if(f.length===1){h=f[0];i=new kp();i.curves=h.curves;j.push(i);return j;}var k=!e(f[0].getPoints());k=a?!k:k;var l=[];var m=[];var n=[];var o=0;var p;m[o]=undefined;n[o]=[];for(var q=0,r=f.length;q<r;q++){h=f[q];p=h.getPoints();g=e(p);g=a?!g:g;if(g){if((!k)&&m[o])o++;m[o]={s:new kp(),p:p};m[o].s.curves=h.curves;if(k)o++;n[o]=[];}else n[o].push({h:h,p:p[0]});}if(!m[0])return c(f);if(m.length>1){var s=false;var t=[];for(var u=0,v=m.length;u<v;u++)l[u]=[];for(var u=0,v=m.length;u<v;u++){var w=n[u];for(var x=0;x<w.length;x++){var y=w[x];var z=true;for(var A=0;A<m.length;A++)if(d(y.p,m[A].p)){if(u!==A)t.push({froms:u,tos:A,hole:x});if(z){z=false;l[A].push(y);}else s=true;}if(z)l[u].push(y);}}if(t.length>0)if(!s)n=l;}var B;for(var q=0,C=m.length;q<C;q++){i=m[q].s;j.push(i);B=n[q];for(var D=0,E=B.length;D<E;D++)i.holes.push(B[D].h);}return j;}});function kr(a){this.data=a;}Object.assign(kr.prototype,{isFont:true,generateShapes:function(a,b,c){function d(a){var c=String(a).split('');var d=b/f.resolution;var g=(f.boundingBox.yMax-f.boundingBox.yMin+f.underlineThickness)*d;var h=0,i=0;var j=[];for(var k=0;k<c.length;k++){var l=c[k];if(l==='\n'){h=0;i-=g;}else{var m=e(l,d,h,i);h+=m.offsetX;j.push(m.path);}}return j;}function e(a,b,d,e){var g=f.glyphs[a]||f.glyphs['?'];if(!g)return;var h=new kq();var i=[];var j,k,l,m,n,o,p,q,r,s,t;if(g.o){var u=g._cachedOutline||(g._cachedOutline=g.o.split(' '));for(var v=0,w=u.length;v<w;){var x=u[v++];switch(x){case 'm':j=u[v++]*b+d;k=u[v++]*b+e;h.moveTo(j,k);break;case 'l':j=u[v++]*b+d;k=u[v++]*b+e;h.lineTo(j,k);break;case 'q':l=u[v++]*b+d;m=u[v++]*b+e;p=u[v++]*b+d;q=u[v++]*b+e;h.quadraticCurveTo(p,q,l,m);t=i[i.length-1];if(t){n=t.x;o=t.y;for(var y=1;y<=c;y++){var z=y/c;jP(z,n,p,l);jP(z,o,q,m);}}break;case 'b':l=u[v++]*b+d;m=u[v++]*b+e;p=u[v++]*b+d;q=u[v++]*b+e;r=u[v++]*b+d;s=u[v++]*b+e;h.bezierCurveTo(p,q,r,s,l,m);t=i[i.length-1];if(t){n=t.x;o=t.y;for(var y=1;y<=c;y++){var z=y/c;jU(z,n,p,r,l);jU(z,o,q,s,m);}}break;}}}return{offsetX:g.ha*b,path:h};}if(b===undefined)b=100;if(c===undefined)c=4;var f=this.data;var g=d(a);var h=[];for(var i=0,j=g.length;i<j;i++)Array.prototype.push.apply(h,g[i].toShapes());return h;}});function ks(a){this.manager=(a!==undefined)?a:iK;}Object.assign(ks.prototype,{load:function(a,b,c,d){var e=this;var f=new iL(this.manager);f.load(a,function(a){var c;try{c=JSON.parse(a);}catch(d){console.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.');c=JSON.parse(a.substring(65,a.length-2));}var f=e.parse(c);if(b)b(f);},c,d);},parse:function(a){return new kr(a);}});var kt;var ku={getContext:function(){if(kt===undefined)kt=new (window.AudioContext||window.webkitAudioContext)();return kt;},setContext:function(a){kt=a;}};function kv(a){this.manager=(a!==undefined)?a:iK;}Object.assign(kv.prototype,{load:function(a,b,c,d){var e=new iL(this.manager);e.setResponseType('arraybuffer');e.load(a,function(a){var c=ku.getContext();c.decodeAudioData(a,function(a){b(a);});},c,d);}});function kw(){this.type='StereoCamera';this.aspect=1;this.eyeSep=0.064;this.cameraL=new fC();this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=false;this.cameraR=new fC();this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=false;}Object.assign(kw.prototype,{update:(function(){var a,b,c,d,e,f,g,h;var i=new bJ();var j=new bJ();return function k(k){var l=a!==this||b!==k.focus||c!==k.fov||d!==k.aspect*this.aspect||e!==k.near||f!==k.far||g!==k.zoom||h!==this.eyeSep;if(l){a=this;b=k.focus;c=k.fov;d=k.aspect*this.aspect;e=k.near;f=k.far;g=k.zoom;var m=k.projectionMatrix.clone();h=this.eyeSep/2;var n=h*e/b;var o=(e*Math.tan(bA.DEG2RAD*c*0.5))/g;var p,q;j.elements[12]=-h;i.elements[12]=h;p=-o*d+n;q=o*d+n;m.elements[0]=2*e/(q-p);m.elements[8]=(q+p)/(q-p);this.cameraL.projectionMatrix.copy(m);p=-o*d-n;q=o*d-n;m.elements[0]=2*e/(q-p);m.elements[8]=(q+p)/(q-p);this.cameraR.projectionMatrix.copy(m);}this.cameraL.matrixWorld.copy(k.matrixWorld).multiply(j);this.cameraR.matrixWorld.copy(k.matrixWorld).multiply(i);};})()});function kx(a,b,c){fz.call(this);this.type='CubeCamera';var d=90,e=1;var f=new fC(d,e,a,b);f.up.set(0,-1,0);f.lookAt(new bI(1,0,0));this.add(f);var g=new fC(d,e,a,b);g.up.set(0,-1,0);g.lookAt(new bI(-1,0,0));this.add(g);var h=new fC(d,e,a,b);h.up.set(0,0,1);h.lookAt(new bI(0,1,0));this.add(h);var i=new fC(d,e,a,b);i.up.set(0,0,-1);i.lookAt(new bI(0,-1,0));this.add(i);var j=new fC(d,e,a,b);j.up.set(0,-1,0);j.lookAt(new bI(0,0,1));this.add(j);var k=new fC(d,e,a,b);k.up.set(0,-1,0);k.lookAt(new bI(0,0,-1));this.add(k);var l={format:aM,magFilter:aw,minFilter:aw};this.renderTarget=new bG(c,c,l);this.renderTarget.texture.name="CubeCamera";this.update=function(a,b){if(this.parent===null)this.updateMatrixWorld();var c=this.renderTarget;var d=c.texture.generateMipmaps;c.texture.generateMipmaps=false;c.activeCubeFace=0;a.render(b,f,c);c.activeCubeFace=1;a.render(b,g,c);c.activeCubeFace=2;a.render(b,h,c);c.activeCubeFace=3;a.render(b,i,c);c.activeCubeFace=4;a.render(b,j,c);c.texture.generateMipmaps=d;c.activeCubeFace=5;a.render(b,k,c);a.setRenderTarget(null);};this.clear=function(a,b,c,d){var e=this.renderTarget;for(var f=0;f<6;f++){e.activeCubeFace=f;a.setRenderTarget(e);a.clear(b,c,d);}a.setRenderTarget(null);};}kx.prototype=Object.create(fz.prototype);kx.prototype.constructor=kx;function ky(){fz.call(this);this.type='AudioListener';this.context=ku.getContext();this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.filter=null;}ky.prototype=Object.assign(Object.create(fz.prototype),{constructor:ky,getInput:function(){return this.gain;},removeFilter:function(){if(this.filter!==null){this.gain.disconnect(this.filter);this.filter.disconnect(this.context.destination);this.gain.connect(this.context.destination);this.filter=null;}},getFilter:function(){return this.filter;},setFilter:function(a){if(this.filter!==null){this.gain.disconnect(this.filter);this.filter.disconnect(this.context.destination);}else this.gain.disconnect(this.context.destination);this.filter=a;this.gain.connect(this.filter);this.filter.connect(this.context.destination);},getMasterVolume:function(){return this.gain.gain.value;},setMasterVolume:function(a){this.gain.gain.value=a;},updateMatrixWorld:(function(){var a=new bI();var b=new bH();var c=new bI();var d=new bI();return function e(e){fz.prototype.updateMatrixWorld.call(this,e);var f=this.context.listener;var g=this.up;this.matrixWorld.decompose(a,b,c);d.set(0,0,-1).applyQuaternion(b);if(f.positionX){f.positionX.setValueAtTime(a.x,this.context.currentTime);f.positionY.setValueAtTime(a.y,this.context.currentTime);f.positionZ.setValueAtTime(a.z,this.context.currentTime);f.forwardX.setValueAtTime(d.x,this.context.currentTime);f.forwardY.setValueAtTime(d.y,this.context.currentTime);f.forwardZ.setValueAtTime(d.z,this.context.currentTime);f.upX.setValueAtTime(g.x,this.context.currentTime);f.upY.setValueAtTime(g.y,this.context.currentTime);f.upZ.setValueAtTime(g.z,this.context.currentTime);}else{f.setPosition(a.x,a.y,a.z);f.setOrientation(d.x,d.y,d.z,g.x,g.y,g.z);}};})()});function kz(a){fz.call(this);this.type='Audio';this.context=a.context;this.gain=this.context.createGain();this.gain.connect(a.getInput());this.autoplay=false;this.buffer=null;this.loop=false;this.startTime=0;this.playbackRate=1;this.isPlaying=false;this.hasPlaybackControl=true;this.sourceType='empty';this.filters=[];}kz.prototype=Object.assign(Object.create(fz.prototype),{constructor:kz,getOutput:function(){return this.gain;},setNodeSource:function(a){this.hasPlaybackControl=false;this.sourceType='audioNode';this.source=a;this.connect();return this;},setBuffer:function(a){this.buffer=a;this.sourceType='buffer';if(this.autoplay)this.play();return this;},play:function(){if(this.isPlaying===true){console.warn('THREE.Audio: Audio is already playing.');return;}if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}var a=this.context.createBufferSource();a.buffer=this.buffer;a.loop=this.loop;a.onended=this.onEnded.bind(this);a.playbackRate.setValueAtTime(this.playbackRate,this.startTime);a.start(0,this.startTime);this.isPlaying=true;this.source=a;return this.connect();},pause:function(){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this.source.stop();this.startTime=this.context.currentTime;this.isPlaying=false;return this;},stop:function(){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this.source.stop();this.startTime=0;this.isPlaying=false;return this;},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var a=1,b=this.filters.length;a<b;a++)this.filters[a-1].connect(this.filters[a]);this.filters[this.filters.length-1].connect(this.getOutput());}else this.source.connect(this.getOutput());return this;},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var a=1,b=this.filters.length;a<b;a++)this.filters[a-1].disconnect(this.filters[a]);this.filters[this.filters.length-1].disconnect(this.getOutput());}else this.source.disconnect(this.getOutput());return this;},getFilters:function(){return this.filters;},setFilters:function(a){if(!a)a=[];if(this.isPlaying===true){this.disconnect();this.filters=a;this.connect();}else this.filters=a;return this;},getFilter:function(){return this.getFilters()[0];},setFilter:function(a){return this.setFilters(a?[a]:[]);},setPlaybackRate:function(a){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this.playbackRate=a;if(this.isPlaying===true)this.source.playbackRate.setValueAtTime(this.playbackRate,this.context.currentTime);return this;},getPlaybackRate:function(){return this.playbackRate;},onEnded:function(){this.isPlaying=false;},getLoop:function(){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return false;}return this.loop;},setLoop:function(a){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this.loop=a;if(this.isPlaying===true)this.source.loop=this.loop;return this;},getVolume:function(){return this.gain.gain.value;},setVolume:function(a){this.gain.gain.value=a;return this;}});function kA(a){kz.call(this,a);this.panner=this.context.createPanner();this.panner.connect(this.gain);}kA.prototype=Object.assign(Object.create(kz.prototype),{constructor:kA,getOutput:function(){return this.panner;},getRefDistance:function(){return this.panner.refDistance;},setRefDistance:function(a){this.panner.refDistance=a;},getRolloffFactor:function(){return this.panner.rolloffFactor;},setRolloffFactor:function(a){this.panner.rolloffFactor=a;},getDistanceModel:function(){return this.panner.distanceModel;},setDistanceModel:function(a){this.panner.distanceModel=a;},getMaxDistance:function(){return this.panner.maxDistance;},setMaxDistance:function(a){this.panner.maxDistance=a;},updateMatrixWorld:(function(){var a=new bI();return function b(b){fz.prototype.updateMatrixWorld.call(this,b);a.setFromMatrixPosition(this.matrixWorld);this.panner.setPosition(a.x,a.y,a.z);};})()});function kB(a,b){this.analyser=a.context.createAnalyser();this.analyser.fftSize=b!==undefined?b:2048;this.data=new Uint8Array(this.analyser.frequencyBinCount);a.getOutput().connect(this.analyser);}Object.assign(kB.prototype,{getFrequencyData:function(){this.analyser.getByteFrequencyData(this.data);return this.data;},getAverageFrequency:function(){var a=0,b=this.getFrequencyData();for(var c=0;c<b.length;c++)a+=b[c];return a/b.length;}});function kC(a,b,c){this.binding=a;this.valueSize=c;var d=Float64Array,e;switch(b){case 'quaternion':e=this._slerp;break;case 'string':case 'bool':d=Array;e=this._select;break;default:e=this._lerp;}this.buffer=new d(c*4);this._mixBufferRegion=e;this.cumulativeWeight=0;this.useCount=0;this.referenceCount=0;}Object.assign(kC.prototype,{accumulate:function(a,b){var c=this.buffer,d=this.valueSize,e=a*d+d,f=this.cumulativeWeight;if(f===0){for(var g=0;g!==d;++g)c[e+g]=c[g];f=b;}else{f+=b;var h=b/f;this._mixBufferRegion(c,e,0,h,d);}this.cumulativeWeight=f;},apply:function(a){var b=this.valueSize,c=this.buffer,d=a*b+b,e=this.cumulativeWeight,f=this.binding;this.cumulativeWeight=0;if(e<1){var g=b*3;this._mixBufferRegion(c,d,g,1-e,b);}for(var h=b,i=b+b;h!==i;++h)if(c[h]!==c[h+b]){f.setValue(c,d);break;}},saveOriginalState:function(){var a=this.binding;var b=this.buffer,c=this.valueSize,d=c*3;a.getValue(b,d);for(var e=c,f=d;e!==f;++e)b[e]=b[d+(e%c)];this.cumulativeWeight=0;},restoreOriginalState:function(){var a=this.valueSize*3;this.binding.setValue(this.buffer,a);},_select:function(a,b,c,d,e){if(d>=0.5)for(var f=0;f!==e;++f)a[b+f]=a[c+f];},_slerp:function(a,b,c,d){bH.slerpFlat(a,b,a,b,a,c,d);},_lerp:function(a,b,c,d,e){var f=1-d;for(var g=0;g!==e;++g){var h=b+g;a[h]=a[h]*f+a[c+g]*d;}}});function kD(a,b,c){var d=c||kE.parseTrackName(b);this._targetGroup=a;this._bindings=a.subscribe_(b,d);}Object.assign(kD.prototype,{getValue:function(a,b){this.bind();var c=this._targetGroup.nCachedObjects_,d=this._bindings[c];if(d!==undefined)d.getValue(a,b);},setValue:function(a,b){var c=this._bindings;for(var d=this._targetGroup.nCachedObjects_,e=c.length;d!==e;++d)c[d].setValue(a,b);},bind:function(){var a=this._bindings;for(var b=this._targetGroup.nCachedObjects_,c=a.length;b!==c;++b)a[b].bind();},unbind:function(){var a=this._bindings;for(var b=this._targetGroup.nCachedObjects_,c=a.length;b!==c;++b)a[b].unbind();}});function kE(a,b,c){this.path=b;this.parsedPath=c||kE.parseTrackName(b);this.node=kE.findNode(a,this.parsedPath.nodeName)||a;this.rootNode=a;}Object.assign(kE,{Composite:kD,create:function(a,b,c){if(!(a&&a.isAnimationObjectGroup))return new kE(a,b,c);else return new kE.Composite(a,b,c);},sanitizeNodeName:function(a){return a.replace(/\s/g,'_').replace(/[^\w-]/g,'');},parseTrackName:function(){var a=/((?:[\w-]+[\/:])*)/;var b=/([\w-\.]+)?/;var c=/(?:\.([\w-]+)(?:\[(.+)\])?)?/;var d=/\.([\w-]+)(?:\[(.+)\])?/;var e=new RegExp(''+'^'+a.source+b.source+c.source+d.source+'$');var f=['material','materials','bones'];return function(a){var b=e.exec(a);if(!b)throw new Error('PropertyBinding: Cannot parse trackName: '+a);var c={nodeName:b[2],objectName:b[3],objectIndex:b[4],propertyName:b[5],propertyIndex:b[6]};var d=c.nodeName&&c.nodeName.lastIndexOf('.');if(d!==undefined&&d!==-1){var g=c.nodeName.substring(d+1);if(f.indexOf(g)!==-1){c.nodeName=c.nodeName.substring(0,d);c.objectName=g;}}if(c.propertyName===null||c.propertyName.length===0)throw new Error('PropertyBinding: can not parse propertyName from trackName: '+a);return c;};}(),findNode:function(a,b){if(!b||b===""||b==="root"||b==="."||b===-1||b===a.name||b===a.uuid)return a;if(a.skeleton){var c=function(a){for(var c=0;c<a.bones.length;c++){var d=a.bones[c];if(d.name===b)return d;}return null;};var d=c(a.skeleton);if(d)return d;}if(a.children){var e=function(a){for(var c=0;c<a.length;c++){var d=a[c];if(d.name===b||d.uuid===b)return d;var f=e(d.children);if(f)return f;}return null;};var f=e(a.children);if(f)return f;}return null;}});Object.assign(kE.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function kF(a,b){a[b]=this.node[this.propertyName];},function kG(a,b){var c=this.resolvedProperty;for(var d=0,e=c.length;d!==e;++d)a[b++]=c[d];},function kH(a,b){a[b]=this.resolvedProperty[this.propertyIndex];},function kI(a,b){this.resolvedProperty.toArray(a,b);}],SetterByBindingTypeAndVersioning:[[function kJ(a,b){this.node[this.propertyName]=a[b];},function kK(a,b){this.node[this.propertyName]=a[b];this.targetObject.needsUpdate=true;},function kL(a,b){this.node[this.propertyName]=a[b];this.targetObject.matrixWorldNeedsUpdate=true;}],[function kM(a,b){var c=this.resolvedProperty;for(var d=0,e=c.length;d!==e;++d)c[d]=a[b++];},function kN(a,b){var c=this.resolvedProperty;for(var d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.needsUpdate=true;},function kO(a,b){var c=this.resolvedProperty;for(var d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.matrixWorldNeedsUpdate=true;}],[function kP(a,b){this.resolvedProperty[this.propertyIndex]=a[b];},function kQ(a,b){this.resolvedProperty[this.propertyIndex]=a[b];this.targetObject.needsUpdate=true;},function kR(a,b){this.resolvedProperty[this.propertyIndex]=a[b];this.targetObject.matrixWorldNeedsUpdate=true;}],[function kS(a,b){this.resolvedProperty.fromArray(a,b);},function kT(a,b){this.resolvedProperty.fromArray(a,b);this.targetObject.needsUpdate=true;},function kU(a,b){this.resolvedProperty.fromArray(a,b);this.targetObject.matrixWorldNeedsUpdate=true;}]],getValue:function kV(a,b){this.bind();this.getValue(a,b);},setValue:function kV(a,b){this.bind();this.setValue(a,b);},bind:function(){var a=this.node,b=this.parsedPath,c=b.objectName,d=b.propertyName,e=b.propertyIndex;if(!a){a=kE.findNode(this.rootNode,b.nodeName)||this.rootNode;this.node=a;}this.getValue=this._getValue_unavailable;this.setValue=this._setValue_unavailable;if(!a){console.error('THREE.PropertyBinding: Trying to update node for track: '+this.path+' but it wasn\'t found.');return;}if(c){var f=b.objectIndex;switch(c){case 'materials':if(!a.material){console.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.',this);return;}if(!a.material.materials){console.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.',this);return;}a=a.material.materials;break;case 'bones':if(!a.skeleton){console.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.',this);return;}a=a.skeleton.bones;for(var g=0;g<a.length;g++)if(a[g].name===f){f=g;break;}break;default:if(a[c]===undefined){console.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.',this);return;}a=a[c];}if(f!==undefined){if(a[f]===undefined){console.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.',this,a);return;}a=a[f];}}var h=a[d];if(h===undefined){var i=b.nodeName;console.error('THREE.PropertyBinding: Trying to update property for track: '+i+'.'+d+' but it wasn\'t found.',a);return;}var j=this.Versioning.None;if(a.needsUpdate!==undefined){j=this.Versioning.NeedsUpdate;this.targetObject=a;}else if(a.matrixWorldNeedsUpdate!==undefined){j=this.Versioning.MatrixWorldNeedsUpdate;this.targetObject=a;}var k=this.BindingType.Direct;if(e!==undefined){if(d==="morphTargetInfluences"){if(!a.geometry){console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.',this);return;}if(a.geometry.isBufferGeometry){if(!a.geometry.morphAttributes){console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.',this);return;}for(var g=0;g<this.node.geometry.morphAttributes.position.length;g++)if(a.geometry.morphAttributes.position[g].name===e){e=g;break;}}else{if(!a.geometry.morphTargets){console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.',this);return;}for(var g=0;g<this.node.geometry.morphTargets.length;g++)if(a.geometry.morphTargets[g].name===e){e=g;break;}}}k=this.BindingType.ArrayElement;this.resolvedProperty=h;this.propertyIndex=e;}else if(h.fromArray!==undefined&&h.toArray!==undefined){k=this.BindingType.HasFromToArray;this.resolvedProperty=h;}else if(Array.isArray(h)){k=this.BindingType.EntireArray;this.resolvedProperty=h;}else this.propertyName=d;this.getValue=this.GetterByBindingType[k];this.setValue=this.SetterByBindingTypeAndVersioning[k][j];},unbind:function(){this.node=null;this.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound;}});Object.assign(kE.prototype,{_getValue_unbound:kE.prototype.getValue,_setValue_unbound:kE.prototype.setValue});function kW(a){this.uuid=bA.generateUUID();this._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;var b={};this._indicesByUUID=b;for(var c=0,d=arguments.length;c!==d;++c)b[arguments[c].uuid]=c;this._paths=[];this._parsedPaths=[];this._bindings=[];this._bindingsIndicesByPath={};var e=this;this.stats={objects:{get total(){return e._objects.length;},get inUse(){return this.total-e.nCachedObjects_;}},get bindingsPerObject(){return e._bindings.length;}};}Object.assign(kW.prototype,{isAnimationObjectGroup:true,add:function(a){var b=this._objects,c=b.length,d=this.nCachedObjects_,e=this._indicesByUUID,f=this._paths,g=this._parsedPaths,h=this._bindings,i=h.length;for(var j=0,k=arguments.length;j!==k;++j){var l=arguments[j],m=l.uuid,n=e[m],o=undefined;if(n===undefined){n=c++;e[m]=n;b.push(l);for(var p=0,q=i;p!==q;++p)h[p].push(new kE(l,f[p],g[p]));}else if(n<d){o=b[n];var r=--d,s=b[r];e[s.uuid]=n;b[n]=s;e[m]=r;b[r]=l;for(var p=0,q=i;p!==q;++p){var t=h[p],u=t[r],v=t[n];t[n]=u;if(v===undefined)v=new kE(l,f[p],g[p]);t[r]=v;}}else if(b[n]!==o)console.error('THREE.AnimationObjectGroup: Different objects with the same UUID '+'detected. Clean the caches or recreate your infrastructure when reloading scenes.');}this.nCachedObjects_=d;},remove:function(a){var b=this._objects,c=this.nCachedObjects_,d=this._indicesByUUID,e=this._bindings,f=e.length;for(var g=0,h=arguments.length;g!==h;++g){var i=arguments[g],j=i.uuid,k=d[j];if(k!==undefined&&k>=c){var l=c++,m=b[l];d[m.uuid]=k;b[k]=m;d[j]=l;b[l]=i;for(var n=0,o=f;n!==o;++n){var p=e[n],q=p[l],r=p[k];p[k]=q;p[l]=r;}}}this.nCachedObjects_=c;},uncache:function(a){var b=this._objects,c=b.length,d=this.nCachedObjects_,e=this._indicesByUUID,f=this._bindings,g=f.length;for(var h=0,i=arguments.length;h!==i;++h){var j=arguments[h],k=j.uuid,l=e[k];if(l!==undefined){delete e[k];if(l<d){var m=--d,n=b[m],o=--c,p=b[o];e[n.uuid]=l;b[l]=n;e[p.uuid]=m;b[m]=p;b.pop();for(var q=0,r=g;q!==r;++q){var s=f[q],t=s[m],u=s[o];s[l]=t;s[m]=u;s.pop();}}else{var o=--c,p=b[o];e[p.uuid]=l;b[l]=p;b.pop();for(var q=0,r=g;q!==r;++q){var s=f[q];s[l]=s[o];s.pop();}}}}this.nCachedObjects_=d;},subscribe_:function(a,b){var c=this._bindingsIndicesByPath,d=c[a],e=this._bindings;if(d!==undefined)return e[d];var f=this._paths,g=this._parsedPaths,h=this._objects,i=h.length,j=this.nCachedObjects_,k=new Array(i);d=e.length;c[a]=d;f.push(a);g.push(b);e.push(k);for(var l=j,m=h.length;l!==m;++l){var n=h[l];k[l]=new kE(n,a,b);}return k;},unsubscribe_:function(a){var b=this._bindingsIndicesByPath,c=b[a];if(c!==undefined){var d=this._paths,e=this._parsedPaths,f=this._bindings,g=f.length-1,h=f[g],i=a[g];b[i]=c;f[c]=h;f.pop();e[c]=e[g];e.pop();d[c]=d[g];d.pop();}}});function kX(a,b,c){this._mixer=a;this._clip=b;this._localRoot=c||null;var d=b.tracks,e=d.length,f=new Array(e);var g={endingStart:bk,endingEnd:bk};for(var h=0;h!==e;++h){var i=d[h].createInterpolant(null);f[h]=i;i.settings=g;}this._interpolantSettings=g;this._interpolants=f;this._propertyBindings=new Array(e);this._cacheIndex=null;this._byClipCacheIndex=null;this._timeScaleInterpolant=null;this._weightInterpolant=null;this.loop=bf;this._loopCount=-1;this._startTime=null;this.time=0;this.timeScale=1;this._effectiveTimeScale=1;this.weight=1;this._effectiveWeight=1;this.repetitions=Infinity;this.paused=false;this.enabled=true;this.clampWhenFinished=false;this.zeroSlopeAtStart=true;this.zeroSlopeAtEnd=true;}Object.assign(kX.prototype,{play:function(){this._mixer._activateAction(this);return this;},stop:function(){this._mixer._deactivateAction(this);return this.reset();},reset:function(){this.paused=false;this.enabled=true;this.time=0;this._loopCount=-1;this._startTime=null;return this.stopFading().stopWarping();},isRunning:function(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this);},isScheduled:function(){return this._mixer._isActiveAction(this);},startAt:function(a){this._startTime=a;return this;},setLoop:function(a,b){this.loop=a;this.repetitions=b;return this;},setEffectiveWeight:function(a){this.weight=a;this._effectiveWeight=this.enabled?a:0;return this.stopFading();},getEffectiveWeight:function(){return this._effectiveWeight;},fadeIn:function(a){return this._scheduleFading(a,0,1);},fadeOut:function(a){return this._scheduleFading(a,1,0);},crossFadeFrom:function(a,b,c){a.fadeOut(b);this.fadeIn(b);if(c){var d=this._clip.duration,e=a._clip.duration,f=e/d,g=d/e;a.warp(1.0,f,b);this.warp(g,1.0,b);}return this;},crossFadeTo:function(a,b,c){return a.crossFadeFrom(this,b,c);},stopFading:function(){var a=this._weightInterpolant;if(a!==null){this._weightInterpolant=null;this._mixer._takeBackControlInterpolant(a);}return this;},setEffectiveTimeScale:function(a){this.timeScale=a;this._effectiveTimeScale=this.paused?0:a;return this.stopWarping();},getEffectiveTimeScale:function(){return this._effectiveTimeScale;},setDuration:function(a){this.timeScale=this._clip.duration/a;return this.stopWarping();},syncWith:function(a){this.time=a.time;this.timeScale=a.timeScale;return this.stopWarping();},halt:function(a){return this.warp(this._effectiveTimeScale,0,a);},warp:function(a,b,c){var d=this._mixer,e=d.time,f=this._timeScaleInterpolant,g=this.timeScale;if(f===null){f=d._lendControlInterpolant();this._timeScaleInterpolant=f;}var h=f.parameterPositions,i=f.sampleValues;h[0]=e;h[1]=e+c;i[0]=a/g;i[1]=b/g;return this;},stopWarping:function(){var a=this._timeScaleInterpolant;if(a!==null){this._timeScaleInterpolant=null;this._mixer._takeBackControlInterpolant(a);}return this;},getMixer:function(){return this._mixer;},getClip:function(){return this._clip;},getRoot:function(){return this._localRoot||this._mixer._root;},_update:function(a,b,c,d){if(!this.enabled){this._updateWeight(a);return;}var e=this._startTime;if(e!==null){var f=(a-e)*c;if(f<0||c===0)return;this._startTime=null;b=c*f;}b*=this._updateTimeScale(a);var g=this._updateTime(b);var h=this._updateWeight(a);if(h>0){var i=this._interpolants;var j=this._propertyBindings;for(var k=0,l=i.length;k!==l;++k){i[k].evaluate(g);j[k].accumulate(d,h);}}},_updateWeight:function(a){var b=0;if(this.enabled){b=this.weight;var c=this._weightInterpolant;if(c!==null){var d=c.evaluate(a)[0];b*=d;if(a>c.parameterPositions[1]){this.stopFading();if(d===0)this.enabled=false;}}}this._effectiveWeight=b;return b;},_updateTimeScale:function(a){var b=0;if(!this.paused){b=this.timeScale;var c=this._timeScaleInterpolant;if(c!==null){var d=c.evaluate(a)[0];b*=d;if(a>c.parameterPositions[1]){this.stopWarping();if(b===0)this.paused=true;else this.timeScale=b;}}}this._effectiveTimeScale=b;return b;},_updateTime:function(a){var b=this.time+a;if(a===0)return b;var c=this._clip.duration,d=this.loop,e=this._loopCount;if(d===be){if(e===-1){this._loopCount=0;this._setEndings(true,true,false);}handle_stop:{if(b>=c)b=c;else if(b<0)b=0;else break handle_stop;if(this.clampWhenFinished)this.paused=true;else this.enabled=false;this._mixer.dispatchEvent({type:'finished',action:this,direction:a<0?-1:1});}}else{var f=(d===bg);if(e===-1)if(a>=0){e=0;this._setEndings(true,this.repetitions===0,f);}else this._setEndings(this.repetitions===0,true,f);if(b>=c||b<0){var g=Math.floor(b/c);b-=c*g;e+=Math.abs(g);var h=this.repetitions-e;if(h<0){if(this.clampWhenFinished)this.paused=true;else this.enabled=false;b=a>0?c:0;this._mixer.dispatchEvent({type:'finished',action:this,direction:a>0?1:-1});}else{if(h===0){var i=a<0;this._setEndings(i,!i,f);}else this._setEndings(false,false,f);this._loopCount=e;this._mixer.dispatchEvent({type:'loop',action:this,loopDelta:g});}}if(f&&(e&1)===1){this.time=b;return c-b;}}this.time=b;return b;},_setEndings:function(a,b,c){var d=this._interpolantSettings;if(c){d.endingStart=bl;d.endingEnd=bl;}else{if(a)d.endingStart=this.zeroSlopeAtStart?bl:bk;else d.endingStart=bm;if(b)d.endingEnd=this.zeroSlopeAtEnd?bl:bk;else d.endingEnd=bm;}},_scheduleFading:function(a,b,c){var d=this._mixer,e=d.time,f=this._weightInterpolant;if(f===null){f=d._lendControlInterpolant();this._weightInterpolant=f;}var g=f.parameterPositions,h=f.sampleValues;g[0]=e;h[0]=b;g[1]=e+a;h[1]=c;return this;}});function kY(a){this._root=a;this._initMemoryManager();this._accuIndex=0;this.time=0;this.timeScale=1.0;}Object.assign(kY.prototype,b.prototype,{_bindAction:function(a,b){var c=a._localRoot||this._root,d=a._clip.tracks,e=d.length,f=a._propertyBindings,g=a._interpolants,h=c.uuid,i=this._bindingsByRootAndName,j=i[h];if(j===undefined){j={};i[h]=j;}for(var k=0;k!==e;++k){var l=d[k],m=l.name,n=j[m];if(n!==undefined)f[k]=n;else{n=f[k];if(n!==undefined){if(n._cacheIndex===null){++n.referenceCount;this._addInactiveBinding(n,h,m);}continue;}var o=b&&b._propertyBindings[k].binding.parsedPath;n=new kC(kE.create(c,m,o),l.ValueTypeName,l.getValueSize());++n.referenceCount;this._addInactiveBinding(n,h,m);f[k]=n;}g[k].resultBuffer=n.buffer;}},_activateAction:function(a){if(!this._isActiveAction(a)){if(a._cacheIndex===null){var b=(a._localRoot||this._root).uuid,c=a._clip.uuid,d=this._actionsByClip[c];this._bindAction(a,d&&d.knownActions[0]);this._addInactiveAction(a,c,b);}var e=a._propertyBindings;for(var f=0,g=e.length;f!==g;++f){var h=e[f];if(h.useCount++===0){this._lendBinding(h);h.saveOriginalState();}}this._lendAction(a);}},_deactivateAction:function(a){if(this._isActiveAction(a)){var b=a._propertyBindings;for(var c=0,d=b.length;c!==d;++c){var e=b[c];if(--e.useCount===0){e.restoreOriginalState();this._takeBackBinding(e);}}this._takeBackAction(a);}},_initMemoryManager:function(){this._actions=[];this._nActiveActions=0;this._actionsByClip={};this._bindings=[];this._nActiveBindings=0;this._bindingsByRootAndName={};this._controlInterpolants=[];this._nActiveControlInterpolants=0;var a=this;this.stats={actions:{get total(){return a._actions.length;},get inUse(){return a._nActiveActions;}},bindings:{get total(){return a._bindings.length;},get inUse(){return a._nActiveBindings;}},controlInterpolants:{get total(){return a._controlInterpolants.length;},get inUse(){return a._nActiveControlInterpolants;}}};},_isActiveAction:function(a){var b=a._cacheIndex;return b!==null&&b<this._nActiveActions;},_addInactiveAction:function(a,b,c){var d=this._actions,e=this._actionsByClip,f=e[b];if(f===undefined){f={knownActions:[a],actionByRoot:{}};a._byClipCacheIndex=0;e[b]=f;}else{var g=f.knownActions;a._byClipCacheIndex=g.length;g.push(a);}a._cacheIndex=d.length;d.push(a);f.actionByRoot[c]=a;},_removeInactiveAction:function(a){var b=this._actions,c=b[b.length-1],d=a._cacheIndex;c._cacheIndex=d;b[d]=c;b.pop();a._cacheIndex=null;var e=a._clip.uuid,f=this._actionsByClip,g=f[e],h=g.knownActions,i=h[h.length-1],j=a._byClipCacheIndex;i._byClipCacheIndex=j;h[j]=i;h.pop();a._byClipCacheIndex=null;var k=g.actionByRoot,l=(a._localRoot||this._root).uuid;delete k[l];if(h.length===0)delete f[e];this._removeInactiveBindingsForAction(a);},_removeInactiveBindingsForAction:function(a){var b=a._propertyBindings;for(var c=0,d=b.length;c!==d;++c){var e=b[c];if(--e.referenceCount===0)this._removeInactiveBinding(e);}},_lendAction:function(a){var b=this._actions,c=a._cacheIndex,d=this._nActiveActions++,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e;},_takeBackAction:function(a){var b=this._actions,c=a._cacheIndex,d=--this._nActiveActions,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e;},_addInactiveBinding:function(a,b,c){var d=this._bindingsByRootAndName,e=d[b],f=this._bindings;if(e===undefined){e={};d[b]=e;}e[c]=a;a._cacheIndex=f.length;f.push(a);},_removeInactiveBinding:function(a){var b=this._bindings,c=a.binding,d=c.rootNode.uuid,e=c.path,f=this._bindingsByRootAndName,g=f[d],h=b[b.length-1],i=a._cacheIndex;h._cacheIndex=i;b[i]=h;b.pop();delete g[e];remove_empty_map:{for(var j in g)break remove_empty_map;delete f[d];}},_lendBinding:function(a){var b=this._bindings,c=a._cacheIndex,d=this._nActiveBindings++,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e;},_takeBackBinding:function(a){var b=this._bindings,c=a._cacheIndex,d=--this._nActiveBindings,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e;},_lendControlInterpolant:function(){var a=this._controlInterpolants,b=this._nActiveControlInterpolants++,c=a[b];if(c===undefined){c=new jp(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer);c.__cacheIndex=b;a[b]=c;}return c;},_takeBackControlInterpolant:function(a){var b=this._controlInterpolants,c=a.__cacheIndex,d=--this._nActiveControlInterpolants,e=b[d];a.__cacheIndex=d;b[d]=a;e.__cacheIndex=c;b[c]=e;},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(a,b){var c=b||this._root,d=c.uuid,e=typeof a==='string'?jB.findByName(c,a):a,f=e!==null?e.uuid:a,g=this._actionsByClip[f],h=null;if(g!==undefined){var i=g.actionByRoot[d];if(i!==undefined)return i;h=g.knownActions[0];if(e===null)e=h._clip;}if(e===null)return null;var j=new kX(this,e,b);this._bindAction(j,h);this._addInactiveAction(j,f,d);return j;},existingAction:function(a,b){var c=b||this._root,d=c.uuid,e=typeof a==='string'?jB.findByName(c,a):a,f=e?e.uuid:a,g=this._actionsByClip[f];if(g!==undefined)return g.actionByRoot[d]||null;return null;},stopAllAction:function(){var a=this._actions,b=this._nActiveActions,c=this._bindings,d=this._nActiveBindings;this._nActiveActions=0;this._nActiveBindings=0;for(var e=0;e!==b;++e)a[e].reset();for(var e=0;e!==d;++e)c[e].useCount=0;return this;},update:function(a){a*=this.timeScale;var b=this._actions,c=this._nActiveActions,d=this.time+=a,e=Math.sign(a),f=this._accuIndex^=1;for(var g=0;g!==c;++g){var h=b[g];h._update(d,a,e,f);}var i=this._bindings,j=this._nActiveBindings;for(var g=0;g!==j;++g)i[g].apply(f);return this;},getRoot:function(){return this._root;},uncacheClip:function(a){var b=this._actions,c=a.uuid,d=this._actionsByClip,e=d[c];if(e!==undefined){var f=e.knownActions;for(var g=0,h=f.length;g!==h;++g){var i=f[g];this._deactivateAction(i);var j=i._cacheIndex,k=b[b.length-1];i._cacheIndex=null;i._byClipCacheIndex=null;k._cacheIndex=j;b[j]=k;b.pop();this._removeInactiveBindingsForAction(i);}delete d[c];}},uncacheRoot:function(a){var b=a.uuid,c=this._actionsByClip;for(var d in c){var e=c[d].actionByRoot,f=e[b];if(f!==undefined){this._deactivateAction(f);this._removeInactiveAction(f);}}var g=this._bindingsByRootAndName,h=g[b];if(h!==undefined)for(var i in h){var j=h[i];j.restoreOriginalState();this._removeInactiveBinding(j);}},uncacheAction:function(a,b){var c=this.existingAction(a,b);if(c!==null){this._deactivateAction(c);this._removeInactiveAction(c);}}});function kZ(a){if(typeof a==='string'){console.warn('THREE.Uniform: Type parameter is no longer needed.');a=arguments[1];}this.value=a;}kZ.prototype.clone=function(){return new kZ(this.value.clone===undefined?this.value:this.value.clone());};function lm(){fT.call(this);this.type='InstancedBufferGeometry';this.maxInstancedCount=undefined;}lm.prototype=Object.assign(Object.create(fT.prototype),{constructor:lm,isInstancedBufferGeometry:true,addGroup:function(a,b,c){this.groups.push({start:a,count:b,materialIndex:c});},copy:function(a){var b=a.index;if(b!==null)this.setIndex(b.clone());var c=a.attributes;for(var d in c){var e=c[d];this.addAttribute(d,e.clone());}var f=a.groups;for(var g=0,h=f.length;g<h;g++){var i=f[g];this.addGroup(i.start,i.count,i.materialIndex);}return this;}});function ln(a,b,c,d){this.uuid=bA.generateUUID();this.data=a;this.itemSize=b;this.offset=c;this.normalized=d===true;}Object.defineProperties(ln.prototype,{count:{get:function(){return this.data.count;}},array:{get:function(){return this.data.array;}}});Object.assign(ln.prototype,{isInterleavedBufferAttribute:true,setX:function(a,b){this.data.array[a*this.data.stride+this.offset]=b;return this;},setY:function(a,b){this.data.array[a*this.data.stride+this.offset+1]=b;return this;},setZ:function(a,b){this.data.array[a*this.data.stride+this.offset+2]=b;return this;},setW:function(a,b){this.data.array[a*this.data.stride+this.offset+3]=b;return this;},getX:function(a){return this.data.array[a*this.data.stride+this.offset];},getY:function(a){return this.data.array[a*this.data.stride+this.offset+1];},getZ:function(a){return this.data.array[a*this.data.stride+this.offset+2];},getW:function(a){return this.data.array[a*this.data.stride+this.offset+3];},setXY:function(a,b,c){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;return this;},setXYZ:function(a,b,c,d){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;this.data.array[a+2]=d;return this;},setXYZW:function(a,b,c,d,e){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;this.data.array[a+2]=d;this.data.array[a+3]=e;return this;}});function lo(a,b){this.uuid=bA.generateUUID();this.array=a;this.stride=b;this.count=a!==undefined?a.length/b:0;this.dynamic=false;this.updateRange={offset:0,count:-1};this.onUploadCallback=function(){};this.version=0;}Object.defineProperty(lo.prototype,'needsUpdate',{set:function(a){if(a===true)this.version++;}});Object.assign(lo.prototype,{isInterleavedBuffer:true,setArray:function(a){if(Array.isArray(a))throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');this.count=a!==undefined?a.length/this.stride:0;this.array=a;},setDynamic:function(a){this.dynamic=a;return this;},copy:function(a){this.array=new a.array.constructor(a.array);this.count=a.count;this.stride=a.stride;this.dynamic=a.dynamic;return this;},copyAt:function(a,b,c){a*=this.stride;c*=b.stride;for(var d=0,e=this.stride;d<e;d++)this.array[a+d]=b.array[c+d];return this;},set:function(a,b){if(b===undefined)b=0;this.array.set(a,b);return this;},clone:function(){return new this.constructor().copy(this);},onUpload:function(a){this.onUploadCallback=a;return this;}});function lp(a,b,c){lo.call(this,a,b);this.meshPerAttribute=c||1;}lp.prototype=Object.assign(Object.create(lo.prototype),{constructor:lp,isInstancedInterleavedBuffer:true,copy:function(a){lo.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this;}});function lq(a,b,c){fH.call(this,a,b);this.meshPerAttribute=c||1;}lq.prototype=Object.assign(Object.create(fH.prototype),{constructor:lq,isInstancedBufferAttribute:true,copy:function(a){fH.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this;}});function lr(a,b,c,d){this.ray=new fZ(a,b);this.near=c||0;this.far=d||Infinity;this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function(){console.warn('THREE.Raycaster: params.PointCloud has been renamed to params.Points.');return this.Points;}}});}function ls(a,b){return a.distance-b.distance;}function lt(a,b,c,d){if(a.visible===false)return;a.raycast(b,c);if(d===true){var e=a.children;for(var f=0,g=e.length;f<g;f++)lt(e[f],b,c,true);}}Object.assign(lr.prototype,{linePrecision:1,set:function(a,b){this.ray.set(a,b);},setFromCamera:function(a,b){if((b&&b.isPerspectiveCamera)){this.ray.origin.setFromMatrixPosition(b.matrixWorld);this.ray.direction.set(a.x,a.y,0.5).unproject(b).sub(this.ray.origin).normalize();}else if((b&&b.isOrthographicCamera)){this.ray.origin.set(a.x,a.y,(b.near+b.far)/(b.near-b.far)).unproject(b);this.ray.direction.set(0,0,-1).transformDirection(b.matrixWorld);}else console.error('THREE.Raycaster: Unsupported camera type.');},intersectObject:function(a,b){var c=[];lt(a,this,c,b);c.sort(ls);return c;},intersectObjects:function(a,b){var c=[];if(Array.isArray(a)===false){console.warn('THREE.Raycaster.intersectObjects: objects is not an Array.');return c;}for(var d=0,e=a.length;d<e;d++)lt(a[d],this,c,b);c.sort(ls);return c;}});function lu(a){this.autoStart=(a!==undefined)?a:true;this.startTime=0;this.oldTime=0;this.elapsedTime=0;this.running=false;}Object.assign(lu.prototype,{start:function(){this.startTime=(typeof performance==='undefined'?Date:performance).now();this.oldTime=this.startTime;this.elapsedTime=0;this.running=true;},stop:function(){this.getElapsedTime();this.running=false;this.autoStart=false;},getElapsedTime:function(){this.getDelta();return this.elapsedTime;},getDelta:function(){var a=0;if(this.autoStart&&!this.running){this.start();return 0;}if(this.running){var b=(typeof performance==='undefined'?Date:performance).now();a=(b-this.oldTime)/1000;this.oldTime=b;this.elapsedTime+=a;}return a;}});function lv(a,b,c){this.radius=(a!==undefined)?a:1.0;this.phi=(b!==undefined)?b:0;this.theta=(c!==undefined)?c:0;return this;}Object.assign(lv.prototype,{set:function(a,b,c){this.radius=a;this.phi=b;this.theta=c;return this;},clone:function(){return new this.constructor().copy(this);},copy:function(a){this.radius=a.radius;this.phi=a.phi;this.theta=a.theta;return this;},makeSafe:function(){var a=0.000001;this.phi=Math.max(a,Math.min(Math.PI-a,this.phi));return this;},setFromVector3:function(a){this.radius=a.length();if(this.radius===0){this.theta=0;this.phi=0;}else{this.theta=Math.atan2(a.x,a.z);this.phi=Math.acos(bA.clamp(a.y/this.radius,-1,1));}return this;}});function lw(a,b,c){this.radius=(a!==undefined)?a:1.0;this.theta=(b!==undefined)?b:0;this.y=(c!==undefined)?c:0;return this;}Object.assign(lw.prototype,{set:function(a,b,c){this.radius=a;this.theta=b;this.y=c;return this;},clone:function(){return new this.constructor().copy(this);},copy:function(a){this.radius=a.radius;this.theta=a.theta;this.y=a.y;return this;},setFromVector3:function(a){this.radius=Math.sqrt(a.x*a.x+a.z*a.z);this.theta=Math.atan2(a.x,a.z);this.y=a.y;return this;}});function lx(a){fz.call(this);this.material=a;this.render=function(a){};}lx.prototype=Object.create(fz.prototype);lx.prototype.constructor=lx;lx.prototype.isImmediateRenderObject=true;function ly(a,b,c,d){this.object=a;this.size=(b!==undefined)?b:1;var e=(c!==undefined)?c:0xff0000;var f=(d!==undefined)?d:1;var g=0;var h=this.object.geometry;if(h&&h.isGeometry)g=h.faces.length*3;else if(h&&h.isBufferGeometry)g=h.attributes.normal.count;var i=new fT();var j=new fP(g*2*3,3);i.addAttribute('position',j);hr.call(this,i,new hp({color:e,linewidth:f}));this.matrixAutoUpdate=false;this.update();}ly.prototype=Object.create(hr.prototype);ly.prototype.constructor=ly;ly.prototype.update=(function(){var a=new bI();var b=new bI();var c=new fr();return function d(){var d=['a','b','c'];this.object.updateMatrixWorld(true);c.getNormalMatrix(this.object.matrixWorld);var e=this.object.matrixWorld;var f=this.geometry.attributes.position;var g=this.object.geometry;if(g&&g.isGeometry){var h=g.vertices;var i=g.faces;var j=0;for(var k=0,l=i.length;k<l;k++){var m=i[k];for(var n=0,o=m.vertexNormals.length;n<o;n++){var p=h[m[d[n]]];var q=m.vertexNormals[n];a.copy(p).applyMatrix4(e);b.copy(q).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a);f.setXYZ(j,a.x,a.y,a.z);j=j+1;f.setXYZ(j,b.x,b.y,b.z);j=j+1;}}}else if(g&&g.isBufferGeometry){var r=g.attributes.position;var s=g.attributes.normal;var j=0;for(var n=0,o=r.count;n<o;n++){a.set(r.getX(n),r.getY(n),r.getZ(n)).applyMatrix4(e);b.set(s.getX(n),s.getY(n),s.getZ(n));b.applyMatrix3(c).normalize().multiplyScalar(this.size).add(a);f.setXYZ(j,a.x,a.y,a.z);j=j+1;f.setXYZ(j,b.x,b.y,b.z);j=j+1;}}f.needsUpdate=true;};}());function lz(a,b){fz.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=false;this.color=b;var c=new fT();var d=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(var e=0,f=1,g=32;e<g;e++,f++){var h=(e/g)*Math.PI*2;var i=(f/g)*Math.PI*2;d.push(Math.cos(h),Math.sin(h),1,Math.cos(i),Math.sin(i),1);}c.addAttribute('position',new fP(d,3));var j=new hp({fog:false});this.cone=new hr(c,j);this.add(this.cone);this.update();}lz.prototype=Object.create(fz.prototype);lz.prototype.constructor=lz;lz.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose();};lz.prototype.update=function(){var a=new bI();var b=new bI();return function c(){this.light.updateMatrixWorld();var c=this.light.distance?this.light.distance:1000;var d=c*Math.tan(this.light.angle);this.cone.scale.set(d,d,c);a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(b.sub(a));if(this.color!==undefined)this.cone.material.color.set(this.color);else this.cone.material.color.copy(this.light.color);};}();function lA(a){var b=[];if(a&&a.isBone)b.push(a);for(var c=0;c<a.children.length;c++)b.push.apply(b,lA(a.children[c]));return b;}function lB(a){var b=lA(a);var c=new fT();var d=[];var e=[];var f=new cF(0,0,1);var g=new cF(0,1,0);for(var h=0;h<b.length;h++){var i=b[h];if(i.parent&&i.parent.isBone){d.push(0,0,0);d.push(0,0,0);e.push(f.r,f.g,f.b);e.push(g.r,g.g,g.b);}}c.addAttribute('position',new fP(d,3));c.addAttribute('color',new fP(e,3));var j=new hp({vertexColors:u,depthTest:false,depthWrite:false,transparent:true});hr.call(this,c,j);this.root=a;this.bones=b;this.matrix=a.matrixWorld;this.matrixAutoUpdate=false;this.onBeforeRender();}lB.prototype=Object.create(hr.prototype);lB.prototype.constructor=lB;lB.prototype.onBeforeRender=function(){var a=new bI();var b=new bJ();var c=new bJ();return function d(){var d=this.bones;var e=this.geometry;var f=e.getAttribute('position');c.getInverse(this.root.matrixWorld);for(var g=0,h=0;g<d.length;g++){var i=d[g];if(i.parent&&i.parent.isBone){b.multiplyMatrices(c,i.matrixWorld);a.setFromMatrixPosition(b);f.setXYZ(h,a.x,a.y,a.z);b.multiplyMatrices(c,i.parent.matrixWorld);a.setFromMatrixPosition(b);f.setXYZ(h+1,a.x,a.y,a.z);h+=2;}}e.getAttribute('position').needsUpdate=true;};}();function lC(a,b,c){this.light=a;this.light.updateMatrixWorld();this.color=c;var d=new hY(b,4,2);var e=new fY({wireframe:true,fog:false});gj.call(this,d,e);this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=false;this.update();}lC.prototype=Object.create(gj.prototype);lC.prototype.constructor=lC;lC.prototype.dispose=function(){this.geometry.dispose();this.material.dispose();};lC.prototype.update=function(){if(this.color!==undefined)this.material.color.set(this.color);else this.material.color.copy(this.light.color);};function lD(a,b){fz.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=false;this.color=b;var c=new hp({fog:false});var d=new fT();d.addAttribute('position',new fH(new Float32Array(5*3),3));this.line=new hq(d,c);this.add(this.line);this.update();}lD.prototype=Object.create(fz.prototype);lD.prototype.constructor=lD;lD.prototype.dispose=function(){this.children[0].geometry.dispose();this.children[0].material.dispose();};lD.prototype.update=function(){var a=this.light.width*0.5;var b=this.light.height*0.5;var c=this.line.geometry.attributes.position;var d=c.array;d[0]=a;d[1]=-b;d[2]=0;d[3]=a;d[4]=b;d[5]=0;d[6]=-a;d[7]=b;d[8]=0;d[9]=-a;d[10]=-b;d[11]=0;d[12]=a;d[13]=-b;d[14]=0;c.needsUpdate=true;if(this.color!==undefined)this.line.material.color.set(this.color);else this.line.material.color.copy(this.light.color);};function lE(a,b,c){fz.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=false;this.color=c;var d=new hH(b);d.rotateY(Math.PI*0.5);this.material=new fY({wireframe:true,fog:false});if(this.color===undefined)this.material.vertexColors=u;var e=d.getAttribute('position');var f=new Float32Array(e.count*3);d.addAttribute('color',new fH(f,3));this.add(new gj(d,this.material));this.update();}lE.prototype=Object.create(fz.prototype);lE.prototype.constructor=lE;lE.prototype.dispose=function(){this.children[0].geometry.dispose();this.children[0].material.dispose();};lE.prototype.update=function(){var a=new bI();var b=new cF();var c=new cF();return function d(){var d=this.children[0];if(this.color!==undefined)this.material.color.set(this.color);else{var e=d.geometry.getAttribute('color');b.copy(this.light.color);c.copy(this.light.groundColor);for(var f=0,g=e.count;f<g;f++){var h=(f<(g/2))?b:c;e.setXYZ(f,h.r,h.g,h.b);}e.needsUpdate=true;}d.lookAt(a.setFromMatrixPosition(this.light.matrixWorld).negate());};}();function lF(a,b,c,d){a=a||10;b=b||10;c=new cF(c!==undefined?c:0x444444);d=new cF(d!==undefined?d:0x888888);var e=b/2;var f=a/b;var g=a/2;var h=[],i=[];for(var j=0,k=0,l=-g;j<=b;j++,l+=f){h.push(-g,0,l,g,0,l);h.push(l,0,-g,l,0,g);var m=j===e?c:d;m.toArray(i,k);k+=3;m.toArray(i,k);k+=3;m.toArray(i,k);k+=3;m.toArray(i,k);k+=3;}var n=new fT();n.addAttribute('position',new fP(h,3));n.addAttribute('color',new fP(i,3));var o=new hp({vertexColors:u});hr.call(this,n,o);}lF.prototype=Object.create(hr.prototype);lF.prototype.constructor=lF;function lG(a,b,c,d,e,f){a=a||10;b=b||16;c=c||8;d=d||64;e=new cF(e!==undefined?e:0x444444);f=new cF(f!==undefined?f:0x888888);var g=[];var h=[];var i,j;var k,l,m,n,o;for(l=0;l<=b;l++){k=(l/b)*(Math.PI*2);i=Math.sin(k)*a;j=Math.cos(k)*a;g.push(0,0,0);g.push(i,0,j);o=(l&1)?e:f;h.push(o.r,o.g,o.b);h.push(o.r,o.g,o.b);}for(l=0;l<=c;l++){o=(l&1)?e:f;n=a-(a/c*l);for(m=0;m<d;m++){k=(m/d)*(Math.PI*2);i=Math.sin(k)*n;j=Math.cos(k)*n;g.push(i,0,j);h.push(o.r,o.g,o.b);k=((m+1)/d)*(Math.PI*2);i=Math.sin(k)*n;j=Math.cos(k)*n;g.push(i,0,j);h.push(o.r,o.g,o.b);}}var p=new fT();p.addAttribute('position',new fP(g,3));p.addAttribute('color',new fP(h,3));var q=new hp({vertexColors:u});hr.call(this,p,q);}lG.prototype=Object.create(hr.prototype);lG.prototype.constructor=lG;function lH(a,b,c,d){this.object=a;this.size=(b!==undefined)?b:1;var e=(c!==undefined)?c:0xffff00;var f=(d!==undefined)?d:1;var g=0;var h=this.object.geometry;if(h&&h.isGeometry)g=h.faces.length;else console.warn('THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.');var i=new fT();var j=new fP(g*2*3,3);i.addAttribute('position',j);hr.call(this,i,new hp({color:e,linewidth:f}));this.matrixAutoUpdate=false;this.update();}lH.prototype=Object.create(hr.prototype);lH.prototype.constructor=lH;lH.prototype.update=(function(){var a=new bI();var b=new bI();var c=new fr();return function d(){this.object.updateMatrixWorld(true);c.getNormalMatrix(this.object.matrixWorld);var d=this.object.matrixWorld;var e=this.geometry.attributes.position;var f=this.object.geometry;var g=f.vertices;var h=f.faces;var i=0;for(var j=0,k=h.length;j<k;j++){var l=h[j];var m=l.normal;a.copy(g[l.a]).add(g[l.b]).add(g[l.c]).divideScalar(3).applyMatrix4(d);b.copy(m).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a);e.setXYZ(i,a.x,a.y,a.z);i=i+1;e.setXYZ(i,b.x,b.y,b.z);i=i+1;}e.needsUpdate=true;};}());function lI(a,b,c){fz.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=false;this.color=c;if(b===undefined)b=1;var d=new fT();d.addAttribute('position',new fP([-b,b,0,b,b,0,b,-b,0,-b,-b,0,-b,b,0],3));var e=new hp({fog:false});this.lightPlane=new hq(d,e);this.add(this.lightPlane);d=new fT();d.addAttribute('position',new fP([0,0,0,0,0,1],3));this.targetLine=new hq(d,e);this.add(this.targetLine);this.update();}lI.prototype=Object.create(fz.prototype);lI.prototype.constructor=lI;lI.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose();};lI.prototype.update=function(){var a=new bI();var b=new bI();var c=new bI();return function d(){a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);c.subVectors(b,a);this.lightPlane.lookAt(c);if(this.color!==undefined){this.lightPlane.material.color.set(this.color);this.targetLine.material.color.set(this.color);}else{this.lightPlane.material.color.copy(this.light.color);this.targetLine.material.color.copy(this.light.color);}this.targetLine.lookAt(c);this.targetLine.scale.z=c.length();};}();function lJ(a){var b=new fT();var c=new hp({color:0xffffff,vertexColors:t});var d=[];var e=[];var f={};var g=new cF(0xffaa00);var h=new cF(0xff0000);var i=new cF(0x00aaff);var j=new cF(0xffffff);var k=new cF(0x333333);l("n1","n2",g);l("n2","n4",g);l("n4","n3",g);l("n3","n1",g);l("f1","f2",g);l("f2","f4",g);l("f4","f3",g);l("f3","f1",g);l("n1","f1",g);l("n2","f2",g);l("n3","f3",g);l("n4","f4",g);l("p","n1",h);l("p","n2",h);l("p","n3",h);l("p","n4",h);l("u1","u2",i);l("u2","u3",i);l("u3","u1",i);l("c","t",j);l("p","c",k);l("cn1","cn2",k);l("cn3","cn4",k);l("cf1","cf2",k);l("cf3","cf4",k);function l(a,b,c){m(a,c);m(b,c);}function m(a,b){d.push(0,0,0);e.push(b.r,b.g,b.b);if(f[a]===undefined)f[a]=[];f[a].push((d.length/3)-1);}b.addAttribute('position',new fP(d,3));b.addAttribute('color',new fP(e,3));hr.call(this,b,c);this.camera=a;if(this.camera.updateProjectionMatrix)this.camera.updateProjectionMatrix();this.matrix=a.matrixWorld;this.matrixAutoUpdate=false;this.pointMap=f;this.update();}lJ.prototype=Object.create(hr.prototype);lJ.prototype.constructor=lJ;lJ.prototype.update=function(){var a,b;var c=new bI();var d=new fA();function e(e,f,g,h){c.set(f,g,h).unproject(d);var i=b[e];if(i!==undefined){var j=a.getAttribute('position');for(var k=0,l=i.length;k<l;k++)j.setXYZ(i[k],c.x,c.y,c.z);}}return function f(){a=this.geometry;b=this.pointMap;var c=1,f=1;d.projectionMatrix.copy(this.camera.projectionMatrix);e("c",0,0,-1);e("t",0,0,1);e("n1",-c,-f,-1);e("n2",c,-f,-1);e("n3",-c,f,-1);e("n4",c,f,-1);e("f1",-c,-f,1);e("f2",c,-f,1);e("f3",-c,f,1);e("f4",c,f,1);e("u1",c*0.7,f*1.1,-1);e("u2",-c*0.7,f*1.1,-1);e("u3",0,f*2,-1);e("cf1",-c,0,1);e("cf2",c,0,1);e("cf3",0,-f,1);e("cf4",0,f,1);e("cn1",-c,0,-1);e("cn2",c,0,-1);e("cn3",0,-f,-1);e("cn4",0,f,-1);a.getAttribute('position').needsUpdate=true;};}();function lK(a,b){this.object=a;if(b===undefined)b=0xffff00;var c=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);var d=new Float32Array(8*3);var e=new fT();e.setIndex(new fH(c,1));e.addAttribute('position',new fH(d,3));hr.call(this,e,new hp({color:b}));this.matrixAutoUpdate=false;this.update();}lK.prototype=Object.create(hr.prototype);lK.prototype.constructor=lK;lK.prototype.update=(function(){var a=new fp();return function b(b){if(b!==undefined)console.warn('THREE.BoxHelper: .update() has no longer arguments.');if(this.object!==undefined)a.setFromObject(this.object);if(a.isEmpty())return;var c=a.min;var d=a.max;var e=this.geometry.attributes.position;var f=e.array;f[0]=d.x;f[1]=d.y;f[2]=d.z;f[3]=c.x;f[4]=d.y;f[5]=d.z;f[6]=c.x;f[7]=c.y;f[8]=d.z;f[9]=d.x;f[10]=c.y;f[11]=d.z;f[12]=d.x;f[13]=d.y;f[14]=c.z;f[15]=c.x;f[16]=d.y;f[17]=c.z;f[18]=c.x;f[19]=c.y;f[20]=c.z;f[21]=d.x;f[22]=c.y;f[23]=c.z;e.needsUpdate=true;this.geometry.computeBoundingSphere();};})();lK.prototype.setFromObject=function(a){this.object=a;this.update();return this;};function lL(a,b){this.type='Box3Helper';this.box=a;var c=(b!==undefined)?b:0xffff00;var d=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);var e=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1];var f=new fT();f.setIndex(new fH(d,1));f.addAttribute('position',new fP(e,3));hr.call(this,f,new hp({color:c}));this.geometry.computeBoundingSphere();this.onBeforeRender();}lL.prototype=Object.create(hr.prototype);lL.prototype.constructor=lL;lL.prototype.onBeforeRender=function(){var a=this.box;if(a.isEmpty())return;a.getCenter(this.position);a.getSize(this.scale);this.scale.multiplyScalar(0.5);};function lM(a,b,c){this.type='PlaneHelper';this.plane=a;this.size=(b===undefined)?1:b;var d=(c!==undefined)?c:0xffff00;var e=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0];var f=new fT();f.addAttribute('position',new fP(e,3));f.computeBoundingSphere();hq.call(this,f,new hp({color:d}));var g=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1];var h=new fT();h.addAttribute('position',new fP(g,3));h.computeBoundingSphere();this.add(new gj(h,new fY({color:d,opacity:0.2,transparent:true,depthWrite:false})));this.onBeforeRender();}lM.prototype=Object.create(hq.prototype);lM.prototype.constructor=lM;lM.prototype.onBeforeRender=function(){var a=-this.plane.constant;if(Math.abs(a)<1e-8)a=1e-8;this.scale.set(0.5*this.size,0.5*this.size,a);this.lookAt(this.plane.normal);this.updateMatrixWorld();};var lN;var lO;function lP(a,b,c,d,e,f){fz.call(this);if(d===undefined)d=0xffff00;if(c===undefined)c=1;if(e===undefined)e=0.2*c;if(f===undefined)f=0.2*e;if(lN===undefined){lN=new fT();lN.addAttribute('position',new fP([0,0,0,0,1,0],3));lO=new ir(0,0.5,1,5,1);lO.translate(0,-0.5,0);}this.position.copy(b);this.line=new hq(lN,new hp({color:d}));this.line.matrixAutoUpdate=false;this.add(this.line);this.cone=new gj(lO,new fY({color:d}));this.cone.matrixAutoUpdate=false;this.add(this.cone);this.setDirection(a);this.setLength(c,e,f);}lP.prototype=Object.create(fz.prototype);lP.prototype.constructor=lP;lP.prototype.setDirection=(function(){var a=new bI();var b;return function c(c){if(c.y>0.99999)this.quaternion.set(0,0,0,1);else if(c.y<-0.99999)this.quaternion.set(1,0,0,0);else{a.set(c.z,0,-c.x).normalize();b=Math.acos(c.y);this.quaternion.setFromAxisAngle(a,b);}};}());lP.prototype.setLength=function(a,b,c){if(b===undefined)b=0.2*a;if(c===undefined)c=0.2*b;this.line.scale.set(1,Math.max(0,a-b),1);this.line.updateMatrix();this.cone.scale.set(c,b,c);this.cone.position.y=a;this.cone.updateMatrix();};lP.prototype.setColor=function(a){this.line.material.color.copy(a);this.cone.material.color.copy(a);};function lQ(a){a=a||1;var b=[0,0,0,a,0,0,0,0,0,0,a,0,0,0,0,0,0,a];var c=[1,0,0,1,0.6,0,0,1,0,0.6,1,0,0,0,1,0,0.6,1];var d=new fT();d.addAttribute('position',new fP(b,3));d.addAttribute('color',new fP(c,3));var e=new hp({vertexColors:u});hr.call(this,d,e);}lQ.prototype=Object.create(hr.prototype);lQ.prototype.constructor=lQ;function lR(){var a=0,b=0,c=0,d=0;function e(e,f,g,h){a=e;b=g;c=-3*e+3*f-2*g-h;d=2*e-2*f+g+h;}return{initCatmullRom:function(a,b,c,d,f){e(b,c,f*(c-a),f*(d-b));},initNonuniformCatmullRom:function(a,b,c,d,f,g,h){var i=(b-a)/f-(c-a)/(f+g)+(c-b)/g;var j=(c-b)/g-(d-b)/(g+h)+(d-c)/h;i*=g;j*=g;e(b,c,i,j);},calc:function(e){var f=e*e;var g=f*e;return a+b*e+c*f+d*g;}};}var lS=new bI();var lT=new lR();var lU=new lR();var lV=new lR();function lW(a){jV.call(this);if(a.length<2)console.warn('THREE.CatmullRomCurve3: Points array needs at least two entries.');this.points=a||[];this.closed=false;}lW.prototype=Object.create(jV.prototype);lW.prototype.constructor=lW;lW.prototype.getPoint=function(a){var b=this.points;var c=b.length;var d=(c-(this.closed?0:1))*a;var e=Math.floor(d);var f=d-e;if(this.closed)e+=e>0?0:(Math.floor(Math.abs(e)/b.length)+1)*b.length;else if(f===0&&e===c-1){e=c-2;f=1;}var g,h,i,j;if(this.closed||e>0)g=b[(e-1)%c];else{lS.subVectors(b[0],b[1]).add(b[0]);g=lS;}h=b[e%c];i=b[(e+1)%c];if(this.closed||e+2<c)j=b[(e+2)%c];else{lS.subVectors(b[c-1],b[c-2]).add(b[c-1]);j=lS;}if(this.type===undefined||this.type==='centripetal'||this.type==='chordal'){var k=this.type==='chordal'?0.5:0.25;var l=Math.pow(g.distanceToSquared(h),k);var m=Math.pow(h.distanceToSquared(i),k);var n=Math.pow(i.distanceToSquared(j),k);if(m<1e-4)m=1.0;if(l<1e-4)l=m;if(n<1e-4)n=m;lT.initNonuniformCatmullRom(g.x,h.x,i.x,j.x,l,m,n);lU.initNonuniformCatmullRom(g.y,h.y,i.y,j.y,l,m,n);lV.initNonuniformCatmullRom(g.z,h.z,i.z,j.z,l,m,n);}else if(this.type==='catmullrom'){var o=this.tension!==undefined?this.tension:0.5;lT.initCatmullRom(g.x,h.x,i.x,j.x,o);lU.initCatmullRom(g.y,h.y,i.y,j.y,o);lV.initCatmullRom(g.z,h.z,i.z,j.z,o);}return new bI(lT.calc(f),lU.calc(f),lV.calc(f));};function lX(a,b,c,d){jV.call(this);this.v0=a;this.v1=b;this.v2=c;this.v3=d;}lX.prototype=Object.create(jV.prototype);lX.prototype.constructor=lX;lX.prototype.getPoint=function(a){var b=this.v0,c=this.v1,d=this.v2,e=this.v3;return new bI(jU(a,b.x,c.x,d.x,e.x),jU(a,b.y,c.y,d.y,e.y),jU(a,b.z,c.z,d.z,e.z));};function lY(a,b,c){jV.call(this);this.v0=a;this.v1=b;this.v2=c;}lY.prototype=Object.create(jV.prototype);lY.prototype.constructor=lY;lY.prototype.getPoint=function(a){var b=this.v0,c=this.v1,d=this.v2;return new bI(jP(a,b.x,c.x,d.x),jP(a,b.y,c.y,d.y),jP(a,b.z,c.z,d.z));};function lZ(a,b){jV.call(this);this.v1=a;this.v2=b;}lZ.prototype=Object.create(jV.prototype);lZ.prototype.constructor=lZ;lZ.prototype.getPoint=function(a){if(a===1)return this.v2.clone();var b=new bI();b.subVectors(this.v2,this.v1);b.multiplyScalar(a);b.add(this.v1);return b;};function mn(a,b,c,d,e,f){jY.call(this,a,b,c,c,d,e,f);}mn.prototype=Object.create(jY.prototype);mn.prototype.constructor=mn;var mo={createMultiMaterialObject:function(a,b){var c=new hv();for(var d=0,e=b.length;d<e;d++)c.add(new gj(a,b[d]));return c;},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a);},attach:function(a,b,c){a.applyMatrix(new bJ().getInverse(c.matrixWorld));b.remove(a);c.add(a);}};function mp(a,b,c,d,e,f,g){console.warn('THREE.Face4 has been removed. A THREE.Face3 will be created instead.');return new fD(a,b,c,e,f,g);}var mq=0;var mr=1;function ms(a){console.warn('THREE.MeshFaceMaterial has been removed. Use an Array instead.');return a;}function mt(a){if(a===undefined)a=[];console.warn('THREE.MultiMaterial has been removed. Use an Array instead.');a.isMultiMaterial=true;a.materials=a;a.clone=function(){return a.slice();};return a;}function mu(a,b){console.warn('THREE.PointCloud has been renamed to THREE.Points.');return new hu(a,b);}function mv(a){console.warn('THREE.Particle has been renamed to THREE.Sprite.');return new hk(a);}function mw(a,b){console.warn('THREE.ParticleSystem has been renamed to THREE.Points.');return new hu(a,b);}function mx(a){console.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');return new ht(a);}function my(a){console.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');return new ht(a);}function mz(a){console.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');return new ht(a);}function mA(a,b,c){console.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');return new bI(a,b,c);}function mB(a,b){console.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.');return new fH(a,b).setDynamic(true);}function mC(a,b){console.warn('THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.');return new fI(a,b);}function mD(a,b){console.warn('THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.');return new fJ(a,b);}function mE(a,b){console.warn('THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.');return new fK(a,b);}function mF(a,b){console.warn('THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.');return new fL(a,b);}function mG(a,b){console.warn('THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.');return new fM(a,b);}function mH(a,b){console.warn('THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.');return new fN(a,b);}function mI(a,b){console.warn('THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.');return new fO(a,b);}function mJ(a,b){console.warn('THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.');return new fP(a,b);}function mK(a,b){console.warn('THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.');return new fQ(a,b);}jV.create=function(a,b){console.log('THREE.Curve.create() has been deprecated');a.prototype=Object.create(jV.prototype);a.prototype.constructor=a;a.prototype.getPoint=b;return a;};function mL(a){console.warn('THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.');lW.call(this,a);this.type='catmullrom';this.closed=true;}mL.prototype=Object.create(lW.prototype);function mM(a){console.warn('THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.');lW.call(this,a);this.type='catmullrom';}mM.prototype=Object.create(lW.prototype);function mN(a){console.warn('THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.');lW.call(this,a);this.type='catmullrom';}mN.prototype=Object.create(lW.prototype);Object.assign(mN.prototype,{initFromArray:function(a){console.error('THREE.Spline: .initFromArray() has been removed.');},getControlPointsArray:function(a){console.error('THREE.Spline: .getControlPointsArray() has been removed.');},reparametrizeByArcLength:function(a){console.error('THREE.Spline: .reparametrizeByArcLength() has been removed.');}});function mO(a,b){console.warn('THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.');return new lK(a,b);}function mP(a,b){console.warn('THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.');return new hr(new ip(a.geometry),new hp({color:b!==undefined?b:0xffffff}));}lF.prototype.setColors=function(){console.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');};lB.prototype.update=function(){console.error('THREE.SkeletonHelper: update() no longer needs to be called.');};function mQ(a,b){console.warn('THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.');return new hr(new hz(a.geometry),new hp({color:b!==undefined?b:0xffffff}));}function mR(a){console.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.');return new iL(a);}function mS(a){console.warn('THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.');return new iO(a);}Object.assign(fg.prototype,{center:function(a){console.warn('THREE.Box2: .center() has been renamed to .getCenter().');return this.getCenter(a);},empty:function(){console.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');return this.isEmpty();},isIntersectionBox:function(a){console.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');return this.intersectsBox(a);},size:function(a){console.warn('THREE.Box2: .size() has been renamed to .getSize().');return this.getSize(a);}});Object.assign(fp.prototype,{center:function(a){console.warn('THREE.Box3: .center() has been renamed to .getCenter().');return this.getCenter(a);},empty:function(){console.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');return this.isEmpty();},isIntersectionBox:function(a){console.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');return this.intersectsBox(a);},isIntersectionSphere:function(a){console.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');return this.intersectsSphere(a);},size:function(a){console.warn('THREE.Box3: .size() has been renamed to .getSize().');return this.getSize(a);}});gh.prototype.center=function(a){console.warn('THREE.Line3: .center() has been renamed to .getCenter().');return this.getCenter(a);};bA.random16=function(){console.warn('THREE.Math.random16() has been deprecated. Use Math.random() instead.');return Math.random();};Object.assign(fr.prototype,{flattenToArrayOffset:function(a,b){console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.");return this.toArray(a,b);},multiplyVector3:function(a){console.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');return a.applyMatrix3(this);},multiplyVector3Array:function(a){console.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');},applyToBuffer:function(a,b,c){console.warn('THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.');return this.applyToBufferAttribute(a);},applyToVector3Array:function(a,b,c){console.error('THREE.Matrix3: .applyToVector3Array() has been removed.');}});Object.assign(bJ.prototype,{extractPosition:function(a){console.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');return this.copyPosition(a);},flattenToArrayOffset:function(a,b){console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.");return this.toArray(a,b);},getPosition:function(){var a;return function b(){if(a===undefined)a=new bI();console.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');return a.setFromMatrixColumn(this,3);};}(),setRotationFromQuaternion:function(a){console.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');return this.makeRotationFromQuaternion(a);},multiplyToArray:function(){console.warn('THREE.Matrix4: .multiplyToArray() has been removed.');},multiplyVector3:function(a){console.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.');return a.applyMatrix4(this);},multiplyVector4:function(a){console.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');return a.applyMatrix4(this);},multiplyVector3Array:function(a){console.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');},rotateAxis:function(a){console.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');a.transformDirection(this);},crossVector:function(a){console.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');return a.applyMatrix4(this);},translate:function(){console.error('THREE.Matrix4: .translate() has been removed.');},rotateX:function(){console.error('THREE.Matrix4: .rotateX() has been removed.');},rotateY:function(){console.error('THREE.Matrix4: .rotateY() has been removed.');},rotateZ:function(){console.error('THREE.Matrix4: .rotateZ() has been removed.');},rotateByAxis:function(){console.error('THREE.Matrix4: .rotateByAxis() has been removed.');},applyToBuffer:function(a,b,c){console.warn('THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.');return this.applyToBufferAttribute(a);},applyToVector3Array:function(a,b,c){console.error('THREE.Matrix4: .applyToVector3Array() has been removed.');},makeFrustum:function(a,b,c,d,e,f){console.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.');return this.makePerspective(a,b,d,c,e,f);}});fs.prototype.isIntersectionLine=function(a){console.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');return this.intersectsLine(a);};bH.prototype.multiplyVector3=function(a){console.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');return a.applyQuaternion(this);};Object.assign(fZ.prototype,{isIntersectionBox:function(a){console.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');return this.intersectsBox(a);},isIntersectionPlane:function(a){console.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');return this.intersectsPlane(a);},isIntersectionSphere:function(a){console.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');return this.intersectsSphere(a);}});Object.assign(kp.prototype,{extrude:function(a){console.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');return new hT(this,a);},makeGeometry:function(a){console.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');return new im(this,a);}});Object.assign(bB.prototype,{fromAttribute:function(a,b,c){console.error('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');return this.fromBufferAttribute(a,b,c);}});Object.assign(bI.prototype,{setEulerFromRotationMatrix:function(){console.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');},setEulerFromQuaternion:function(){console.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');},getPositionFromMatrix:function(a){console.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');return this.setFromMatrixPosition(a);},getScaleFromMatrix:function(a){console.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');return this.setFromMatrixScale(a);},getColumnFromMatrix:function(a,b){console.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');return this.setFromMatrixColumn(b,a);},applyProjection:function(a){console.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.');return this.applyMatrix4(a);},fromAttribute:function(a,b,c){console.error('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');return this.fromBufferAttribute(a,b,c);}});Object.assign(bE.prototype,{fromAttribute:function(a,b,c){console.error('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');return this.fromBufferAttribute(a,b,c);}});fG.prototype.computeTangents=function(){console.warn('THREE.Geometry: .computeTangents() has been removed.');};Object.assign(fz.prototype,{getChildByName:function(a){console.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');return this.getObjectByName(a);},renderDepth:function(){console.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');},translate:function(a,b){console.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');return this.translateOnAxis(b,a);}});Object.defineProperties(fz.prototype,{eulerOrder:{get:function(){console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');return this.rotation.order;},set:function(a){console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');this.rotation.order=a;}},useQuaternion:{get:function(){console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');},set:function(){console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');}}});Object.defineProperties(hl.prototype,{objects:{get:function(){console.warn('THREE.LOD: .objects has been renamed to .levels.');return this.levels;}}});Object.defineProperty(hm.prototype,'useVertexTexture',{get:function(){console.warn('THREE.Skeleton: useVertexTexture has been removed.');},set:function(){console.warn('THREE.Skeleton: useVertexTexture has been removed.');}});Object.defineProperty(jV.prototype,'__arcLengthDivisions',{get:function(){console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');return this.arcLengthDivisions;},set:function(a){console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');this.arcLengthDivisions=a;}});fC.prototype.setLens=function(a,b){console.warn("THREE.PerspectiveCamera.setLens is deprecated. "+"Use .setFocalLength and .filmGauge for a photographic setup.");if(b!==undefined)this.filmGauge=b;this.setFocalLength(a);};Object.defineProperties(iS.prototype,{onlyShadow:{set:function(){console.warn('THREE.Light: .onlyShadow has been removed.');}},shadowCameraFov:{set:function(a){console.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');this.shadow.camera.fov=a;}},shadowCameraLeft:{set:function(a){console.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');this.shadow.camera.left=a;}},shadowCameraRight:{set:function(a){console.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');this.shadow.camera.right=a;}},shadowCameraTop:{set:function(a){console.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');this.shadow.camera.top=a;}},shadowCameraBottom:{set:function(a){console.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');this.shadow.camera.bottom=a;}},shadowCameraNear:{set:function(a){console.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');this.shadow.camera.near=a;}},shadowCameraFar:{set:function(a){console.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');this.shadow.camera.far=a;}},shadowCameraVisible:{set:function(){console.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');}},shadowBias:{set:function(a){console.warn('THREE.Light: .shadowBias is now .shadow.bias.');this.shadow.bias=a;}},shadowDarkness:{set:function(){console.warn('THREE.Light: .shadowDarkness has been removed.');}},shadowMapWidth:{set:function(a){console.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');this.shadow.mapSize.width=a;}},shadowMapHeight:{set:function(a){console.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');this.shadow.mapSize.height=a;}}});Object.defineProperties(fH.prototype,{length:{get:function(){console.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');return this.array.length;}}});Object.assign(fT.prototype,{addIndex:function(a){console.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');this.setIndex(a);},addDrawCall:function(a,b,c){if(c!==undefined)console.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');console.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');this.addGroup(a,b);},clearDrawCalls:function(){console.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');this.clearGroups();},computeTangents:function(){console.warn('THREE.BufferGeometry: .computeTangents() has been removed.');},computeOffsets:function(){console.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');}});Object.defineProperties(fT.prototype,{drawcalls:{get:function(){console.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');return this.groups;}},offsets:{get:function(){console.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');return this.groups;}}});Object.defineProperties(kZ.prototype,{dynamic:{set:function(){console.warn('THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.');}},onUpdate:{value:function(){console.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');return this;}}});Object.defineProperties(fl.prototype,{wrapAround:{get:function(){console.warn('THREE.Material: .wrapAround has been removed.');},set:function(){console.warn('THREE.Material: .wrapAround has been removed.');}},wrapRGB:{get:function(){console.warn('THREE.Material: .wrapRGB has been removed.');return new cF();}},shading:{get:function(){console.error('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.');},set:function(a){console.warn('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.');this.flatShading=(a===q);}}});Object.defineProperties(iB.prototype,{metal:{get:function(){console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.');return false;},set:function(){console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead');}}});Object.defineProperties(fm.prototype,{derivatives:{get:function(){console.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');return this.extensions.derivatives;},set:function(a){console.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');this.extensions.derivatives=a;}}});Object.assign(gW.prototype,{getCurrentRenderTarget:function(){console.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');return this.getRenderTarget();},getMaxAnisotropy:function(){console.warn('THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().');return this.capabilities.getMaxAnisotropy();},getPrecision:function(){console.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.');return this.capabilities.precision;},supportsFloatTextures:function(){console.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \'OES_texture_float\' ).');return this.extensions.get('OES_texture_float');},supportsHalfFloatTextures:function(){console.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \'OES_texture_half_float\' ).');return this.extensions.get('OES_texture_half_float');},supportsStandardDerivatives:function(){console.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \'OES_standard_derivatives\' ).');return this.extensions.get('OES_standard_derivatives');},supportsCompressedTextureS3TC:function(){console.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \'WEBGL_compressed_texture_s3tc\' ).');return this.extensions.get('WEBGL_compressed_texture_s3tc');},supportsCompressedTexturePVRTC:function(){console.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \'WEBGL_compressed_texture_pvrtc\' ).');return this.extensions.get('WEBGL_compressed_texture_pvrtc');},supportsBlendMinMax:function(){console.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \'EXT_blend_minmax\' ).');return this.extensions.get('EXT_blend_minmax');},supportsVertexTextures:function(){console.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.');return this.capabilities.vertexTextures;},supportsInstancedArrays:function(){console.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \'ANGLE_instanced_arrays\' ).');return this.extensions.get('ANGLE_instanced_arrays');},enableScissorTest:function(a){console.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');this.setScissorTest(a);},initMaterial:function(){console.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');},addPrePlugin:function(){console.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');},addPostPlugin:function(){console.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');},updateShadowMap:function(){console.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');}});Object.defineProperties(gW.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled;},set:function(a){console.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');this.shadowMap.enabled=a;}},shadowMapType:{get:function(){return this.shadowMap.type;},set:function(a){console.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');this.shadowMap.type=a;}},shadowMapCullFace:{get:function(){return this.shadowMap.cullFace;},set:function(a){console.warn('THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.');this.shadowMap.cullFace=a;}}});Object.defineProperties(fu.prototype,{cullFace:{get:function(){return this.renderReverseSided?g:f;},set:function(a){var b=(a!==f);console.warn("WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to "+b+".");this.renderReverseSided=b;}}});Object.defineProperties(bF.prototype,{wrapS:{get:function(){console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');return this.texture.wrapS;},set:function(a){console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');this.texture.wrapS=a;}},wrapT:{get:function(){console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');return this.texture.wrapT;},set:function(a){console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');this.texture.wrapT=a;}},magFilter:{get:function(){console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');return this.texture.magFilter;},set:function(a){console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');this.texture.magFilter=a;}},minFilter:{get:function(){console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');return this.texture.minFilter;},set:function(a){console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');this.texture.minFilter=a;}},anisotropy:{get:function(){console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');return this.texture.anisotropy;},set:function(a){console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');this.texture.anisotropy=a;}},offset:{get:function(){console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');return this.texture.offset;},set:function(a){console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');this.texture.offset=a;}},repeat:{get:function(){console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');return this.texture.repeat;},set:function(a){console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');this.texture.repeat=a;}},format:{get:function(){console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');return this.texture.format;},set:function(a){console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');this.texture.format=a;}},type:{get:function(){console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');return this.texture.type;},set:function(a){console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');this.texture.type=a;}},generateMipmaps:{get:function(){console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');return this.texture.generateMipmaps;},set:function(a){console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');this.texture.generateMipmaps=a;}}});kz.prototype.load=function(a){console.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');var b=this;var c=new kv();c.load(a,function(a){b.setBuffer(a);});return this;};kB.prototype.getData=function(){console.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');return this.getFrequencyData();};kx.prototype.updateCubeMap=function(a,b){console.warn('THREE.CubeCamera: .updateCubeMap() is now .update().');return this.update(a,b);};var mT={merge:function(a,b,c){console.warn('THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.');var d;if(b.isMesh){b.matrixAutoUpdate&&b.updateMatrix();d=b.matrix;b=b.geometry;}a.merge(b,d,c);},center:function(a){console.warn('THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.');return a.center();}};var mU={crossOrigin:undefined,loadTexture:function(a,b,c,d){console.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');var e=new iR();e.setCrossOrigin(this.crossOrigin);var f=e.load(a,c,undefined,d);if(b)f.mapping=b;return f;},loadTextureCube:function(a,b,c,d){console.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');var e=new iQ();e.setCrossOrigin(this.crossOrigin);var f=e.load(a,c,undefined,d);if(b)f.mapping=b;return f;},loadCompressedTexture:function(){console.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');},loadCompressedTextureCube:function(){console.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');}};function mV(){console.error('THREE.Projector has been moved to /examples/js/renderers/Projector.js.');this.projectVector=function(a,b){console.warn('THREE.Projector: .projectVector() is now vector.project().');a.project(b);};this.unprojectVector=function(a,b){console.warn('THREE.Projector: .unprojectVector() is now vector.unproject().');a.unproject(b);};this.pickingRay=function(){console.error('THREE.Projector: .pickingRay() is now raycaster.setFromCamera().');};}function mW(){console.error('THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js');this.domElement=document.createElementNS('http://www.w3.org/1999/xhtml','canvas');this.clear=function(){};this.render=function(){};this.setClearColor=function(){};this.setSize=function(){};}a.WebGLRenderTargetCube=bG;a.WebGLRenderTarget=bF;a.WebGLRenderer=gW;a.ShaderLib=eZ;a.UniformsLib=cG;a.UniformsUtils=cH;a.ShaderChunk=eY;a.FogExp2=gX;a.Fog=gY;a.Scene=gZ;a.LensFlare=hi;a.Sprite=hk;a.LOD=hl;a.SkinnedMesh=ho;a.Skeleton=hm;a.Bone=hn;a.Mesh=gj;a.LineSegments=hr;a.LineLoop=hs;a.Line=hq;a.Points=hu;a.Group=hv;a.VideoTexture=hw;a.DataTexture=bK;a.CompressedTexture=hx;a.CubeTexture=bL;a.CanvasTexture=fi;a.DepthTexture=hy;a.Texture=bD;a.CompressedTextureLoader=iM;a.DataTextureLoader=iO;a.CubeTextureLoader=iQ;a.TextureLoader=iR;a.ObjectLoader=jH;a.MaterialLoader=jC;a.BufferGeometryLoader=jD;a.DefaultLoadingManager=iK;a.LoadingManager=iJ;a.JSONLoader=jG;a.ImageLoader=iP;a.FontLoader=ks;a.FileLoader=iL;a.Loader=jF;a.Cache=iI;a.AudioLoader=kv;a.SpotLightShadow=iV;a.SpotLight=iW;a.PointLight=iX;a.RectAreaLight=jl;a.HemisphereLight=iT;a.DirectionalLightShadow=iY;a.DirectionalLight=iZ;a.AmbientLight=jk;a.LightShadow=iU;a.Light=iS;a.StereoCamera=kw;a.PerspectiveCamera=fC;a.OrthographicCamera=fB;a.CubeCamera=kx;a.ArrayCamera=gR;a.Camera=fA;a.AudioListener=ky;a.PositionalAudio=kA;a.AudioContext=ku;a.AudioAnalyser=kB;a.Audio=kz;a.VectorKeyframeTrack=jt;a.StringKeyframeTrack=jx;a.QuaternionKeyframeTrack=jv;a.NumberKeyframeTrack=jw;a.ColorKeyframeTrack=jz;a.BooleanKeyframeTrack=jy;a.PropertyMixer=kC;a.PropertyBinding=kE;a.KeyframeTrack=jA;a.AnimationUtils=jm;a.AnimationObjectGroup=kW;a.AnimationMixer=kY;a.AnimationClip=jB;a.Uniform=kZ;a.InstancedBufferGeometry=lm;a.BufferGeometry=fT;a.GeometryIdCount=fF;a.Geometry=fG;a.InterleavedBufferAttribute=ln;a.InstancedInterleavedBuffer=lp;a.InterleavedBuffer=lo;a.InstancedBufferAttribute=lq;a.Face3=fD;a.Object3D=fz;a.Raycaster=lr;a.Layers=fx;a.EventDispatcher=b;a.Clock=lu;a.QuaternionLinearInterpolant=ju;a.LinearInterpolant=jp;a.DiscreteInterpolant=jq;a.CubicInterpolant=jo;a.Interpolant=jn;a.Triangle=gi;a.Math=bA;a.Spherical=lv;a.Cylindrical=lw;a.Plane=fs;a.Frustum=ft;a.Sphere=fq;a.Ray=fZ;a.Matrix4=bJ;a.Matrix3=fr;a.Box3=fp;a.Box2=fg;a.Line3=gh;a.Euler=fw;a.Vector4=bE;a.Vector3=bI;a.Vector2=bB;a.Quaternion=bH;a.Color=cF;a.ImmediateRenderObject=lx;a.VertexNormalsHelper=ly;a.SpotLightHelper=lz;a.SkeletonHelper=lB;a.PointLightHelper=lC;a.RectAreaLightHelper=lD;a.HemisphereLightHelper=lE;a.GridHelper=lF;a.PolarGridHelper=lG;a.FaceNormalsHelper=lH;a.DirectionalLightHelper=lI;a.CameraHelper=lJ;a.BoxHelper=lK;a.Box3Helper=lL;a.PlaneHelper=lM;a.ArrowHelper=lP;a.AxisHelper=lQ;a.CatmullRomCurve3=lW;a.CubicBezierCurve3=lX;a.QuadraticBezierCurve3=lY;a.LineCurve3=lZ;a.ArcCurve=mn;a.EllipseCurve=jY;a.SplineCurve=jZ;a.CubicBezierCurve=kl;a.QuadraticBezierCurve=km;a.LineCurve=jW;a.Shape=kp;a.Path=ko;a.ShapePath=kq;a.Font=kr;a.CurvePath=jX;a.Curve=jV;a.ShapeUtils=hS;a.SceneUtils=mo;a.WebGLUtils=gV;a.WireframeGeometry=hz;a.ParametricGeometry=hA;a.ParametricBufferGeometry=hB;a.TetrahedronGeometry=hE;a.TetrahedronBufferGeometry=hF;a.OctahedronGeometry=hG;a.OctahedronBufferGeometry=hH;a.IcosahedronGeometry=hI;a.IcosahedronBufferGeometry=hJ;a.DodecahedronGeometry=hK;a.DodecahedronBufferGeometry=hL;a.PolyhedronGeometry=hC;a.PolyhedronBufferGeometry=hD;a.TubeGeometry=hM;a.TubeBufferGeometry=hN;a.TorusKnotGeometry=hO;a.TorusKnotBufferGeometry=hP;a.TorusGeometry=hQ;a.TorusBufferGeometry=hR;a.TextGeometry=hV;a.TextBufferGeometry=hW;a.SphereGeometry=hX;a.SphereBufferGeometry=hY;a.RingGeometry=hZ;a.RingBufferGeometry=ij;a.PlaneGeometry=fW;a.PlaneBufferGeometry=fX;a.LatheGeometry=ik;a.LatheBufferGeometry=il;a.ShapeGeometry=im;a.ShapeBufferGeometry=io;a.ExtrudeGeometry=hT;a.ExtrudeBufferGeometry=hU;a.EdgesGeometry=ip;a.ConeGeometry=is;a.ConeBufferGeometry=it;a.CylinderGeometry=iq;a.CylinderBufferGeometry=ir;a.CircleGeometry=iu;a.CircleBufferGeometry=iv;a.BoxGeometry=fU;a.BoxBufferGeometry=fV;a.ShadowMaterial=ix;a.SpriteMaterial=hj;a.RawShaderMaterial=iy;a.ShaderMaterial=fm;a.PointsMaterial=ht;a.MeshPhysicalMaterial=iA;a.MeshStandardMaterial=iz;a.MeshPhongMaterial=iB;a.MeshToonMaterial=iC;a.MeshNormalMaterial=iD;a.MeshLambertMaterial=iE;a.MeshDepthMaterial=fn;a.MeshDistanceMaterial=fo;a.MeshBasicMaterial=fY;a.LineDashedMaterial=iG;a.LineBasicMaterial=hp;a.Material=fl;a.Float64BufferAttribute=fQ;a.Float32BufferAttribute=fP;a.Uint32BufferAttribute=fO;a.Int32BufferAttribute=fN;a.Uint16BufferAttribute=fM;a.Int16BufferAttribute=fL;a.Uint8ClampedBufferAttribute=fK;a.Uint8BufferAttribute=fJ;a.Int8BufferAttribute=fI;a.BufferAttribute=fH;a.REVISION=c;a.MOUSE=d;a.CullFaceNone=e;a.CullFaceBack=f;a.CullFaceFront=g;a.CullFaceFrontBack=h;a.FrontFaceDirectionCW=i;a.FrontFaceDirectionCCW=j;a.BasicShadowMap=k;a.PCFShadowMap=l;a.PCFSoftShadowMap=m;a.FrontSide=n;a.BackSide=o;a.DoubleSide=p;a.FlatShading=q;a.SmoothShading=r;a.NoColors=s;a.FaceColors=t;a.VertexColors=u;a.NoBlending=v;a.NormalBlending=w;a.AdditiveBlending=x;a.SubtractiveBlending=y;a.MultiplyBlending=z;a.CustomBlending=A;a.AddEquation=B;a.SubtractEquation=C;a.ReverseSubtractEquation=D;a.MinEquation=E;a.MaxEquation=F;a.ZeroFactor=G;a.OneFactor=H;a.SrcColorFactor=I;a.OneMinusSrcColorFactor=J;a.SrcAlphaFactor=K;a.OneMinusSrcAlphaFactor=L;a.DstAlphaFactor=M;a.OneMinusDstAlphaFactor=N;a.DstColorFactor=O;a.OneMinusDstColorFactor=P;a.SrcAlphaSaturateFactor=Q;a.NeverDepth=R;a.AlwaysDepth=S;a.LessDepth=T;a.LessEqualDepth=U;a.EqualDepth=V;a.GreaterEqualDepth=W;a.GreaterDepth=X;a.NotEqualDepth=Y;a.MultiplyOperation=Z;a.MixOperation=ab;a.AddOperation=ac;a.NoToneMapping=ad;a.LinearToneMapping=ae;a.ReinhardToneMapping=af;a.Uncharted2ToneMapping=ag;a.CineonToneMapping=ah;a.UVMapping=ai;a.CubeReflectionMapping=aj;a.CubeRefractionMapping=ak;a.EquirectangularReflectionMapping=al;a.EquirectangularRefractionMapping=am;a.SphericalReflectionMapping=an;a.CubeUVReflectionMapping=ao;a.CubeUVRefractionMapping=ap;a.RepeatWrapping=aq;a.ClampToEdgeWrapping=ar;a.MirroredRepeatWrapping=as;a.NearestFilter=at;a.NearestMipMapNearestFilter=au;a.NearestMipMapLinearFilter=av;a.LinearFilter=aw;a.LinearMipMapNearestFilter=ax;a.LinearMipMapLinearFilter=ay;a.UnsignedByteType=az;a.ByteType=aA;a.ShortType=aB;a.UnsignedShortType=aC;a.IntType=aD;a.UnsignedIntType=aE;a.FloatType=aF;a.HalfFloatType=aG;a.UnsignedShort4444Type=aH;a.UnsignedShort5551Type=aI;a.UnsignedShort565Type=aJ;a.UnsignedInt248Type=aK;a.AlphaFormat=aL;a.RGBFormat=aM;a.RGBAFormat=aN;a.LuminanceFormat=aO;a.LuminanceAlphaFormat=aP;a.RGBEFormat=aQ;a.DepthFormat=aR;a.DepthStencilFormat=aS;a.RGB_S3TC_DXT1_Format=aT;a.RGBA_S3TC_DXT1_Format=aU;a.RGBA_S3TC_DXT3_Format=aV;a.RGBA_S3TC_DXT5_Format=aW;a.RGB_PVRTC_4BPPV1_Format=aX;a.RGB_PVRTC_2BPPV1_Format=aY;a.RGBA_PVRTC_4BPPV1_Format=aZ;a.RGBA_PVRTC_2BPPV1_Format=bc;a.RGB_ETC1_Format=bd;a.LoopOnce=be;a.LoopRepeat=bf;a.LoopPingPong=bg;a.InterpolateDiscrete=bh;a.InterpolateLinear=bi;a.InterpolateSmooth=bj;a.ZeroCurvatureEnding=bk;a.ZeroSlopeEnding=bl;a.WrapAroundEnding=bm;a.TrianglesDrawMode=bn;a.TriangleStripDrawMode=bo;a.TriangleFanDrawMode=bp;a.LinearEncoding=bq;a.sRGBEncoding=br;a.GammaEncoding=bs;a.RGBEEncoding=bt;a.LogLuvEncoding=bu;a.RGBM7Encoding=bv;a.RGBM16Encoding=bw;a.RGBDEncoding=bx;a.BasicDepthPacking=by;a.RGBADepthPacking=bz;a.CubeGeometry=fU;a.Face4=mp;a.LineStrip=mq;a.LinePieces=mr;a.MeshFaceMaterial=ms;a.MultiMaterial=mt;a.PointCloud=mu;a.Particle=mv;a.ParticleSystem=mw;a.PointCloudMaterial=mx;a.ParticleBasicMaterial=my;a.ParticleSystemMaterial=mz;a.Vertex=mA;a.DynamicBufferAttribute=mB;a.Int8Attribute=mC;a.Uint8Attribute=mD;a.Uint8ClampedAttribute=mE;a.Int16Attribute=mF;a.Uint16Attribute=mG;a.Int32Attribute=mH;a.Uint32Attribute=mI;a.Float32Attribute=mJ;a.Float64Attribute=mK;a.ClosedSplineCurve3=mL;a.SplineCurve3=mM;a.Spline=mN;a.BoundingBoxHelper=mO;a.EdgesHelper=mP;a.WireframeHelper=mQ;a.XHRLoader=mR;a.BinaryTextureLoader=mS;a.GeometryUtils=mT;a.ImageUtils=mU;a.Projector=mV;a.CanvasRenderer=mW;Object.defineProperty(a,'__esModule',{value:true});})));THREE.RenderableObject=function(){this.id=0;this.object=null;this.z=0;this.renderOrder=0;};THREE.RenderableFace=function(){this.id=0;this.v1=new THREE.RenderableVertex();this.v2=new THREE.RenderableVertex();this.v3=new THREE.RenderableVertex();this.normalModel=new THREE.Vector3();this.vertexNormalsModel=[new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3()];this.vertexNormalsLength=0;this.color=new THREE.Color();this.material=null;this.uvs=[new THREE.Vector2(),new THREE.Vector2(),new THREE.Vector2()];this.z=0;this.renderOrder=0;};THREE.RenderableVertex=function(){this.position=new THREE.Vector3();this.positionWorld=new THREE.Vector3();this.positionScreen=new THREE.Vector4();this.visible=true;};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen);};THREE.RenderableLine=function(){this.id=0;this.v1=new THREE.RenderableVertex();this.v2=new THREE.RenderableVertex();this.vertexColors=[new THREE.Color(),new THREE.Color()];this.material=null;this.z=0;this.renderOrder=0;};THREE.RenderableSprite=function(){this.id=0;this.object=null;this.x=0;this.y=0;this.z=0;this.rotation=0;this.scale=new THREE.Vector2();this.material=null;this.renderOrder=0;};THREE.Projector=function(){var a,b,c=[],d=0,e,f,g=[],h=0,i,j,k=[],l=0,m,n,o=[],p=0,q,r,s=[],t=0,u={objects:[],lights:[],elements:[]},v=new THREE.Vector3(),w=new THREE.Vector4(),x=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),y=new THREE.Box3(),z=new Array(3),A=new THREE.Matrix4(),B=new THREE.Matrix4(),C,D=new THREE.Matrix4(),E=new THREE.Matrix3(),F=new THREE.Frustum(),G=new THREE.Vector4(),H=new THREE.Vector4();this.projectVector=function(a,b){console.warn('THREE.Projector: .projectVector() is now vector.project().');a.project(b);};this.unprojectVector=function(a,b){console.warn('THREE.Projector: .unprojectVector() is now vector.unproject().');a.unproject(b);};this.pickingRay=function(){console.error('THREE.Projector: .pickingRay() is now raycaster.setFromCamera().');};var I=function(){var a=[];var b=[];var c=[];var d=null;var f=null;var h=new THREE.Matrix3();function j(e){d=e;f=d.material;h.getNormalMatrix(d.matrixWorld);a.length=0;b.length=0;c.length=0;}function k(a){var b=a.position;var c=a.positionWorld;var d=a.positionScreen;c.copy(b).applyMatrix4(C);d.copy(c).applyMatrix4(B);var e=1/d.w;d.x*=e;d.y*=e;d.z*=e;a.visible=d.x>=-1&&d.x<=1&&d.y>=-1&&d.y<=1&&d.z>=-1&&d.z<=1;}function l(a,b,c){e=O();e.position.set(a,b,c);k(e);}function n(b,c,d){a.push(b,c,d);}function o(a,c,d){b.push(a,c,d);}function p(a,b){c.push(a,b);}function q(a,b,c){if(a.visible===true||b.visible===true||c.visible===true)return true;z[0]=a.positionScreen;z[1]=b.positionScreen;z[2]=c.positionScreen;return x.intersectsBox(y.setFromPoints(z));}function r(a,b,c){return((c.positionScreen.x-a.positionScreen.x)*(b.positionScreen.y-a.positionScreen.y)-(c.positionScreen.y-a.positionScreen.y)*(b.positionScreen.x-a.positionScreen.x))<0;}function s(a,c){var e=g[a];var f=g[c];e.positionScreen.copy(e.position).applyMatrix4(D);f.positionScreen.copy(f.position).applyMatrix4(D);if(T(e.positionScreen,f.positionScreen)===true){e.positionScreen.multiplyScalar(1/e.positionScreen.w);f.positionScreen.multiplyScalar(1/f.positionScreen.w);m=Q();m.id=d.id;m.v1.copy(e);m.v2.copy(f);m.z=Math.max(e.positionScreen.z,f.positionScreen.z);m.renderOrder=d.renderOrder;m.material=d.material;if(d.material.vertexColors===THREE.VertexColors){m.vertexColors[0].fromArray(b,a*3);m.vertexColors[1].fromArray(b,c*3);}u.elements.push(m);}}function t(b,e,j){var k=g[b];var l=g[e];var m=g[j];if(q(k,l,m)===false)return;if(f.side===THREE.DoubleSide||r(k,l,m)===true){i=P();i.id=d.id;i.v1.copy(k);i.v2.copy(l);i.v3.copy(m);i.z=(k.positionScreen.z+l.positionScreen.z+m.positionScreen.z)/3;i.renderOrder=d.renderOrder;i.normalModel.fromArray(a,b*3);i.normalModel.applyMatrix3(h).normalize();for(var n=0;n<3;n++){var o=i.vertexNormalsModel[n];o.fromArray(a,arguments[n]*3);o.applyMatrix3(h).normalize();var p=i.uvs[n];p.fromArray(c,arguments[n]*2);}i.vertexNormalsLength=3;i.material=d.material;u.elements.push(i);}}return{setObject:j,projectVertex:k,checkTriangleVisibility:q,checkBackfaceCulling:r,pushVertex:l,pushNormal:n,pushColor:o,pushUv:p,pushLine:s,pushTriangle:t};};var J=new I();function K(a){if(a.visible===false)return;if(a instanceof THREE.Light)u.lights.push(a);else if(a instanceof THREE.Mesh||a instanceof THREE.Line||a instanceof THREE.Points){if(a.material.visible===false)return;if(a.frustumCulled===true&&F.intersectsObject(a)===false)return;L(a);}else if(a instanceof THREE.Sprite){if(a.material.visible===false)return;if(a.frustumCulled===true&&F.intersectsSprite(a)===false)return;L(a);}var b=a.children;for(var c=0,d=b.length;c<d;c++)K(b[c]);}function L(b){a=N();a.id=b.id;a.object=b;v.setFromMatrixPosition(b.matrixWorld);v.applyMatrix4(B);a.z=v.z;a.renderOrder=b.renderOrder;u.objects.push(a);}this.projectScene=function(a,c,d,e){j=0;n=0;r=0;u.elements.length=0;if(a.autoUpdate===true)a.updateMatrixWorld();if(c.parent===null)c.updateMatrixWorld();A.copy(c.matrixWorldInverse);B.multiplyMatrices(c.projectionMatrix,A);F.setFromMatrix(B);b=0;u.objects.length=0;u.lights.length=0;K(a);if(d===true)u.objects.sort(S);var h=u.objects;for(var k=0,l=h.length;k<l;k++){var o=h[k].object;var p=o.geometry;J.setObject(o);C=o.matrixWorld;f=0;if(o instanceof THREE.Mesh){if(p instanceof THREE.BufferGeometry){var q=p.attributes;var s=p.groups;if(q.position===undefined)continue;var t=q.position.array;for(var x=0,y=t.length;x<y;x+=3)J.pushVertex(t[x],t[x+1],t[x+2]);if(q.normal!==undefined){var z=q.normal.array;for(var x=0,y=z.length;x<y;x+=3)J.pushNormal(z[x],z[x+1],z[x+2]);}if(q.uv!==undefined){var I=q.uv.array;for(var x=0,y=I.length;x<y;x+=2)J.pushUv(I[x],I[x+1]);}if(p.index!==null){var L=p.index.array;if(s.length>0)for(var N=0;N<s.length;N++){var R=s[N];for(var x=R.start,y=R.start+R.count;x<y;x+=3)J.pushTriangle(L[x],L[x+1],L[x+2]);}else for(var x=0,y=L.length;x<y;x+=3)J.pushTriangle(L[x],L[x+1],L[x+2]);}else for(var x=0,y=t.length/3;x<y;x+=3)J.pushTriangle(x,x+1,x+2);}else if(p instanceof THREE.Geometry){var U=p.vertices;var V=p.faces;var W=p.faceVertexUvs[0];E.getNormalMatrix(C);var X=o.material;var Y=Array.isArray(X);for(var Z=0,ab=U.length;Z<ab;Z++){var ac=U[Z];v.copy(ac);if(X.morphTargets===true){var ad=p.morphTargets;var ae=o.morphTargetInfluences;for(var af=0,ag=ad.length;af<ag;af++){var ah=ae[af];if(ah===0)continue;var ai=ad[af];var aj=ai.vertices[Z];v.x+=(aj.x-ac.x)*ah;v.y+=(aj.y-ac.y)*ah;v.z+=(aj.z-ac.z)*ah;}}J.pushVertex(v.x,v.y,v.z);}for(var ak=0,al=V.length;ak<al;ak++){var am=V[ak];X=Y===true?o.material[am.materialIndex]:o.material;if(X===undefined)continue;var an=X.side;var ao=g[am.a];var ap=g[am.b];var aq=g[am.c];if(J.checkTriangleVisibility(ao,ap,aq)===false)continue;var ar=J.checkBackfaceCulling(ao,ap,aq);if(an!==THREE.DoubleSide){if(an===THREE.FrontSide&&ar===false)continue;if(an===THREE.BackSide&&ar===true)continue;}i=P();i.id=o.id;i.v1.copy(ao);i.v2.copy(ap);i.v3.copy(aq);i.normalModel.copy(am.normal);if(ar===false&&(an===THREE.BackSide||an===THREE.DoubleSide))i.normalModel.negate();i.normalModel.applyMatrix3(E).normalize();var as=am.vertexNormals;for(var at=0,au=Math.min(as.length,3);at<au;at++){var av=i.vertexNormalsModel[at];av.copy(as[at]);if(ar===false&&(an===THREE.BackSide||an===THREE.DoubleSide))av.negate();av.applyMatrix3(E).normalize();}i.vertexNormalsLength=as.length;var aw=W[ak];if(aw!==undefined)for(var ax=0;ax<3;ax++)i.uvs[ax].copy(aw[ax]);i.color=am.color;i.material=X;i.z=(ao.positionScreen.z+ap.positionScreen.z+aq.positionScreen.z)/3;i.renderOrder=o.renderOrder;u.elements.push(i);}}}else if(o instanceof THREE.Line){D.multiplyMatrices(B,C);if(p instanceof THREE.BufferGeometry){var q=p.attributes;if(q.position!==undefined){var t=q.position.array;for(var x=0,y=t.length;x<y;x+=3)J.pushVertex(t[x],t[x+1],t[x+2]);if(q.color!==undefined){var ay=q.color.array;for(var x=0,y=ay.length;x<y;x+=3)J.pushColor(ay[x],ay[x+1],ay[x+2]);}if(p.index!==null){var L=p.index.array;for(var x=0,y=L.length;x<y;x+=2)J.pushLine(L[x],L[x+1]);}else{var az=o instanceof THREE.LineSegments?2:1;for(var x=0,y=(t.length/3)-1;x<y;x+=az)J.pushLine(x,x+1);}}}else if(p instanceof THREE.Geometry){var U=o.geometry.vertices;if(U.length===0)continue;ao=O();ao.positionScreen.copy(U[0]).applyMatrix4(D);var az=o instanceof THREE.LineSegments?2:1;for(var Z=1,ab=U.length;Z<ab;Z++){ao=O();ao.positionScreen.copy(U[Z]).applyMatrix4(D);if((Z+1)%az>0)continue;ap=g[f-2];G.copy(ao.positionScreen);H.copy(ap.positionScreen);if(T(G,H)===true){G.multiplyScalar(1/G.w);H.multiplyScalar(1/H.w);m=Q();m.id=o.id;m.v1.positionScreen.copy(G);m.v2.positionScreen.copy(H);m.z=Math.max(G.z,H.z);m.renderOrder=o.renderOrder;m.material=o.material;if(o.material.vertexColors===THREE.VertexColors){m.vertexColors[0].copy(o.geometry.colors[Z]);m.vertexColors[1].copy(o.geometry.colors[Z-1]);}u.elements.push(m);}}}}else if(o instanceof THREE.Points){D.multiplyMatrices(B,C);if(p instanceof THREE.Geometry){var U=o.geometry.vertices;for(var Z=0,ab=U.length;Z<ab;Z++){var ac=U[Z];w.set(ac.x,ac.y,ac.z,1);w.applyMatrix4(D);M(w,o,c);}}else if(p instanceof THREE.BufferGeometry){var q=p.attributes;if(q.position!==undefined){var t=q.position.array;for(var x=0,y=t.length;x<y;x+=3){w.set(t[x],t[x+1],t[x+2],1);w.applyMatrix4(D);M(w,o,c);}}}}else if(o instanceof THREE.Sprite){w.set(C.elements[12],C.elements[13],C.elements[14],1);w.applyMatrix4(B);M(w,o,c);}}if(e===true)u.elements.sort(S);return u;};function M(a,b,c){var d=1/a.w;a.z*=d;if(a.z>=-1&&a.z<=1){q=R();q.id=b.id;q.x=a.x*d;q.y=a.y*d;q.z=a.z;q.renderOrder=b.renderOrder;q.object=b;q.rotation=b.rotation;q.scale.x=b.scale.x*Math.abs(q.x-(a.x+c.projectionMatrix.elements[0])/(a.w+c.projectionMatrix.elements[12]));q.scale.y=b.scale.y*Math.abs(q.y-(a.y+c.projectionMatrix.elements[5])/(a.w+c.projectionMatrix.elements[13]));q.material=b.material;u.elements.push(q);}}function N(){if(b===d){var a=new THREE.RenderableObject();c.push(a);d++;b++;return a;}return c[b++];}function O(){if(f===h){var a=new THREE.RenderableVertex();g.push(a);h++;f++;return a;}return g[f++];}function P(){if(j===l){var a=new THREE.RenderableFace();k.push(a);l++;j++;return a;}return k[j++];}function Q(){if(n===p){var a=new THREE.RenderableLine();o.push(a);p++;n++;return a;}return o[n++];}function R(){if(r===t){var a=new THREE.RenderableSprite();s.push(a);t++;r++;return a;}return s[r++];}function S(a,b){if(a.renderOrder!==b.renderOrder)return a.renderOrder-b.renderOrder;else if(a.z!==b.z)return b.z-a.z;else if(a.id!==b.id)return a.id-b.id;else return 0;}function T(a,b){var c=0,d=1,e=a.z+a.w,f=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;if(e>=0&&f>=0&&g>=0&&h>=0)return true;else if((e<0&&f<0)||(g<0&&h<0))return false;else{if(e<0)c=Math.max(c,e/(e-f));else if(f<0)d=Math.min(d,e/(e-f));if(g<0)c=Math.max(c,g/(g-h));else if(h<0)d=Math.min(d,g/(g-h));if(d<c)return false;else{a.lerp(b,c);b.lerp(a,1-d);return true;}}}};THREE.SpriteCanvasMaterial=function(a){THREE.Material.call(this);this.type='SpriteCanvasMaterial';this.color=new THREE.Color(0xffffff);this.program=function(){};this.setValues(a);};THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteCanvasMaterial.prototype.constructor=THREE.SpriteCanvasMaterial;THREE.SpriteCanvasMaterial.prototype.isSpriteCanvasMaterial=true;THREE.SpriteCanvasMaterial.prototype.clone=function(){var a=new THREE.SpriteCanvasMaterial();a.copy(this);a.color.copy(this.color);a.program=this.program;return a;};THREE.CanvasRenderer=function(a){console.log('THREE.CanvasRenderer',THREE.REVISION);a=a||{};var b=this,c,d,e,f=new THREE.Projector(),g=a.canvas!==undefined?a.canvas:document.createElement('canvas'),h=g.width,i=g.height,j=Math.floor(h/2),k=Math.floor(i/2),l=0,m=0,n=h,o=i,p=1,q=g.getContext('2d',{alpha:a.alpha===true}),r=new THREE.Color(0x000000),s=a.alpha===true?0:1,t=1,u=0,v=null,w=null,x=null,y=null,z=null,A=[],B,C,D,E,F,G,H,I,J,K=new THREE.Color(),L=new THREE.Color(),M=new THREE.Color(),N=new THREE.Color(),O={},P,Q,R,S,T,U,V,W=new THREE.Box2(),X=new THREE.Box2(),Y=new THREE.Box2(),Z=new THREE.Color(),ab=new THREE.Color(),ac=new THREE.Color(),ad=new THREE.Vector3(),ae=new THREE.Vector3(),af=new THREE.Vector3(),ag=new THREE.Matrix3();if(q.setLineDash===undefined)q.setLineDash=function(){};this.domElement=g;this.autoClear=true;this.sortObjects=true;this.sortElements=true;this.info={render:{vertices:0,faces:0}};this.supportsVertexTextures=function(){};this.setFaceCulling=function(){};this.getContext=function(){return q;};this.getContextAttributes=function(){return q.getContextAttributes();};this.getPixelRatio=function(){return p;};this.setPixelRatio=function(a){if(a!==undefined)p=a;};this.setSize=function(a,b,c){h=a*p;i=b*p;g.width=h;g.height=i;j=Math.floor(h/2);k=Math.floor(i/2);if(c!==false){g.style.width=a+'px';g.style.height=b+'px';}W.min.set(-j,-k);W.max.set(j,k);X.min.set(-j,-k);X.max.set(j,k);t=1;u=0;v=null;w=null;x=null;y=null;z=null;this.setViewport(0,0,a,b);};this.setViewport=function(a,b,c,d){l=a*p;m=b*p;n=c*p;o=d*p;};this.setScissor=function(){};this.setScissorTest=function(){};this.setClearColor=function(a,b){r.set(a);s=b!==undefined?b:1;X.min.set(-j,-k);X.max.set(j,k);};this.setClearColorHex=function(a,b){console.warn('THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.');this.setClearColor(a,b);};this.getClearColor=function(){return r;};this.getClearAlpha=function(){return s;};this.getMaxAnisotropy=function(){return 0;};this.clear=function(){if(X.isEmpty()===false){X.intersect(W);X.expandByScalar(2);X.min.x=X.min.x+j;X.min.y=-X.min.y+k;X.max.x=X.max.x+j;X.max.y=-X.max.y+k;if(s<1)q.clearRect(X.min.x|0,X.max.y|0,(X.max.x-X.min.x)|0,(X.min.y-X.max.y)|0);if(s>0){as(1);at(THREE.NormalBlending);ay('rgba('+Math.floor(r.r*255)+','+Math.floor(r.g*255)+','+Math.floor(r.b*255)+','+s+')');q.fillRect(X.min.x|0,X.max.y|0,(X.max.x-X.min.x)|0,(X.min.y-X.max.y)|0);}X.makeEmpty();}};this.clearColor=function(){};this.clearDepth=function(){};this.clearStencil=function(){};this.render=function(a,g){if(g.isCamera===undefined){console.error('THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.');return;}var p=a.background;if(p&&p.isColor){as(1);at(THREE.NormalBlending);ay(p.getStyle());q.fillRect(0,0,h,i);}else if(this.autoClear===true)this.clear();b.info.render.vertices=0;b.info.render.faces=0;q.setTransform(n/h,0,0,-o/i,l,i-m);q.translate(j,k);c=f.projectScene(a,g,this.sortObjects,this.sortElements);d=c.elements;e=c.lights;ag.getNormalMatrix(g.matrixWorldInverse);ah();for(var r=0,s=d.length;r<s;r++){var t=d[r];var u=t.material;if(u===undefined||u.opacity===0)continue;Y.makeEmpty();if(t instanceof THREE.RenderableSprite){B=t;B.x*=j;B.y*=k;aj(B,t,u);}else if(t instanceof THREE.RenderableLine){B=t.v1;C=t.v2;B.positionScreen.x*=j;B.positionScreen.y*=k;C.positionScreen.x*=j;C.positionScreen.y*=k;Y.setFromPoints([B.positionScreen,C.positionScreen]);if(W.intersectsBox(Y)===true)ak(B,C,t,u);}else if(t instanceof THREE.RenderableFace){B=t.v1;C=t.v2;D=t.v3;if(B.positionScreen.z<-1||B.positionScreen.z>1)continue;if(C.positionScreen.z<-1||C.positionScreen.z>1)continue;if(D.positionScreen.z<-1||D.positionScreen.z>1)continue;B.positionScreen.x*=j;B.positionScreen.y*=k;C.positionScreen.x*=j;C.positionScreen.y*=k;D.positionScreen.x*=j;D.positionScreen.y*=k;if(u.overdraw>0){ar(B.positionScreen,C.positionScreen,u.overdraw);ar(C.positionScreen,D.positionScreen,u.overdraw);ar(D.positionScreen,B.positionScreen,u.overdraw);}Y.setFromPoints([B.positionScreen,C.positionScreen,D.positionScreen]);if(W.intersectsBox(Y)===true)al(B,C,D,0,1,2,t,u);}X.union(Y);}q.setTransform(1,0,0,1,0,0);};function ah(){Z.setRGB(0,0,0);ab.setRGB(0,0,0);ac.setRGB(0,0,0);for(var a=0,b=e.length;a<b;a++){var c=e[a];var d=c.color;if(c.isAmbientLight)Z.add(d);else if(c.isDirectionalLight)ab.add(d);else if(c.isPointLight)ac.add(d);}}function ai(a,b,c){for(var d=0,f=e.length;d<f;d++){var g=e[d];N.copy(g.color);if(g.isDirectionalLight){var h=ad.setFromMatrixPosition(g.matrixWorld).normalize();var i=b.dot(h);if(i<=0)continue;i*=g.intensity;c.add(N.multiplyScalar(i));}else if(g.isPointLight){var h=ad.setFromMatrixPosition(g.matrixWorld);var i=b.dot(ad.subVectors(h,a).normalize());if(i<=0)continue;i*=g.distance==0?1:1-Math.min(a.distanceTo(h)/g.distance,1);if(i==0)continue;i*=g.intensity;c.add(N.multiplyScalar(i));}}}function aj(a,b,c){as(c.opacity);at(c.blending);var d=b.scale.x*j;var e=b.scale.y*k;var f=Math.sqrt(d*d+e*e);Y.min.set(a.x-f,a.y-f);Y.max.set(a.x+f,a.y+f);if(c.isSpriteMaterial){var g=c.map;if(g!==null){var h=O[g.id];if(h===undefined||h.version!==g.version){h=ap(g);O[g.id]=h;}if(h.canvas!==undefined){ay(h.canvas);var i=g.image;var l=i.width*g.offset.x;var m=i.height*g.offset.y;var n=i.width*g.repeat.x;var o=i.height*g.repeat.y;var p=d/n;var r=e/o;q.save();q.translate(a.x,a.y);if(c.rotation!==0)q.rotate(c.rotation);q.translate(-d/2,-e/2);q.scale(p,r);q.translate(-l,-m);q.fillRect(l,m,n,o);q.restore();}}else{ay(c.color.getStyle());q.save();q.translate(a.x,a.y);if(c.rotation!==0)q.rotate(c.rotation);q.scale(d,-e);q.fillRect(-0.5,-0.5,1,1);q.restore();}}else if(c.isSpriteCanvasMaterial){ax(c.color.getStyle());ay(c.color.getStyle());q.save();q.translate(a.x,a.y);if(c.rotation!==0)q.rotate(c.rotation);q.scale(d,e);c.program(q);q.restore();}else if(c.isPointsMaterial){ay(c.color.getStyle());q.save();q.translate(a.x,a.y);if(c.rotation!==0)q.rotate(c.rotation);q.scale(d*c.size,-e*c.size);q.fillRect(-0.5,-0.5,1,1);q.restore();}}function ak(a,b,c,d){as(d.opacity);at(d.blending);q.beginPath();q.moveTo(a.positionScreen.x,a.positionScreen.y);q.lineTo(b.positionScreen.x,b.positionScreen.y);if(d.isLineBasicMaterial){au(d.linewidth);av(d.linecap);aw(d.linejoin);if(d.vertexColors!==THREE.VertexColors)ax(d.color.getStyle());else{var e=c.vertexColors[0].getStyle();var f=c.vertexColors[1].getStyle();if(e===f)ax(e);else{try{var g=q.createLinearGradient(a.positionScreen.x,a.positionScreen.y,b.positionScreen.x,b.positionScreen.y);g.addColorStop(0,e);g.addColorStop(1,f);}catch(h){g=e;}ax(g);}}if(d.isLineDashedMaterial)az([d.dashSize,d.gapSize]);q.stroke();Y.expandByScalar(d.linewidth*2);if(d.isLineDashedMaterial)az([]);}}function al(a,c,d,e,f,g,h,i){b.info.render.vertices+=3;b.info.render.faces++;as(i.opacity);at(i.blending);E=a.positionScreen.x;F=a.positionScreen.y;G=c.positionScreen.x;H=c.positionScreen.y;I=d.positionScreen.x;J=d.positionScreen.y;am(E,F,G,H,I,J);if((i.isMeshLambertMaterial||i.isMeshPhongMaterial||i.isMeshStandardMaterial)&&i.map===null){L.copy(i.color);M.copy(i.emissive);if(i.vertexColors===THREE.FaceColors)L.multiply(h.color);K.copy(Z);ae.copy(a.positionWorld).add(c.positionWorld).add(d.positionWorld).divideScalar(3);ai(ae,h.normalModel,K);K.multiply(L).add(M);i.wireframe===true?an(K,i.wireframeLinewidth,i.wireframeLinecap,i.wireframeLinejoin):ao(K);}else if(i.isMeshBasicMaterial||i.isMeshLambertMaterial||i.isMeshPhongMaterial||i.isMeshStandardMaterial){if(i.map!==null){var j=i.map.mapping;if(j===THREE.UVMapping){P=h.uvs;aq(E,F,G,H,I,J,P[e].x,P[e].y,P[f].x,P[f].y,P[g].x,P[g].y,i.map);}}else if(i.envMap!==null){if(i.envMap.mapping===THREE.SphericalReflectionMapping){af.copy(h.vertexNormalsModel[e]).applyMatrix3(ag);Q=0.5*af.x+0.5;R=0.5*af.y+0.5;af.copy(h.vertexNormalsModel[f]).applyMatrix3(ag);S=0.5*af.x+0.5;T=0.5*af.y+0.5;af.copy(h.vertexNormalsModel[g]).applyMatrix3(ag);U=0.5*af.x+0.5;V=0.5*af.y+0.5;aq(E,F,G,H,I,J,Q,R,S,T,U,V,i.envMap);}}else{K.copy(i.color);if(i.vertexColors===THREE.FaceColors)K.multiply(h.color);i.wireframe===true?an(K,i.wireframeLinewidth,i.wireframeLinecap,i.wireframeLinejoin):ao(K);}}else if(i.isMeshNormalMaterial){af.copy(h.normalModel).applyMatrix3(ag);K.setRGB(af.x,af.y,af.z).multiplyScalar(0.5).addScalar(0.5);i.wireframe===true?an(K,i.wireframeLinewidth,i.wireframeLinecap,i.wireframeLinejoin):ao(K);}else{K.setRGB(1,1,1);i.wireframe===true?an(K,i.wireframeLinewidth,i.wireframeLinecap,i.wireframeLinejoin):ao(K);}}function am(a,b,c,d,e,f){q.beginPath();q.moveTo(a,b);q.lineTo(c,d);q.lineTo(e,f);q.closePath();}function an(a,b,c,d){au(b);av(c);aw(d);ax(a.getStyle());q.stroke();Y.expandByScalar(b*2);}function ao(a){ay(a.getStyle());q.fill();}function ap(a){if(a.version===0||a instanceof THREE.CompressedTexture||a instanceof THREE.DataTexture)return{canvas:undefined,version:a.version};var b=a.image;if(b.complete===false)return{canvas:undefined,version:0};var c=a.wrapS===THREE.RepeatWrapping||a.wrapS===THREE.MirroredRepeatWrapping;var d=a.wrapT===THREE.RepeatWrapping||a.wrapT===THREE.MirroredRepeatWrapping;var e=a.wrapS===THREE.MirroredRepeatWrapping;var f=a.wrapT===THREE.MirroredRepeatWrapping;var g=document.createElement('canvas');g.width=b.width*(e?2:1);g.height=b.height*(f?2:1);var h=g.getContext('2d');h.setTransform(1,0,0,-1,0,b.height);h.drawImage(b,0,0);if(e===true){h.setTransform(-1,0,0,-1,b.width,b.height);h.drawImage(b,-b.width,0);}if(f===true){h.setTransform(1,0,0,1,0,0);h.drawImage(b,0,b.height);}if(e===true&&f===true){h.setTransform(-1,0,0,1,b.width,0);h.drawImage(b,-b.width,b.height);}var i='no-repeat';if(c===true&&d===true)i='repeat';else if(c===true)i='repeat-x';else if(d===true)i='repeat-y';var j=q.createPattern(g,i);if(a.onUpdate)a.onUpdate(a);return{canvas:j,version:a.version};}function aq(a,b,c,d,e,f,g,h,i,j,k,l,m){var n=O[m.id];if(n===undefined||n.version!==m.version){n=ap(m);O[m.id]=n;}if(n.canvas!==undefined)ay(n.canvas);else{ay('rgba( 0, 0, 0, 1)');q.fill();return;}var o,p,r,s,t,u,v,w,x=m.offset.x/m.repeat.x,y=m.offset.y/m.repeat.y,z=m.image.width*m.repeat.x,A=m.image.height*m.repeat.y;g=(g+x)*z;h=(h+y)*A;i=(i+x)*z;j=(j+y)*A;k=(k+x)*z;l=(l+y)*A;c-=a;d-=b;e-=a;f-=b;i-=g;j-=h;k-=g;l-=h;v=i*l-k*j;if(v===0)return;w=1/v;o=(l*c-j*e)*w;p=(l*d-j*f)*w;r=(i*e-k*c)*w;s=(i*f-k*d)*w;t=a-o*g-r*h;u=b-p*g-s*h;q.save();q.transform(o,p,r,s,t,u);q.fill();q.restore();}function ar(a,b,c){var d=b.x-a.x,e=b.y-a.y,f=d*d+e*e,g;if(f===0)return;g=c/Math.sqrt(f);d*=g;e*=g;b.x+=d;b.y+=e;a.x-=d;a.y-=e;}function as(a){if(t!==a){q.globalAlpha=a;t=a;}}function at(a){if(u!==a){if(a===THREE.NormalBlending)q.globalCompositeOperation='source-over';else if(a===THREE.AdditiveBlending)q.globalCompositeOperation='lighter';else if(a===THREE.SubtractiveBlending)q.globalCompositeOperation='darker';else if(a===THREE.MultiplyBlending)q.globalCompositeOperation='multiply';u=a;}}function au(a){if(x!==a){q.lineWidth=a;x=a;}}function av(a){if(y!==a){q.lineCap=a;y=a;}}function aw(a){if(z!==a){q.lineJoin=a;z=a;}}function ax(a){if(v!==a){q.strokeStyle=a;v=a;}}function ay(a){if(w!==a){q.fillStyle=a;w=a;}}function az(a){if(A.length!==a.length){q.setLineDash(a);A=a;}}};var Detector={canvas:!!window.CanvasRenderingContext2D,webgl:(function(){try{return !!window.WebGLRenderingContext&&!!document.createElement('canvas').getContext('experimental-webgl');}catch(a){return false;}})(),workers:!!window.Worker,fileapi:window.File&&window.FileReader&&window.FileList&&window.Blob,getWebGLErrorMessage:function(){var a=document.createElement('div');a.id='webgl-error-message';a.style.fontFamily='monospace';a.style.fontSize='13px';a.style.fontWeight='normal';a.style.textAlign='center';a.style.background='#fff';a.style.color='#000';a.style.padding='1.5em';a.style.width='400px';a.style.margin='5em auto 0';if(!this.webgl)a.innerHTML=window.WebGLRenderingContext?['Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br />','Find out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.'].join('\n'):['Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br/>','Find out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.'].join('\n');return a;},addGetWebGLMessage:function(a){var b,c,d;a=a||{};b=a.parent!==undefined?a.parent:document.body;c=a.id!==undefined?a.id:'oldie';d=Detector.getWebGLErrorMessage();d.id=c;b.appendChild(d);}};